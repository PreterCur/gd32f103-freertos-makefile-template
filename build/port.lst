ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"port.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "./freertos/src/portable/GCC/ARM_CM3/port.c"
  18              		.section	.data.uxCriticalNesting,"aw"
  19              		.align	2
  22              	uxCriticalNesting:
  23 0000 AAAAAAAA 		.word	-1431655766
  24              		.section	.bss.ucMaxSysCallPriority,"aw",%nobits
  27              	ucMaxSysCallPriority:
  28 0000 00       		.space	1
  29              		.section	.bss.ulMaxPRIGROUPValue,"aw",%nobits
  30              		.align	2
  33              	ulMaxPRIGROUPValue:
  34 0000 00000000 		.space	4
  35              		.section	.rodata.pcInterruptPriorityRegisters,"a"
  36              		.align	2
  39              	pcInterruptPriorityRegisters:
  40 0000 F0E300E0 		.word	-536812560
  41              		.section	.text.pxPortInitialiseStack,"ax",%progbits
  42              		.align	1
  43              		.global	pxPortInitialiseStack
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	pxPortInitialiseStack:
  49              	.LFB61:
   1:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*
   2:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * FreeRTOS Kernel V10.3.1
   3:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:./freertos/src/portable/GCC/ARM_CM3/port.c ****  *
   5:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * the Software without restriction, including without limitation the rights to
   8:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * subject to the following conditions:
  11:./freertos/src/portable/GCC/ARM_CM3/port.c ****  *
  12:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * The above copyright notice and this permission notice shall be included in all
  13:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * copies or substantial portions of the Software.
  14:./freertos/src/portable/GCC/ARM_CM3/port.c ****  *
  15:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 2


  18:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:./freertos/src/portable/GCC/ARM_CM3/port.c ****  *
  22:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * http://www.FreeRTOS.org
  23:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * http://aws.amazon.com/freertos
  24:./freertos/src/portable/GCC/ARM_CM3/port.c ****  *
  25:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * 1 tab == 4 spaces!
  26:./freertos/src/portable/GCC/ARM_CM3/port.c ****  */
  27:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
  28:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------
  29:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * Implementation of functions defined in portable.h for the ARM CM3 port.
  30:./freertos/src/portable/GCC/ARM_CM3/port.c ****  *----------------------------------------------------------*/
  31:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
  32:./freertos/src/portable/GCC/ARM_CM3/port.c **** /* Scheduler includes. */
  33:./freertos/src/portable/GCC/ARM_CM3/port.c **** #include "FreeRTOS.h"
  34:./freertos/src/portable/GCC/ARM_CM3/port.c **** #include "task.h"
  35:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
  36:./freertos/src/portable/GCC/ARM_CM3/port.c **** /* For backward compatibility, ensure configKERNEL_INTERRUPT_PRIORITY is
  37:./freertos/src/portable/GCC/ARM_CM3/port.c **** defined.  The value should also ensure backward compatibility.
  38:./freertos/src/portable/GCC/ARM_CM3/port.c **** FreeRTOS.org versions prior to V4.4.0 did not include this definition. */
  39:./freertos/src/portable/GCC/ARM_CM3/port.c **** #ifndef configKERNEL_INTERRUPT_PRIORITY
  40:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	#define configKERNEL_INTERRUPT_PRIORITY 255
  41:./freertos/src/portable/GCC/ARM_CM3/port.c **** #endif
  42:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
  43:./freertos/src/portable/GCC/ARM_CM3/port.c **** #ifndef configSYSTICK_CLOCK_HZ
  44:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	#define configSYSTICK_CLOCK_HZ configCPU_CLOCK_HZ
  45:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* Ensure the SysTick is clocked at the same frequency as the core. */
  46:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	#define portNVIC_SYSTICK_CLK_BIT	( 1UL << 2UL )
  47:./freertos/src/portable/GCC/ARM_CM3/port.c **** #else
  48:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* The way the SysTick is clocked is not modified in case it is not the same
  49:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	as the core. */
  50:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	#define portNVIC_SYSTICK_CLK_BIT	( 0 )
  51:./freertos/src/portable/GCC/ARM_CM3/port.c **** #endif
  52:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
  53:./freertos/src/portable/GCC/ARM_CM3/port.c **** /* Constants required to manipulate the core.  Registers first... */
  54:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_CTRL_REG			( * ( ( volatile uint32_t * ) 0xe000e010 ) )
  55:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_LOAD_REG			( * ( ( volatile uint32_t * ) 0xe000e014 ) )
  56:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_CURRENT_VALUE_REG	( * ( ( volatile uint32_t * ) 0xe000e018 ) )
  57:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSPRI2_REG				( * ( ( volatile uint32_t * ) 0xe000ed20 ) )
  58:./freertos/src/portable/GCC/ARM_CM3/port.c **** /* ...then bits in the registers. */
  59:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_INT_BIT			( 1UL << 1UL )
  60:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_ENABLE_BIT			( 1UL << 0UL )
  61:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_COUNT_FLAG_BIT		( 1UL << 16UL )
  62:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portNVIC_PENDSVCLEAR_BIT 			( 1UL << 27UL )
  63:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portNVIC_PEND_SYSTICK_CLEAR_BIT		( 1UL << 25UL )
  64:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
  65:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portNVIC_PENDSV_PRI					( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 16UL )
  66:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_PRI				( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 24UL )
  67:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
  68:./freertos/src/portable/GCC/ARM_CM3/port.c **** /* Constants required to check the validity of an interrupt priority. */
  69:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portFIRST_USER_INTERRUPT_NUMBER		( 16 )
  70:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portNVIC_IP_REGISTERS_OFFSET_16 	( 0xE000E3F0 )
  71:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portAIRCR_REG						( * ( ( volatile uint32_t * ) 0xE000ED0C ) )
  72:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portMAX_8_BIT_VALUE					( ( uint8_t ) 0xff )
  73:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portTOP_BIT_OF_BYTE					( ( uint8_t ) 0x80 )
  74:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portMAX_PRIGROUP_BITS				( ( uint8_t ) 7 )
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 3


  75:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portPRIORITY_GROUP_MASK				( 0x07UL << 8UL )
  76:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portPRIGROUP_SHIFT					( 8UL )
  77:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
  78:./freertos/src/portable/GCC/ARM_CM3/port.c **** /* Masks off all bits but the VECTACTIVE bits in the ICSR register. */
  79:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portVECTACTIVE_MASK					( 0xFFUL )
  80:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
  81:./freertos/src/portable/GCC/ARM_CM3/port.c **** /* Constants required to set up the initial stack. */
  82:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portINITIAL_XPSR					( 0x01000000UL )
  83:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
  84:./freertos/src/portable/GCC/ARM_CM3/port.c **** /* The systick is a 24-bit counter. */
  85:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portMAX_24_BIT_NUMBER				( 0xffffffUL )
  86:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
  87:./freertos/src/portable/GCC/ARM_CM3/port.c **** /* A fiddle factor to estimate the number of SysTick counts that would have
  88:./freertos/src/portable/GCC/ARM_CM3/port.c **** occurred while the SysTick counter is stopped during tickless idle
  89:./freertos/src/portable/GCC/ARM_CM3/port.c **** calculations. */
  90:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portMISSED_COUNTS_FACTOR			( 45UL )
  91:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
  92:./freertos/src/portable/GCC/ARM_CM3/port.c **** /* For strict compliance with the Cortex-M spec the task start address should
  93:./freertos/src/portable/GCC/ARM_CM3/port.c **** have bit-0 clear, as it is loaded into the PC on exit from an ISR. */
  94:./freertos/src/portable/GCC/ARM_CM3/port.c **** #define portSTART_ADDRESS_MASK				( ( StackType_t ) 0xfffffffeUL )
  95:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
  96:./freertos/src/portable/GCC/ARM_CM3/port.c **** /* Let the user override the pre-loading of the initial LR with the address of
  97:./freertos/src/portable/GCC/ARM_CM3/port.c **** prvTaskExitError() in case it messes up unwinding of the stack in the
  98:./freertos/src/portable/GCC/ARM_CM3/port.c **** debugger. */
  99:./freertos/src/portable/GCC/ARM_CM3/port.c **** #ifdef configTASK_RETURN_ADDRESS
 100:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	#define portTASK_RETURN_ADDRESS	configTASK_RETURN_ADDRESS
 101:./freertos/src/portable/GCC/ARM_CM3/port.c **** #else
 102:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	#define portTASK_RETURN_ADDRESS	prvTaskExitError
 103:./freertos/src/portable/GCC/ARM_CM3/port.c **** #endif
 104:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 105:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*
 106:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * Setup the timer to generate the tick interrupts.  The implementation in this
 107:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * file is weak to allow application writers to change the timer used to
 108:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * generate the tick interrupt.
 109:./freertos/src/portable/GCC/ARM_CM3/port.c ****  */
 110:./freertos/src/portable/GCC/ARM_CM3/port.c **** void vPortSetupTimerInterrupt( void );
 111:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 112:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*
 113:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * Exception handlers.
 114:./freertos/src/portable/GCC/ARM_CM3/port.c ****  */
 115:./freertos/src/portable/GCC/ARM_CM3/port.c **** void xPortPendSVHandler( void ) __attribute__ (( naked ));
 116:./freertos/src/portable/GCC/ARM_CM3/port.c **** void xPortSysTickHandler( void );
 117:./freertos/src/portable/GCC/ARM_CM3/port.c **** void vPortSVCHandler( void ) __attribute__ (( naked ));
 118:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 119:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*
 120:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * Start first task is a separate function so it can be tested in isolation.
 121:./freertos/src/portable/GCC/ARM_CM3/port.c ****  */
 122:./freertos/src/portable/GCC/ARM_CM3/port.c **** static void prvPortStartFirstTask( void ) __attribute__ (( naked ));
 123:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 124:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*
 125:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * Used to catch tasks that attempt to return from their implementing function.
 126:./freertos/src/portable/GCC/ARM_CM3/port.c ****  */
 127:./freertos/src/portable/GCC/ARM_CM3/port.c **** static void prvTaskExitError( void );
 128:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 129:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 130:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 131:./freertos/src/portable/GCC/ARM_CM3/port.c **** /* Each task maintains its own interrupt status in the critical nesting
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 4


 132:./freertos/src/portable/GCC/ARM_CM3/port.c **** variable. */
 133:./freertos/src/portable/GCC/ARM_CM3/port.c **** static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;
 134:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 135:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*
 136:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * The number of SysTick increments that make up one tick period.
 137:./freertos/src/portable/GCC/ARM_CM3/port.c ****  */
 138:./freertos/src/portable/GCC/ARM_CM3/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 139:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	static uint32_t ulTimerCountsForOneTick = 0;
 140:./freertos/src/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 141:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 142:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*
 143:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * The maximum number of tick periods that can be suppressed is limited by the
 144:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * 24 bit resolution of the SysTick timer.
 145:./freertos/src/portable/GCC/ARM_CM3/port.c ****  */
 146:./freertos/src/portable/GCC/ARM_CM3/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 147:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	static uint32_t xMaximumPossibleSuppressedTicks = 0;
 148:./freertos/src/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 149:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 150:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*
 151:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * Compensate for the CPU cycles that pass while the SysTick is stopped (low
 152:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * power functionality only.
 153:./freertos/src/portable/GCC/ARM_CM3/port.c ****  */
 154:./freertos/src/portable/GCC/ARM_CM3/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 155:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	static uint32_t ulStoppedTimerCompensation = 0;
 156:./freertos/src/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 157:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 158:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*
 159:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * Used by the portASSERT_IF_INTERRUPT_PRIORITY_INVALID() macro to ensure
 160:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * FreeRTOS API functions are not called from interrupts that have been assigned
 161:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * a priority above configMAX_SYSCALL_INTERRUPT_PRIORITY.
 162:./freertos/src/portable/GCC/ARM_CM3/port.c ****  */
 163:./freertos/src/portable/GCC/ARM_CM3/port.c **** #if( configASSERT_DEFINED == 1 )
 164:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	 static uint8_t ucMaxSysCallPriority = 0;
 165:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	 static uint32_t ulMaxPRIGROUPValue = 0;
 166:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	 static const volatile uint8_t * const pcInterruptPriorityRegisters = ( const volatile uint8_t * c
 167:./freertos/src/portable/GCC/ARM_CM3/port.c **** #endif /* configASSERT_DEFINED */
 168:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 169:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 170:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 171:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*
 172:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * See header file for description.
 173:./freertos/src/portable/GCC/ARM_CM3/port.c ****  */
 174:./freertos/src/portable/GCC/ARM_CM3/port.c **** StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParam
 175:./freertos/src/portable/GCC/ARM_CM3/port.c **** {
  50              		.loc 1 175 1
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 16
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55 0000 80B4     		push	{r7}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 7, -4
  59 0002 85B0     		sub	sp, sp, #20
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 24
  62 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 5


  63              	.LCFI2:
  64              		.cfi_def_cfa_register 7
  65 0006 F860     		str	r0, [r7, #12]
  66 0008 B960     		str	r1, [r7, #8]
  67 000a 7A60     		str	r2, [r7, #4]
 176:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 177:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	interrupt. */
 178:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--; /* Offset added to account for the way the MCU uses the stack on entry/exit of int
  68              		.loc 1 178 14
  69 000c FB68     		ldr	r3, [r7, #12]
  70 000e 043B     		subs	r3, r3, #4
  71 0010 FB60     		str	r3, [r7, #12]
 179:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
  72              		.loc 1 179 16
  73 0012 FB68     		ldr	r3, [r7, #12]
  74 0014 4FF08072 		mov	r2, #16777216
  75 0018 1A60     		str	r2, [r3]
 180:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
  76              		.loc 1 180 14
  77 001a FB68     		ldr	r3, [r7, #12]
  78 001c 043B     		subs	r3, r3, #4
  79 001e FB60     		str	r3, [r7, #12]
 181:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
  80              		.loc 1 181 20
  81 0020 BB68     		ldr	r3, [r7, #8]
  82              		.loc 1 181 45
  83 0022 23F00102 		bic	r2, r3, #1
  84              		.loc 1 181 16
  85 0026 FB68     		ldr	r3, [r7, #12]
  86 0028 1A60     		str	r2, [r3]
 182:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
  87              		.loc 1 182 14
  88 002a FB68     		ldr	r3, [r7, #12]
  89 002c 043B     		subs	r3, r3, #4
  90 002e FB60     		str	r3, [r7, #12]
 183:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
  91              		.loc 1 183 18
  92 0030 084A     		ldr	r2, .L3
  93              		.loc 1 183 16
  94 0032 FB68     		ldr	r3, [r7, #12]
  95 0034 1A60     		str	r2, [r3]
 184:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
  96              		.loc 1 184 15
  97 0036 FB68     		ldr	r3, [r7, #12]
  98 0038 143B     		subs	r3, r3, #20
  99 003a FB60     		str	r3, [r7, #12]
 185:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 100              		.loc 1 185 18
 101 003c 7A68     		ldr	r2, [r7, #4]
 102              		.loc 1 185 16
 103 003e FB68     		ldr	r3, [r7, #12]
 104 0040 1A60     		str	r2, [r3]
 186:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
 105              		.loc 1 186 15
 106 0042 FB68     		ldr	r3, [r7, #12]
 107 0044 203B     		subs	r3, r3, #32
 108 0046 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 6


 187:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 188:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	return pxTopOfStack;
 109              		.loc 1 188 9
 110 0048 FB68     		ldr	r3, [r7, #12]
 189:./freertos/src/portable/GCC/ARM_CM3/port.c **** }
 111              		.loc 1 189 1
 112 004a 1846     		mov	r0, r3
 113 004c 1437     		adds	r7, r7, #20
 114              	.LCFI3:
 115              		.cfi_def_cfa_offset 4
 116 004e BD46     		mov	sp, r7
 117              	.LCFI4:
 118              		.cfi_def_cfa_register 13
 119              		@ sp needed
 120 0050 80BC     		pop	{r7}
 121              	.LCFI5:
 122              		.cfi_restore 7
 123              		.cfi_def_cfa_offset 0
 124 0052 7047     		bx	lr
 125              	.L4:
 126              		.align	2
 127              	.L3:
 128 0054 00000000 		.word	prvTaskExitError
 129              		.cfi_endproc
 130              	.LFE61:
 132              		.section	.text.prvTaskExitError,"ax",%progbits
 133              		.align	1
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 138              	prvTaskExitError:
 139              	.LFB62:
 190:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 191:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 192:./freertos/src/portable/GCC/ARM_CM3/port.c **** static void prvTaskExitError( void )
 193:./freertos/src/portable/GCC/ARM_CM3/port.c **** {
 140              		.loc 1 193 1
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 16
 143              		@ frame_needed = 1, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145 0000 80B4     		push	{r7}
 146              	.LCFI6:
 147              		.cfi_def_cfa_offset 4
 148              		.cfi_offset 7, -4
 149 0002 85B0     		sub	sp, sp, #20
 150              	.LCFI7:
 151              		.cfi_def_cfa_offset 24
 152 0004 00AF     		add	r7, sp, #0
 153              	.LCFI8:
 154              		.cfi_def_cfa_register 7
 194:./freertos/src/portable/GCC/ARM_CM3/port.c **** volatile uint32_t ulDummy = 0UL;
 155              		.loc 1 194 19
 156 0006 0023     		movs	r3, #0
 157 0008 7B60     		str	r3, [r7, #4]
 195:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 196:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* A function that implements a task must not exit or attempt to return to
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 7


 197:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	its caller as there is nothing to return to.  If a task wants to exit it
 198:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	should instead call vTaskDelete( NULL ).
 199:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 200:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	Artificially force an assert() to be triggered if configASSERT() is
 201:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	defined, then stop here so application writers can catch the error. */
 202:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	configASSERT( uxCriticalNesting == ~0UL );
 158              		.loc 1 202 2
 159 000a 124B     		ldr	r3, .L9
 160 000c 1B68     		ldr	r3, [r3]
 161 000e B3F1FF3F 		cmp	r3, #-1
 162 0012 0BD0     		beq	.L6
 163              	.LBB29:
 164              	.LBB30:
 165              		.file 2 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h"
   1:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  28:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  29:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  32:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  36:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 8


  44:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  46:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  55:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  59:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  66:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  72:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  78:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** }
  89:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  90:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  96:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 9


 101:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 106:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 108:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 115:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 122:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 127:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 129:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 134:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 138:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 143:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 147:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 149:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 151:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 153:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 155:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 10


 158:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 160:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 163:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 165:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 169:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 170:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 171:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** {
 173:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 174:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 175:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 176:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 177:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 178:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 179:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 180:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	{
 181:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 182:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	}
 183:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	else
 184:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	{
 185:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 186:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	}
 187:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 188:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 189:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** }
 190:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 191:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 192:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 193:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 194:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** {
 195:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 196:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 166              		.loc 2 197 2
 167              		.syntax unified
 168              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 169 0014 4FF05003 			mov r3, #80												
 170 0018 83F31188 		msr basepri, r3											
 171 001c BFF36F8F 		isb														
 172 0020 BFF34F8F 		dsb														
 173              	
 174              	@ 0 "" 2
 175              		.thumb
 176              		.syntax unified
 177 0024 FB60     		str	r3, [r7, #12]
 198:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 199:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 200:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 201:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 202:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 11


 203:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 204:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	);
 205:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** }
 178              		.loc 2 205 1
 179 0026 00BF     		nop
 180              	.L7:
 181              	.LBE30:
 182              	.LBE29:
 183              		.loc 1 202 2
 184 0028 00BF     		nop
 185 002a FDE7     		b	.L7
 186              	.L6:
 187              	.LBB31:
 188              	.LBB32:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 189              		.loc 2 197 2
 190              		.syntax unified
 191              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 192 002c 4FF05003 			mov r3, #80												
 193 0030 83F31188 		msr basepri, r3											
 194 0034 BFF36F8F 		isb														
 195 0038 BFF34F8F 		dsb														
 196              	
 197              	@ 0 "" 2
 198              		.thumb
 199              		.syntax unified
 200 003c BB60     		str	r3, [r7, #8]
 201              		.loc 2 205 1
 202 003e 00BF     		nop
 203              	.LBE32:
 204              	.LBE31:
 203:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	portDISABLE_INTERRUPTS();
 204:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	while( ulDummy == 0 )
 205              		.loc 1 204 7
 206 0040 00BF     		nop
 207              	.L8:
 208              		.loc 1 204 17 discriminator 1
 209 0042 7B68     		ldr	r3, [r7, #4]
 210 0044 002B     		cmp	r3, #0
 211 0046 FCD0     		beq	.L8
 205:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	{
 206:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* This file calls prvTaskExitError() after the scheduler has been
 207:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		started to remove a compiler warning about the function being defined
 208:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		but never called.  ulDummy is used purely to quieten other warnings
 209:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		about code appearing after this function is called - making ulDummy
 210:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		volatile makes the compiler think the function could return and
 211:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		therefore not output an 'unreachable code' warning for code that appears
 212:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		after it. */
 213:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	}
 214:./freertos/src/portable/GCC/ARM_CM3/port.c **** }
 212              		.loc 1 214 1
 213 0048 00BF     		nop
 214 004a 00BF     		nop
 215 004c 1437     		adds	r7, r7, #20
 216              	.LCFI9:
 217              		.cfi_def_cfa_offset 4
 218 004e BD46     		mov	sp, r7
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 12


 219              	.LCFI10:
 220              		.cfi_def_cfa_register 13
 221              		@ sp needed
 222 0050 80BC     		pop	{r7}
 223              	.LCFI11:
 224              		.cfi_restore 7
 225              		.cfi_def_cfa_offset 0
 226 0052 7047     		bx	lr
 227              	.L10:
 228              		.align	2
 229              	.L9:
 230 0054 00000000 		.word	uxCriticalNesting
 231              		.cfi_endproc
 232              	.LFE62:
 234              		.section	.text.SVC_Handler,"ax",%progbits
 235              		.align	1
 236              		.global	SVC_Handler
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 241              	SVC_Handler:
 242              	.LFB63:
 215:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 216:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 217:./freertos/src/portable/GCC/ARM_CM3/port.c **** void vPortSVCHandler( void )
 218:./freertos/src/portable/GCC/ARM_CM3/port.c **** {
 243              		.loc 1 218 1
 244              		.cfi_startproc
 245              		@ Naked Function: prologue and epilogue provided by programmer.
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 219:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	__asm volatile (
 248              		.loc 1 219 2
 249              		.syntax unified
 250              	@ 219 "./freertos/src/portable/GCC/ARM_CM3/port.c" 1
 251 0000 074B     			ldr	r3, pxCurrentTCBConst2		
 252 0002 1968     		ldr r1, [r3]					
 253 0004 0868     		ldr r0, [r1]					
 254 0006 B0E8F00F 		ldmia r0!, {r4-r11}				
 255 000a 80F30988 		msr psp, r0						
 256 000e BFF36F8F 		isb								
 257 0012 4FF00000 		mov r0, #0 						
 258 0016 80F31188 		msr	basepri, r0					
 259 001a 4EF00D0E 		orr r14, #0xd					
 260 001e 7047     		bx r14							
 261              										
 262              		.align 4						
 263 0020 00000000 	pxCurrentTCBConst2: .word pxCurrentTCB				
 264              	
 265              	@ 0 "" 2
 220:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					"	ldr	r3, pxCurrentTCBConst2		\n" /* Restore the context. */
 221:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					"	ldr r1, [r3]					\n" /* Use pxCurrentTCBConst to get the pxCurrentTCB address. */
 222:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					"	ldr r0, [r1]					\n" /* The first item in pxCurrentTCB is the task top of stack. */
 223:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					"	ldmia r0!, {r4-r11}				\n" /* Pop the registers that are not automatically saved on exceptio
 224:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					"	msr psp, r0						\n" /* Restore the task stack pointer. */
 225:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					"	isb								\n"
 226:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					"	mov r0, #0 						\n"
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 13


 227:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					"	msr	basepri, r0					\n"
 228:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					"	orr r14, #0xd					\n"
 229:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					"	bx r14							\n"
 230:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					"									\n"
 231:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					"	.align 4						\n"
 232:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					"pxCurrentTCBConst2: .word pxCurrentTCB				\n"
 233:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				);
 234:./freertos/src/portable/GCC/ARM_CM3/port.c **** }
 266              		.loc 1 234 1
 267              		.thumb
 268              		.syntax unified
 269 0024 00BF     		nop
 270              		.cfi_endproc
 271              	.LFE63:
 273 0026 00BF     		.section	.text.prvPortStartFirstTask,"ax",%progbits
 274              		.align	1
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 279              	prvPortStartFirstTask:
 280              	.LFB64:
 235:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 236:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 237:./freertos/src/portable/GCC/ARM_CM3/port.c **** static void prvPortStartFirstTask( void )
 238:./freertos/src/portable/GCC/ARM_CM3/port.c **** {
 281              		.loc 1 238 1
 282              		.cfi_startproc
 283              		@ Naked Function: prologue and epilogue provided by programmer.
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 1, uses_anonymous_args = 0
 239:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	__asm volatile(
 286              		.loc 1 239 2
 287              		.syntax unified
 288              	@ 239 "./freertos/src/portable/GCC/ARM_CM3/port.c" 1
 289 0000 0648     		 ldr r0, =0xE000ED08 	
 290 0002 0068     	 ldr r0, [r0] 			
 291 0004 0068     	 ldr r0, [r0] 			
 292 0006 80F30888 	 msr msp, r0			
 293 000a 62B6     	 cpsie i				
 294 000c 61B6     	 cpsie f				
 295 000e BFF34F8F 	 dsb					
 296 0012 BFF36F8F 	 isb					
 297 0016 00DF     	 svc 0					
 298 0018 00BF     	 nop					
 299              	
 300              	@ 0 "" 2
 240:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					" ldr r0, =0xE000ED08 	\n" /* Use the NVIC offset register to locate the stack. */
 241:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					" ldr r0, [r0] 			\n"
 242:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					" ldr r0, [r0] 			\n"
 243:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					" msr msp, r0			\n" /* Set the msp back to the start of the stack. */
 244:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					" cpsie i				\n" /* Globally enable interrupts. */
 245:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					" cpsie f				\n"
 246:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					" dsb					\n"
 247:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					" isb					\n"
 248:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					" svc 0					\n" /* System call to start first task. */
 249:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					" nop					\n"
 250:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				);
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 14


 251:./freertos/src/portable/GCC/ARM_CM3/port.c **** }
 301              		.loc 1 251 1
 302              		.thumb
 303              		.syntax unified
 304 001a 00BF     		nop
 305              		.cfi_endproc
 306              	.LFE64:
 308              		.section	.text.xPortStartScheduler,"ax",%progbits
 309              		.align	1
 310              		.global	xPortStartScheduler
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 315              	xPortStartScheduler:
 316              	.LFB65:
 252:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 253:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 254:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*
 255:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * See header file for description.
 256:./freertos/src/portable/GCC/ARM_CM3/port.c ****  */
 257:./freertos/src/portable/GCC/ARM_CM3/port.c **** BaseType_t xPortStartScheduler( void )
 258:./freertos/src/portable/GCC/ARM_CM3/port.c **** {
 317              		.loc 1 258 1
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 24
 320              		@ frame_needed = 1, uses_anonymous_args = 0
 321 0000 80B5     		push	{r7, lr}
 322              	.LCFI12:
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 7, -8
 325              		.cfi_offset 14, -4
 326 0002 86B0     		sub	sp, sp, #24
 327              	.LCFI13:
 328              		.cfi_def_cfa_offset 32
 329 0004 00AF     		add	r7, sp, #0
 330              	.LCFI14:
 331              		.cfi_def_cfa_register 7
 332              	.LBB33:
 259:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 260:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	See http://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
 261:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	configASSERT( configMAX_SYSCALL_INTERRUPT_PRIORITY );
 262:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 263:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	#if( configASSERT_DEFINED == 1 )
 264:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	{
 265:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		volatile uint32_t ulOriginalPriority;
 266:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( portNVIC_I
 333              		.loc 1 266 28
 334 0006 3B4B     		ldr	r3, .L21
 335 0008 7B61     		str	r3, [r7, #20]
 267:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		volatile uint8_t ucMaxPriorityValue;
 268:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 269:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* Determine the maximum priority from which ISR safe FreeRTOS API
 270:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		functions can be called.  ISR safe functions are those that end in
 271:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		"FromISR".  FreeRTOS maintains separate thread and ISR API functions to
 272:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		ensure interrupt entry is as fast and simple as possible.
 273:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 274:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		Save the interrupt priority value that is about to be clobbered. */
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 15


 275:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		ulOriginalPriority = *pucFirstUserPriorityRegister;
 336              		.loc 1 275 24
 337 000a 7B69     		ldr	r3, [r7, #20]
 338 000c 1B78     		ldrb	r3, [r3]
 339 000e DBB2     		uxtb	r3, r3
 340              		.loc 1 275 22
 341 0010 BB60     		str	r3, [r7, #8]
 276:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 277:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* Determine the number of priority bits available.  First write to all
 278:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		possible bits. */
 279:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 342              		.loc 1 279 33
 343 0012 7B69     		ldr	r3, [r7, #20]
 344 0014 FF22     		movs	r2, #255
 345 0016 1A70     		strb	r2, [r3]
 280:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 281:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* Read the value back to see how many bits stuck. */
 282:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 346              		.loc 1 282 24
 347 0018 7B69     		ldr	r3, [r7, #20]
 348 001a 1B78     		ldrb	r3, [r3]
 349 001c DBB2     		uxtb	r3, r3
 350              		.loc 1 282 22
 351 001e FB71     		strb	r3, [r7, #7]
 283:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 284:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* Use the same mask on the maximum system call priority. */
 285:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 352              		.loc 1 285 63
 353 0020 FB79     		ldrb	r3, [r7, #7]
 354 0022 DBB2     		uxtb	r3, r3
 355 0024 03F05003 		and	r3, r3, #80
 356 0028 DAB2     		uxtb	r2, r3
 357              		.loc 1 285 24
 358 002a 334B     		ldr	r3, .L21+4
 359 002c 1A70     		strb	r2, [r3]
 286:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 287:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* Calculate the maximum acceptable priority group value for the number
 288:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		of bits read back. */
 289:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 360              		.loc 1 289 22
 361 002e 334B     		ldr	r3, .L21+8
 362 0030 0722     		movs	r2, #7
 363 0032 1A60     		str	r2, [r3]
 290:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 364              		.loc 1 290 8
 365 0034 09E0     		b	.L14
 366              	.L15:
 291:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		{
 292:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			ulMaxPRIGROUPValue--;
 367              		.loc 1 292 22
 368 0036 314B     		ldr	r3, .L21+8
 369 0038 1B68     		ldr	r3, [r3]
 370 003a 013B     		subs	r3, r3, #1
 371 003c 2F4A     		ldr	r2, .L21+8
 372 003e 1360     		str	r3, [r2]
 293:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 373              		.loc 1 293 23
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 16


 374 0040 FB79     		ldrb	r3, [r7, #7]
 375 0042 DBB2     		uxtb	r3, r3
 376 0044 5B00     		lsls	r3, r3, #1
 377 0046 DBB2     		uxtb	r3, r3
 378 0048 FB71     		strb	r3, [r7, #7]
 379              	.L14:
 290:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 380              		.loc 1 290 31
 381 004a FB79     		ldrb	r3, [r7, #7]
 382 004c DBB2     		uxtb	r3, r3
 383 004e 03F08003 		and	r3, r3, #128
 290:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 384              		.loc 1 290 55
 385 0052 802B     		cmp	r3, #128
 386 0054 EFD0     		beq	.L15
 294:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		}
 295:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 296:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		#ifdef __NVIC_PRIO_BITS
 297:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		{
 298:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Check the CMSIS configuration that defines the number of
 299:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			priority bits matches the number of priority bits actually queried
 300:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			from the hardware. */
 301:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BITS );
 387              		.loc 1 301 4
 388 0056 294B     		ldr	r3, .L21+8
 389 0058 1B68     		ldr	r3, [r3]
 390 005a C3F10703 		rsb	r3, r3, #7
 391 005e 042B     		cmp	r3, #4
 392 0060 0BD0     		beq	.L16
 393              	.LBB34:
 394              	.LBB35:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 395              		.loc 2 197 2
 396              		.syntax unified
 397              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 398 0062 4FF05003 			mov r3, #80												
 399 0066 83F31188 		msr basepri, r3											
 400 006a BFF36F8F 		isb														
 401 006e BFF34F8F 		dsb														
 402              	
 403              	@ 0 "" 2
 404              		.thumb
 405              		.syntax unified
 406 0072 FB60     		str	r3, [r7, #12]
 407              		.loc 2 205 1
 408 0074 00BF     		nop
 409              	.L17:
 410              	.LBE35:
 411              	.LBE34:
 412              		.loc 1 301 4
 413 0076 00BF     		nop
 414 0078 FDE7     		b	.L17
 415              	.L16:
 302:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		}
 303:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		#endif
 304:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 305:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		#ifdef configPRIO_BITS
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 17


 306:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		{
 307:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Check the FreeRTOS configuration that defines the number of
 308:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			priority bits matches the number of priority bits actually queried
 309:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			from the hardware. */
 310:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 416              		.loc 1 310 4
 417 007a 204B     		ldr	r3, .L21+8
 418 007c 1B68     		ldr	r3, [r3]
 419 007e C3F10703 		rsb	r3, r3, #7
 420 0082 042B     		cmp	r3, #4
 421 0084 0BD0     		beq	.L18
 422              	.LBB36:
 423              	.LBB37:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 424              		.loc 2 197 2
 425              		.syntax unified
 426              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 427 0086 4FF05003 			mov r3, #80												
 428 008a 83F31188 		msr basepri, r3											
 429 008e BFF36F8F 		isb														
 430 0092 BFF34F8F 		dsb														
 431              	
 432              	@ 0 "" 2
 433              		.thumb
 434              		.syntax unified
 435 0096 3B61     		str	r3, [r7, #16]
 436              		.loc 2 205 1
 437 0098 00BF     		nop
 438              	.L19:
 439              	.LBE37:
 440              	.LBE36:
 441              		.loc 1 310 4
 442 009a 00BF     		nop
 443 009c FDE7     		b	.L19
 444              	.L18:
 311:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		}
 312:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		#endif
 313:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 314:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* Shift the priority group value back to its position within the AIRCR
 315:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		register. */
 316:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 445              		.loc 1 316 22
 446 009e 174B     		ldr	r3, .L21+8
 447 00a0 1B68     		ldr	r3, [r3]
 448 00a2 1B02     		lsls	r3, r3, #8
 449 00a4 154A     		ldr	r2, .L21+8
 450 00a6 1360     		str	r3, [r2]
 317:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 451              		.loc 1 317 22
 452 00a8 144B     		ldr	r3, .L21+8
 453 00aa 1B68     		ldr	r3, [r3]
 454 00ac 03F4E063 		and	r3, r3, #1792
 455 00b0 124A     		ldr	r2, .L21+8
 456 00b2 1360     		str	r3, [r2]
 318:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 319:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* Restore the clobbered interrupt priority register to its original
 320:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		value. */
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 18


 321:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		*pucFirstUserPriorityRegister = ulOriginalPriority;
 457              		.loc 1 321 33
 458 00b4 BB68     		ldr	r3, [r7, #8]
 459 00b6 DAB2     		uxtb	r2, r3
 460 00b8 7B69     		ldr	r3, [r7, #20]
 461 00ba 1A70     		strb	r2, [r3]
 462              	.LBE33:
 322:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	}
 323:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	#endif /* conifgASSERT_DEFINED */
 324:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 325:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* Make PendSV and SysTick the lowest priority interrupts. */
 326:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 463              		.loc 1 326 2
 464 00bc 104B     		ldr	r3, .L21+12
 465 00be 1B68     		ldr	r3, [r3]
 466 00c0 0F4A     		ldr	r2, .L21+12
 467              		.loc 1 326 23
 468 00c2 43F47003 		orr	r3, r3, #15728640
 469 00c6 1360     		str	r3, [r2]
 327:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 470              		.loc 1 327 2
 471 00c8 0D4B     		ldr	r3, .L21+12
 472 00ca 1B68     		ldr	r3, [r3]
 473 00cc 0C4A     		ldr	r2, .L21+12
 474              		.loc 1 327 23
 475 00ce 43F07043 		orr	r3, r3, #-268435456
 476 00d2 1360     		str	r3, [r2]
 328:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 329:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* Start the timer that generates the tick ISR.  Interrupts are disabled
 330:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	here already. */
 331:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	vPortSetupTimerInterrupt();
 477              		.loc 1 331 2
 478 00d4 FFF7FEFF 		bl	vPortSetupTimerInterrupt
 332:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 333:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* Initialise the critical nesting count ready for the first task. */
 334:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	uxCriticalNesting = 0;
 479              		.loc 1 334 20
 480 00d8 0A4B     		ldr	r3, .L21+16
 481 00da 0022     		movs	r2, #0
 482 00dc 1A60     		str	r2, [r3]
 335:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 336:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* Start the first task. */
 337:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	prvPortStartFirstTask();
 483              		.loc 1 337 2
 484 00de FFF7FEFF 		bl	prvPortStartFirstTask
 338:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 339:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* Should never get here as the tasks will now be executing!  Call the task
 340:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	exit error function to prevent compiler warnings about a static function
 341:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	not being called in the case that the application writer overrides this
 342:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	functionality by defining configTASK_RETURN_ADDRESS.  Call
 343:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	vTaskSwitchContext() so link time optimisation does not remove the
 344:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	symbol. */
 345:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	vTaskSwitchContext();
 485              		.loc 1 345 2
 486 00e2 FFF7FEFF 		bl	vTaskSwitchContext
 346:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	prvTaskExitError();
 487              		.loc 1 346 2
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 19


 488 00e6 FFF7FEFF 		bl	prvTaskExitError
 347:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 348:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* Should not get here! */
 349:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	return 0;
 489              		.loc 1 349 9
 490 00ea 0023     		movs	r3, #0
 350:./freertos/src/portable/GCC/ARM_CM3/port.c **** }
 491              		.loc 1 350 1
 492 00ec 1846     		mov	r0, r3
 493 00ee 1837     		adds	r7, r7, #24
 494              	.LCFI15:
 495              		.cfi_def_cfa_offset 8
 496 00f0 BD46     		mov	sp, r7
 497              	.LCFI16:
 498              		.cfi_def_cfa_register 13
 499              		@ sp needed
 500 00f2 80BD     		pop	{r7, pc}
 501              	.L22:
 502              		.align	2
 503              	.L21:
 504 00f4 00E400E0 		.word	-536812544
 505 00f8 00000000 		.word	ucMaxSysCallPriority
 506 00fc 00000000 		.word	ulMaxPRIGROUPValue
 507 0100 20ED00E0 		.word	-536810208
 508 0104 00000000 		.word	uxCriticalNesting
 509              		.cfi_endproc
 510              	.LFE65:
 512              		.section	.text.vPortEndScheduler,"ax",%progbits
 513              		.align	1
 514              		.global	vPortEndScheduler
 515              		.syntax unified
 516              		.thumb
 517              		.thumb_func
 519              	vPortEndScheduler:
 520              	.LFB66:
 351:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 352:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 353:./freertos/src/portable/GCC/ARM_CM3/port.c **** void vPortEndScheduler( void )
 354:./freertos/src/portable/GCC/ARM_CM3/port.c **** {
 521              		.loc 1 354 1
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 8
 524              		@ frame_needed = 1, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526 0000 80B4     		push	{r7}
 527              	.LCFI17:
 528              		.cfi_def_cfa_offset 4
 529              		.cfi_offset 7, -4
 530 0002 83B0     		sub	sp, sp, #12
 531              	.LCFI18:
 532              		.cfi_def_cfa_offset 16
 533 0004 00AF     		add	r7, sp, #0
 534              	.LCFI19:
 535              		.cfi_def_cfa_register 7
 355:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* Not implemented in ports where there is nothing to return to.
 356:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	Artificially force an assert. */
 357:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	configASSERT( uxCriticalNesting == 1000UL );
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 20


 536              		.loc 1 357 2
 537 0006 0B4B     		ldr	r3, .L27
 538 0008 1B68     		ldr	r3, [r3]
 539 000a B3F57A7F 		cmp	r3, #1000
 540 000e 0BD0     		beq	.L26
 541              	.LBB38:
 542              	.LBB39:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 543              		.loc 2 197 2
 544              		.syntax unified
 545              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 546 0010 4FF05003 			mov r3, #80												
 547 0014 83F31188 		msr basepri, r3											
 548 0018 BFF36F8F 		isb														
 549 001c BFF34F8F 		dsb														
 550              	
 551              	@ 0 "" 2
 552              		.thumb
 553              		.syntax unified
 554 0020 7B60     		str	r3, [r7, #4]
 555              		.loc 2 205 1
 556 0022 00BF     		nop
 557              	.L25:
 558              	.LBE39:
 559              	.LBE38:
 560              		.loc 1 357 2
 561 0024 00BF     		nop
 562 0026 FDE7     		b	.L25
 563              	.L26:
 358:./freertos/src/portable/GCC/ARM_CM3/port.c **** }
 564              		.loc 1 358 1
 565 0028 00BF     		nop
 566 002a 0C37     		adds	r7, r7, #12
 567              	.LCFI20:
 568              		.cfi_def_cfa_offset 4
 569 002c BD46     		mov	sp, r7
 570              	.LCFI21:
 571              		.cfi_def_cfa_register 13
 572              		@ sp needed
 573 002e 80BC     		pop	{r7}
 574              	.LCFI22:
 575              		.cfi_restore 7
 576              		.cfi_def_cfa_offset 0
 577 0030 7047     		bx	lr
 578              	.L28:
 579 0032 00BF     		.align	2
 580              	.L27:
 581 0034 00000000 		.word	uxCriticalNesting
 582              		.cfi_endproc
 583              	.LFE66:
 585              		.section	.text.vPortEnterCritical,"ax",%progbits
 586              		.align	1
 587              		.global	vPortEnterCritical
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 592              	vPortEnterCritical:
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 21


 593              	.LFB67:
 359:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 360:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 361:./freertos/src/portable/GCC/ARM_CM3/port.c **** void vPortEnterCritical( void )
 362:./freertos/src/portable/GCC/ARM_CM3/port.c **** {
 594              		.loc 1 362 1
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 8
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599 0000 80B4     		push	{r7}
 600              	.LCFI23:
 601              		.cfi_def_cfa_offset 4
 602              		.cfi_offset 7, -4
 603 0002 83B0     		sub	sp, sp, #12
 604              	.LCFI24:
 605              		.cfi_def_cfa_offset 16
 606 0004 00AF     		add	r7, sp, #0
 607              	.LCFI25:
 608              		.cfi_def_cfa_register 7
 609              	.LBB40:
 610              	.LBB41:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 611              		.loc 2 197 2
 612              		.syntax unified
 613              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 614 0006 4FF05003 			mov r3, #80												
 615 000a 83F31188 		msr basepri, r3											
 616 000e BFF36F8F 		isb														
 617 0012 BFF34F8F 		dsb														
 618              	
 619              	@ 0 "" 2
 620              		.thumb
 621              		.syntax unified
 622 0016 7B60     		str	r3, [r7, #4]
 623              		.loc 2 205 1
 624 0018 00BF     		nop
 625              	.LBE41:
 626              	.LBE40:
 363:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	portDISABLE_INTERRUPTS();
 364:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	uxCriticalNesting++;
 627              		.loc 1 364 19
 628 001a 0F4B     		ldr	r3, .L33
 629 001c 1B68     		ldr	r3, [r3]
 630 001e 0133     		adds	r3, r3, #1
 631 0020 0D4A     		ldr	r2, .L33
 632 0022 1360     		str	r3, [r2]
 365:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 366:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* This is not the interrupt safe version of the enter critical function so
 367:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	assert() if it is being called from an interrupt context.  Only API
 368:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	functions that end in "FromISR" can be used in an interrupt.  Only assert if
 369:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	the critical nesting count is 1 to protect against recursive calls if the
 370:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	assert function also uses a critical section. */
 371:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	if( uxCriticalNesting == 1 )
 633              		.loc 1 371 24
 634 0024 0C4B     		ldr	r3, .L33
 635 0026 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 22


 636              		.loc 1 371 4
 637 0028 012B     		cmp	r3, #1
 638 002a 10D1     		bne	.L32
 372:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	{
 373:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 639              		.loc 1 373 3
 640 002c 0B4B     		ldr	r3, .L33+4
 641 002e 1B68     		ldr	r3, [r3]
 642 0030 DBB2     		uxtb	r3, r3
 643 0032 002B     		cmp	r3, #0
 644 0034 0BD0     		beq	.L32
 645              	.LBB42:
 646              	.LBB43:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 647              		.loc 2 197 2
 648              		.syntax unified
 649              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 650 0036 4FF05003 			mov r3, #80												
 651 003a 83F31188 		msr basepri, r3											
 652 003e BFF36F8F 		isb														
 653 0042 BFF34F8F 		dsb														
 654              	
 655              	@ 0 "" 2
 656              		.thumb
 657              		.syntax unified
 658 0046 3B60     		str	r3, [r7]
 659              		.loc 2 205 1
 660 0048 00BF     		nop
 661              	.L31:
 662              	.LBE43:
 663              	.LBE42:
 664              		.loc 1 373 3
 665 004a 00BF     		nop
 666 004c FDE7     		b	.L31
 667              	.L32:
 374:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	}
 375:./freertos/src/portable/GCC/ARM_CM3/port.c **** }
 668              		.loc 1 375 1
 669 004e 00BF     		nop
 670 0050 0C37     		adds	r7, r7, #12
 671              	.LCFI26:
 672              		.cfi_def_cfa_offset 4
 673 0052 BD46     		mov	sp, r7
 674              	.LCFI27:
 675              		.cfi_def_cfa_register 13
 676              		@ sp needed
 677 0054 80BC     		pop	{r7}
 678              	.LCFI28:
 679              		.cfi_restore 7
 680              		.cfi_def_cfa_offset 0
 681 0056 7047     		bx	lr
 682              	.L34:
 683              		.align	2
 684              	.L33:
 685 0058 00000000 		.word	uxCriticalNesting
 686 005c 04ED00E0 		.word	-536810236
 687              		.cfi_endproc
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 23


 688              	.LFE67:
 690              		.section	.text.vPortExitCritical,"ax",%progbits
 691              		.align	1
 692              		.global	vPortExitCritical
 693              		.syntax unified
 694              		.thumb
 695              		.thumb_func
 697              	vPortExitCritical:
 698              	.LFB68:
 376:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 377:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 378:./freertos/src/portable/GCC/ARM_CM3/port.c **** void vPortExitCritical( void )
 379:./freertos/src/portable/GCC/ARM_CM3/port.c **** {
 699              		.loc 1 379 1
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 8
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 704 0000 80B4     		push	{r7}
 705              	.LCFI29:
 706              		.cfi_def_cfa_offset 4
 707              		.cfi_offset 7, -4
 708 0002 83B0     		sub	sp, sp, #12
 709              	.LCFI30:
 710              		.cfi_def_cfa_offset 16
 711 0004 00AF     		add	r7, sp, #0
 712              	.LCFI31:
 713              		.cfi_def_cfa_register 7
 380:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	configASSERT( uxCriticalNesting );
 714              		.loc 1 380 2
 715 0006 124B     		ldr	r3, .L40
 716 0008 1B68     		ldr	r3, [r3]
 717 000a 002B     		cmp	r3, #0
 718 000c 0BD1     		bne	.L36
 719              	.LBB44:
 720              	.LBB45:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 721              		.loc 2 197 2
 722              		.syntax unified
 723              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 724 000e 4FF05003 			mov r3, #80												
 725 0012 83F31188 		msr basepri, r3											
 726 0016 BFF36F8F 		isb														
 727 001a BFF34F8F 		dsb														
 728              	
 729              	@ 0 "" 2
 730              		.thumb
 731              		.syntax unified
 732 001e 7B60     		str	r3, [r7, #4]
 733              		.loc 2 205 1
 734 0020 00BF     		nop
 735              	.L37:
 736              	.LBE45:
 737              	.LBE44:
 738              		.loc 1 380 2
 739 0022 00BF     		nop
 740 0024 FDE7     		b	.L37
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 24


 741              	.L36:
 381:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	uxCriticalNesting--;
 742              		.loc 1 381 19
 743 0026 0A4B     		ldr	r3, .L40
 744 0028 1B68     		ldr	r3, [r3]
 745 002a 013B     		subs	r3, r3, #1
 746 002c 084A     		ldr	r2, .L40
 747 002e 1360     		str	r3, [r2]
 382:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	if( uxCriticalNesting == 0 )
 748              		.loc 1 382 24
 749 0030 074B     		ldr	r3, .L40
 750 0032 1B68     		ldr	r3, [r3]
 751              		.loc 1 382 4
 752 0034 002B     		cmp	r3, #0
 753 0036 05D1     		bne	.L39
 754 0038 0023     		movs	r3, #0
 755 003a 3B60     		str	r3, [r7]
 756              	.LBB46:
 757              	.LBB47:
 206:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 207:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 208:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 209:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 210:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** {
 211:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 212:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 213:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 214:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 215:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 216:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 217:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 218:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 219:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 220:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 221:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	);
 222:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 223:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 224:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	warnings. */
 225:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 226:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** }
 227:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 228:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 229:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 230:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** {
 231:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 758              		.loc 2 231 2
 759 003c 3B68     		ldr	r3, [r7]
 760              		.syntax unified
 761              	@ 231 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 762 003e 83F31188 			msr basepri, r3	
 763              	@ 0 "" 2
 232:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 233:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0	" :: "r" ( ulNewMaskValue ) : "memory"
 234:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	);
 235:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** }
 764              		.loc 2 235 1
 765              		.thumb
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 25


 766              		.syntax unified
 767 0042 00BF     		nop
 768              	.L39:
 769              	.LBE47:
 770              	.LBE46:
 383:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	{
 384:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		portENABLE_INTERRUPTS();
 385:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	}
 386:./freertos/src/portable/GCC/ARM_CM3/port.c **** }
 771              		.loc 1 386 1
 772 0044 00BF     		nop
 773 0046 0C37     		adds	r7, r7, #12
 774              	.LCFI32:
 775              		.cfi_def_cfa_offset 4
 776 0048 BD46     		mov	sp, r7
 777              	.LCFI33:
 778              		.cfi_def_cfa_register 13
 779              		@ sp needed
 780 004a 80BC     		pop	{r7}
 781              	.LCFI34:
 782              		.cfi_restore 7
 783              		.cfi_def_cfa_offset 0
 784 004c 7047     		bx	lr
 785              	.L41:
 786 004e 00BF     		.align	2
 787              	.L40:
 788 0050 00000000 		.word	uxCriticalNesting
 789              		.cfi_endproc
 790              	.LFE68:
 792              		.section	.text.PendSV_Handler,"ax",%progbits
 793              		.align	1
 794              		.global	PendSV_Handler
 795              		.syntax unified
 796              		.thumb
 797              		.thumb_func
 799              	PendSV_Handler:
 800              	.LFB69:
 387:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 388:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 389:./freertos/src/portable/GCC/ARM_CM3/port.c **** void xPortPendSVHandler( void )
 390:./freertos/src/portable/GCC/ARM_CM3/port.c **** {
 801              		.loc 1 390 1
 802              		.cfi_startproc
 803              		@ Naked Function: prologue and epilogue provided by programmer.
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 1, uses_anonymous_args = 0
 391:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* This is a naked function. */
 392:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 393:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	__asm volatile
 806              		.loc 1 393 2
 807              		.syntax unified
 808              	@ 393 "./freertos/src/portable/GCC/ARM_CM3/port.c" 1
 809 0000 EFF30980 			mrs r0, psp							
 810 0004 BFF36F8F 		isb									
 811              											
 812 0008 0D4B     		ldr	r3, pxCurrentTCBConst			
 813 000a 1A68     		ldr	r2, [r3]						
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 26


 814              											
 815 000c 20E9F00F 		stmdb r0!, {r4-r11}					
 816 0010 1060     		str r0, [r2]						
 817              											
 818 0012 08B5     		stmdb sp!, {r3, r14}				
 819 0014 4FF05000 		mov r0, #80							
 820 0018 80F31188 		msr basepri, r0						
 821 001c FFF7FEFF 		bl vTaskSwitchContext				
 822 0020 4FF00000 		mov r0, #0							
 823 0024 80F31188 		msr basepri, r0						
 824 0028 BDE80840 		ldmia sp!, {r3, r14}				
 825              											
 826 002c 1968     		ldr r1, [r3]						
 827 002e 0868     		ldr r0, [r1]						
 828 0030 B0E8F00F 		ldmia r0!, {r4-r11}					
 829 0034 80F30988 		msr psp, r0							
 830 0038 BFF36F8F 		isb									
 831 003c 7047     		bx r14								
 832              											
 833 003e 00BF     		.align 4							
 834 0040 00000000 	pxCurrentTCBConst: .word pxCurrentTCB	
 835              	
 836              	@ 0 "" 2
 394:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	(
 395:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	mrs r0, psp							\n"
 396:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	isb									\n"
 397:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"										\n"
 398:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	ldr	r3, pxCurrentTCBConst			\n" /* Get the location of the current TCB. */
 399:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	ldr	r2, [r3]						\n"
 400:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"										\n"
 401:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	stmdb r0!, {r4-r11}					\n" /* Save the remaining registers. */
 402:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	str r0, [r2]						\n" /* Save the new top of stack into the first member of the TCB. */
 403:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"										\n"
 404:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	stmdb sp!, {r3, r14}				\n"
 405:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	mov r0, %0							\n"
 406:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	msr basepri, r0						\n"
 407:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	bl vTaskSwitchContext				\n"
 408:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	mov r0, #0							\n"
 409:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	msr basepri, r0						\n"
 410:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	ldmia sp!, {r3, r14}				\n"
 411:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"										\n" /* Restore the context, including the critical nesting count. */
 412:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	ldr r1, [r3]						\n"
 413:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	ldr r0, [r1]						\n" /* The first item in pxCurrentTCB is the task top of stack. */
 414:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	ldmia r0!, {r4-r11}					\n" /* Pop the registers. */
 415:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	msr psp, r0							\n"
 416:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	isb									\n"
 417:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	bx r14								\n"
 418:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"										\n"
 419:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"	.align 4							\n"
 420:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	"pxCurrentTCBConst: .word pxCurrentTCB	\n"
 421:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	::"i"(configMAX_SYSCALL_INTERRUPT_PRIORITY)
 422:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	);
 423:./freertos/src/portable/GCC/ARM_CM3/port.c **** }
 837              		.loc 1 423 1
 838              		.thumb
 839              		.syntax unified
 840 0044 00BF     		nop
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 27


 841              		.cfi_endproc
 842              	.LFE69:
 844 0046 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 845              		.align	1
 846              		.global	SysTick_Handler
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 851              	SysTick_Handler:
 852              	.LFB70:
 424:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 425:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 426:./freertos/src/portable/GCC/ARM_CM3/port.c **** void xPortSysTickHandler( void )
 427:./freertos/src/portable/GCC/ARM_CM3/port.c **** {
 853              		.loc 1 427 1
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 8
 856              		@ frame_needed = 1, uses_anonymous_args = 0
 857 0000 80B5     		push	{r7, lr}
 858              	.LCFI35:
 859              		.cfi_def_cfa_offset 8
 860              		.cfi_offset 7, -8
 861              		.cfi_offset 14, -4
 862 0002 82B0     		sub	sp, sp, #8
 863              	.LCFI36:
 864              		.cfi_def_cfa_offset 16
 865 0004 00AF     		add	r7, sp, #0
 866              	.LCFI37:
 867              		.cfi_def_cfa_register 7
 868              	.LBB48:
 869              	.LBB49:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 870              		.loc 2 197 2
 871              		.syntax unified
 872              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 873 0006 4FF05003 			mov r3, #80												
 874 000a 83F31188 		msr basepri, r3											
 875 000e BFF36F8F 		isb														
 876 0012 BFF34F8F 		dsb														
 877              	
 878              	@ 0 "" 2
 879              		.thumb
 880              		.syntax unified
 881 0016 7B60     		str	r3, [r7, #4]
 205:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 882              		.loc 2 205 1
 883 0018 00BF     		nop
 884              	.LBE49:
 885              	.LBE48:
 428:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
 429:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	executes all interrupts must be unmasked.  There is therefore no need to
 430:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	save and then restore the interrupt mask value as its value is already
 431:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	known. */
 432:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	portDISABLE_INTERRUPTS();
 433:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	{
 434:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* Increment the RTOS tick. */
 435:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		if( xTaskIncrementTick() != pdFALSE )
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 28


 886              		.loc 1 435 7
 887 001a FFF7FEFF 		bl	xTaskIncrementTick
 888 001e 0346     		mov	r3, r0
 889              		.loc 1 435 5 discriminator 1
 890 0020 002B     		cmp	r3, #0
 891 0022 03D0     		beq	.L44
 436:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		{
 437:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* A context switch is required.  Context switching is performed in
 438:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			the PendSV interrupt.  Pend the PendSV interrupt. */
 439:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 892              		.loc 1 439 4
 893 0024 064B     		ldr	r3, .L45
 894              		.loc 1 439 26
 895 0026 4FF08052 		mov	r2, #268435456
 896 002a 1A60     		str	r2, [r3]
 897              	.L44:
 898 002c 0023     		movs	r3, #0
 899 002e 3B60     		str	r3, [r7]
 900              	.LBB50:
 901              	.LBB51:
 231:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 902              		.loc 2 231 2
 903 0030 3B68     		ldr	r3, [r7]
 904              		.syntax unified
 905              	@ 231 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 906 0032 83F31188 			msr basepri, r3	
 907              	@ 0 "" 2
 908              		.loc 2 235 1
 909              		.thumb
 910              		.syntax unified
 911 0036 00BF     		nop
 912              	.LBE51:
 913              	.LBE50:
 440:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		}
 441:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	}
 442:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	portENABLE_INTERRUPTS();
 443:./freertos/src/portable/GCC/ARM_CM3/port.c **** }
 914              		.loc 1 443 1
 915 0038 00BF     		nop
 916 003a 0837     		adds	r7, r7, #8
 917              	.LCFI38:
 918              		.cfi_def_cfa_offset 8
 919 003c BD46     		mov	sp, r7
 920              	.LCFI39:
 921              		.cfi_def_cfa_register 13
 922              		@ sp needed
 923 003e 80BD     		pop	{r7, pc}
 924              	.L46:
 925              		.align	2
 926              	.L45:
 927 0040 04ED00E0 		.word	-536810236
 928              		.cfi_endproc
 929              	.LFE70:
 931              		.section	.text.vPortSetupTimerInterrupt,"ax",%progbits
 932              		.align	1
 933              		.weak	vPortSetupTimerInterrupt
 934              		.syntax unified
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 29


 935              		.thumb
 936              		.thumb_func
 938              	vPortSetupTimerInterrupt:
 939              	.LFB71:
 444:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 445:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 446:./freertos/src/portable/GCC/ARM_CM3/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 447:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 448:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	__attribute__((weak)) void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )
 449:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	{
 450:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements;
 451:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	TickType_t xModifiableIdleTime;
 452:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 453:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* Make sure the SysTick reload value does not overflow the counter. */
 454:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
 455:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		{
 456:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			xExpectedIdleTime = xMaximumPossibleSuppressedTicks;
 457:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		}
 458:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 459:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* Stop the SysTick momentarily.  The time the SysTick is stopped for
 460:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		is accounted for as best it can be, but using the tickless mode will
 461:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		inevitably result in some tiny drift of the time maintained by the
 462:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		kernel with respect to calendar time. */
 463:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		portNVIC_SYSTICK_CTRL_REG &= ~portNVIC_SYSTICK_ENABLE_BIT;
 464:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 465:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* Calculate the reload value required to wait xExpectedIdleTime
 466:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		tick periods.  -1 is used because this code will execute part way
 467:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		through one of the tick periods. */
 468:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		ulReloadValue = portNVIC_SYSTICK_CURRENT_VALUE_REG + ( ulTimerCountsForOneTick * ( xExpectedIdleT
 469:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		if( ulReloadValue > ulStoppedTimerCompensation )
 470:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		{
 471:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			ulReloadValue -= ulStoppedTimerCompensation;
 472:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		}
 473:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 474:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* Enter a critical section but don't use the taskENTER_CRITICAL()
 475:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		method as that will mask interrupts that should exit sleep mode. */
 476:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		__asm volatile( "cpsid i" ::: "memory" );
 477:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		__asm volatile( "dsb" );
 478:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		__asm volatile( "isb" );
 479:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 480:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* If a context switch is pending or a task is waiting for the scheduler
 481:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		to be unsuspended then abandon the low power entry. */
 482:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		if( eTaskConfirmSleepModeStatus() == eAbortSleep )
 483:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		{
 484:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Restart from whatever is left in the count register to complete
 485:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			this tick period. */
 486:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_LOAD_REG = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 487:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 488:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Restart SysTick. */
 489:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 490:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 491:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Reset the reload register to the value required for normal tick
 492:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			periods. */
 493:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 494:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 495:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Re-enable interrupts - see comments above the cpsid instruction()
 496:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			above. */
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 30


 497:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 498:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		}
 499:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		else
 500:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		{
 501:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Set the new reload value. */
 502:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
 503:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 504:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Clear the SysTick count flag and set the count value back to
 505:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			zero. */
 506:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 507:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 508:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Restart SysTick. */
 509:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 510:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 511:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Sleep until something happens.  configPRE_SLEEP_PROCESSING() can
 512:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			set its parameter to 0 to indicate that its implementation contains
 513:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			its own wait for interrupt or wait for event instruction, and so wfi
 514:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			should not be executed again.  However, the original expected idle
 515:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			time variable must remain unmodified, so a copy is taken. */
 516:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			xModifiableIdleTime = xExpectedIdleTime;
 517:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			configPRE_SLEEP_PROCESSING( xModifiableIdleTime );
 518:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			if( xModifiableIdleTime > 0 )
 519:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			{
 520:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				__asm volatile( "dsb" ::: "memory" );
 521:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				__asm volatile( "wfi" );
 522:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				__asm volatile( "isb" );
 523:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			}
 524:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			configPOST_SLEEP_PROCESSING( xExpectedIdleTime );
 525:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 526:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Re-enable interrupts to allow the interrupt that brought the MCU
 527:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			out of sleep mode to execute immediately.  see comments above
 528:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			__disable_interrupt() call above. */
 529:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 530:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "dsb" );
 531:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "isb" );
 532:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 533:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Disable interrupts again because the clock is about to be stopped
 534:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			and interrupts that execute while the clock is stopped will increase
 535:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			any slippage between the time maintained by the RTOS and calendar
 536:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			time. */
 537:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "cpsid i" ::: "memory" );
 538:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "dsb" );
 539:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "isb" );
 540:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 541:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Disable the SysTick clock without reading the
 542:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG register to ensure the
 543:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_COUNT_FLAG_BIT is not cleared if it is set.  Again,
 544:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			the time the SysTick is stopped for is accounted for as best it can
 545:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			be, but using the tickless mode will inevitably result in some tiny
 546:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			drift of the time maintained by the kernel with respect to calendar
 547:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			time*/
 548:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT );
 549:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 550:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Determine if the SysTick clock has already counted to zero and
 551:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			been set back to the current reload value (the reload back being
 552:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			correct for the entire expected idle time) or if the SysTick is yet
 553:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			to count to zero (in which case an interrupt other than the SysTick
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 31


 554:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			must have brought the system out of sleep mode). */
 555:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
 556:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			{
 557:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				uint32_t ulCalculatedLoadValue;
 558:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 559:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				/* The tick interrupt is already pending, and the SysTick count
 560:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				reloaded with ulReloadValue.  Reset the
 561:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				portNVIC_SYSTICK_LOAD_REG with whatever remains of this tick
 562:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				period. */
 563:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_
 564:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 565:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				/* Don't allow a tiny value, or values that have somehow
 566:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				underflowed because the post sleep hook did something
 567:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				that took too long. */
 568:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				if( ( ulCalculatedLoadValue < ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimer
 569:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				{
 570:./freertos/src/portable/GCC/ARM_CM3/port.c **** 					ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
 571:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				}
 572:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 573:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
 574:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 575:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				/* As the pending tick will be processed as soon as this
 576:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				function exits, the tick value maintained by the tick is stepped
 577:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				forward by one less than the time spent waiting. */
 578:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				ulCompleteTickPeriods = xExpectedIdleTime - 1UL;
 579:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			}
 580:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			else
 581:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			{
 582:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				/* Something other than the tick interrupt ended the sleep.
 583:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				Work out how long the sleep lasted rounded to complete tick
 584:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				periods (not the ulReload value which accounted for part
 585:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				ticks). */
 586:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - portNVIC_SYSTI
 587:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 588:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				/* How many complete tick periods passed while the processor
 589:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				was waiting? */
 590:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
 591:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 592:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				/* The reload value is set to whatever fraction of a single tick
 593:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				period remains. */
 594:./freertos/src/portable/GCC/ARM_CM3/port.c **** 				portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOneTick ) - ulC
 595:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			}
 596:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 597:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Restart SysTick so it runs from portNVIC_SYSTICK_LOAD_REG
 598:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			again, then set portNVIC_SYSTICK_LOAD_REG back to its standard
 599:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			value. */
 600:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 601:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 602:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			vTaskStepTick( ulCompleteTickPeriods );
 603:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 604:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 605:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Exit with interrupts enabled. */
 606:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 607:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		}
 608:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	}
 609:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 610:./freertos/src/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 32


 611:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 612:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 613:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*
 614:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * Setup the systick timer to generate the tick interrupts at the required
 615:./freertos/src/portable/GCC/ARM_CM3/port.c ****  * frequency.
 616:./freertos/src/portable/GCC/ARM_CM3/port.c ****  */
 617:./freertos/src/portable/GCC/ARM_CM3/port.c **** __attribute__(( weak )) void vPortSetupTimerInterrupt( void )
 618:./freertos/src/portable/GCC/ARM_CM3/port.c **** {
 940              		.loc 1 618 1
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 0
 943              		@ frame_needed = 1, uses_anonymous_args = 0
 944              		@ link register save eliminated.
 945 0000 80B4     		push	{r7}
 946              	.LCFI40:
 947              		.cfi_def_cfa_offset 4
 948              		.cfi_offset 7, -4
 949 0002 00AF     		add	r7, sp, #0
 950              	.LCFI41:
 951              		.cfi_def_cfa_register 7
 619:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* Calculate the constants required to configure the tick interrupt. */
 620:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	#if( configUSE_TICKLESS_IDLE == 1 )
 621:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	{
 622:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
 623:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
 624:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOC
 625:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	}
 626:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	#endif /* configUSE_TICKLESS_IDLE */
 627:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 628:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* Stop and clear the SysTick. */
 629:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSTICK_CTRL_REG = 0UL;
 952              		.loc 1 629 2
 953 0004 0A4B     		ldr	r3, .L48
 954              		.loc 1 629 28
 955 0006 0022     		movs	r2, #0
 956 0008 1A60     		str	r2, [r3]
 630:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 957              		.loc 1 630 2
 958 000a 0A4B     		ldr	r3, .L48+4
 959              		.loc 1 630 37
 960 000c 0022     		movs	r2, #0
 961 000e 1A60     		str	r2, [r3]
 631:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 632:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	/* Configure SysTick to interrupt at the requested rate. */
 633:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 962              		.loc 1 633 55
 963 0010 094B     		ldr	r3, .L48+8
 964 0012 1B68     		ldr	r3, [r3]
 965 0014 094A     		ldr	r2, .L48+12
 966 0016 A2FB0323 		umull	r2, r3, r2, r3
 967 001a 9B09     		lsrs	r3, r3, #6
 968              		.loc 1 633 2
 969 001c 084A     		ldr	r2, .L48+16
 970              		.loc 1 633 78
 971 001e 013B     		subs	r3, r3, #1
 972              		.loc 1 633 28
 973 0020 1360     		str	r3, [r2]
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 33


 634:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 974              		.loc 1 634 2
 975 0022 034B     		ldr	r3, .L48
 976              		.loc 1 634 28
 977 0024 0722     		movs	r2, #7
 978 0026 1A60     		str	r2, [r3]
 635:./freertos/src/portable/GCC/ARM_CM3/port.c **** }
 979              		.loc 1 635 1
 980 0028 00BF     		nop
 981 002a BD46     		mov	sp, r7
 982              	.LCFI42:
 983              		.cfi_def_cfa_register 13
 984              		@ sp needed
 985 002c 80BC     		pop	{r7}
 986              	.LCFI43:
 987              		.cfi_restore 7
 988              		.cfi_def_cfa_offset 0
 989 002e 7047     		bx	lr
 990              	.L49:
 991              		.align	2
 992              	.L48:
 993 0030 10E000E0 		.word	-536813552
 994 0034 18E000E0 		.word	-536813544
 995 0038 00000000 		.word	SystemCoreClock
 996 003c D34D6210 		.word	274877907
 997 0040 14E000E0 		.word	-536813548
 998              		.cfi_endproc
 999              	.LFE71:
 1001              		.section	.text.vPortValidateInterruptPriority,"ax",%progbits
 1002              		.align	1
 1003              		.global	vPortValidateInterruptPriority
 1004              		.syntax unified
 1005              		.thumb
 1006              		.thumb_func
 1008              	vPortValidateInterruptPriority:
 1009              	.LFB72:
 636:./freertos/src/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 637:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 638:./freertos/src/portable/GCC/ARM_CM3/port.c **** #if( configASSERT_DEFINED == 1 )
 639:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 640:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	void vPortValidateInterruptPriority( void )
 641:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	{
 1010              		.loc 1 641 2
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 16
 1013              		@ frame_needed = 1, uses_anonymous_args = 0
 1014              		@ link register save eliminated.
 1015 0000 80B4     		push	{r7}
 1016              	.LCFI44:
 1017              		.cfi_def_cfa_offset 4
 1018              		.cfi_offset 7, -4
 1019 0002 85B0     		sub	sp, sp, #20
 1020              	.LCFI45:
 1021              		.cfi_def_cfa_offset 24
 1022 0004 00AF     		add	r7, sp, #0
 1023              	.LCFI46:
 1024              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 34


 642:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	uint32_t ulCurrentInterrupt;
 643:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	uint8_t ucCurrentPriority;
 644:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 645:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* Obtain the number of the currently executing interrupt. */
 646:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 1025              		.loc 1 646 3
 1026              		.syntax unified
 1027              	@ 646 "./freertos/src/portable/GCC/ARM_CM3/port.c" 1
 1028 0006 EFF30583 		mrs r3, ipsr
 1029              	@ 0 "" 2
 1030              		.thumb
 1031              		.syntax unified
 1032 000a FB60     		str	r3, [r7, #12]
 647:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 648:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* Is the interrupt number a user defined interrupt? */
 649:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 1033              		.loc 1 649 5
 1034 000c FB68     		ldr	r3, [r7, #12]
 1035 000e 0F2B     		cmp	r3, #15
 1036 0010 15D9     		bls	.L51
 650:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		{
 651:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* Look up the interrupt's priority. */
 652:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 1037              		.loc 1 652 52
 1038 0012 174A     		ldr	r2, .L56
 1039 0014 FB68     		ldr	r3, [r7, #12]
 1040 0016 1344     		add	r3, r3, r2
 1041              		.loc 1 652 22
 1042 0018 1B78     		ldrb	r3, [r3]
 1043 001a FB72     		strb	r3, [r7, #11]
 653:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 654:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			/* The following assertion will fail if a service routine (ISR) for
 655:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			an interrupt that has been assigned a priority above
 656:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY calls an ISR safe FreeRTOS API
 657:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			function.  ISR safe FreeRTOS API functions must *only* be called
 658:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			from interrupts that have been assigned a priority at or below
 659:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY.
 660:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 661:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			Numerically low interrupt priority numbers represent logically high
 662:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			interrupt priorities, therefore the priority of the interrupt must
 663:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			be set to a value equal to or numerically *higher* than
 664:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY.
 665:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 666:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			Interrupts that	use the FreeRTOS API must not be left at their
 667:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			default priority of	zero as that is the highest possible priority,
 668:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			which is guaranteed to be above configMAX_SYSCALL_INTERRUPT_PRIORITY,
 669:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			and	therefore also guaranteed to be invalid.
 670:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 671:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			FreeRTOS maintains separate thread and ISR API functions to ensure
 672:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			interrupt entry is as fast and simple as possible.
 673:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 674:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			The following links provide detailed information:
 675:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			http://www.freertos.org/RTOS-Cortex-M3-M4.html
 676:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			http://www.freertos.org/FAQHelp.html */
 677:./freertos/src/portable/GCC/ARM_CM3/port.c **** 			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 1044              		.loc 1 677 4
 1045 001c 154B     		ldr	r3, .L56+4
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 35


 1046 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1047 0020 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 1048 0022 9A42     		cmp	r2, r3
 1049 0024 0BD2     		bcs	.L51
 1050              	.LBB52:
 1051              	.LBB53:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1052              		.loc 2 197 2
 1053              		.syntax unified
 1054              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 1055 0026 4FF05003 			mov r3, #80												
 1056 002a 83F31188 		msr basepri, r3											
 1057 002e BFF36F8F 		isb														
 1058 0032 BFF34F8F 		dsb														
 1059              	
 1060              	@ 0 "" 2
 1061              		.thumb
 1062              		.syntax unified
 1063 0036 7B60     		str	r3, [r7, #4]
 205:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 1064              		.loc 2 205 1
 1065 0038 00BF     		nop
 1066              	.L52:
 1067              	.LBE53:
 1068              	.LBE52:
 1069              		.loc 1 677 4
 1070 003a 00BF     		nop
 1071 003c FDE7     		b	.L52
 1072              	.L51:
 678:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		}
 679:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 680:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		/* Priority grouping:  The interrupt controller (NVIC) allows the bits
 681:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		that define each interrupt's priority to be split between bits that
 682:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		define the interrupt's pre-emption priority bits and bits that define
 683:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		the interrupt's sub-priority.  For simplicity all bits must be defined
 684:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		to be pre-emption priority bits.  The following assertion will fail if
 685:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		this is not the case (if some bits represent a sub-priority).
 686:./freertos/src/portable/GCC/ARM_CM3/port.c **** 
 687:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		If the application only uses CMSIS libraries for interrupt
 688:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		configuration then the correct setting can be achieved on all Cortex-M
 689:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
 690:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		scheduler.  Note however that some vendor specific peripheral libraries
 691:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		assume a non-zero priority group setting, in which cases using a value
 692:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		of zero will result in unpredictable behaviour. */
 693:./freertos/src/portable/GCC/ARM_CM3/port.c **** 		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 1073              		.loc 1 693 3
 1074 003e 0E4B     		ldr	r3, .L56+8
 1075 0040 1B68     		ldr	r3, [r3]
 1076 0042 03F4E062 		and	r2, r3, #1792
 1077 0046 0D4B     		ldr	r3, .L56+12
 1078 0048 1B68     		ldr	r3, [r3]
 1079 004a 9A42     		cmp	r2, r3
 1080 004c 0BD9     		bls	.L55
 1081              	.LBB54:
 1082              	.LBB55:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1083              		.loc 2 197 2
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 36


 1084              		.syntax unified
 1085              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 1086 004e 4FF05003 			mov r3, #80												
 1087 0052 83F31188 		msr basepri, r3											
 1088 0056 BFF36F8F 		isb														
 1089 005a BFF34F8F 		dsb														
 1090              	
 1091              	@ 0 "" 2
 1092              		.thumb
 1093              		.syntax unified
 1094 005e 3B60     		str	r3, [r7]
 205:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 1095              		.loc 2 205 1
 1096 0060 00BF     		nop
 1097              	.L54:
 1098              	.LBE55:
 1099              	.LBE54:
 1100              		.loc 1 693 3
 1101 0062 00BF     		nop
 1102 0064 FDE7     		b	.L54
 1103              	.L55:
 694:./freertos/src/portable/GCC/ARM_CM3/port.c **** 	}
 1104              		.loc 1 694 2
 1105 0066 00BF     		nop
 1106 0068 1437     		adds	r7, r7, #20
 1107              	.LCFI47:
 1108              		.cfi_def_cfa_offset 4
 1109 006a BD46     		mov	sp, r7
 1110              	.LCFI48:
 1111              		.cfi_def_cfa_register 13
 1112              		@ sp needed
 1113 006c 80BC     		pop	{r7}
 1114              	.LCFI49:
 1115              		.cfi_restore 7
 1116              		.cfi_def_cfa_offset 0
 1117 006e 7047     		bx	lr
 1118              	.L57:
 1119              		.align	2
 1120              	.L56:
 1121 0070 F0E300E0 		.word	-536812560
 1122 0074 00000000 		.word	ucMaxSysCallPriority
 1123 0078 0CED00E0 		.word	-536810228
 1124 007c 00000000 		.word	ulMaxPRIGROUPValue
 1125              		.cfi_endproc
 1126              	.LFE72:
 1128              		.text
 1129              	.Letext0:
 1130              		.file 3 "C:/arm-toolchain/14.3/arm-none-eabi/include/machine/_default_types.h"
 1131              		.file 4 "C:/arm-toolchain/14.3/arm-none-eabi/include/sys/_stdint.h"
 1132              		.file 5 "./freertos/inc/projdefs.h"
 1133              		.file 6 "./freertos/inc/FreeRTOSConfig.h"
 1134              		.file 7 "./freertos/inc/task.h"
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s 			page 37


DEFINED SYMBOLS
                            *ABS*:00000000 port.c
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:19     .data.uxCriticalNesting:00000000 $d
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:22     .data.uxCriticalNesting:00000000 uxCriticalNesting
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:27     .bss.ucMaxSysCallPriority:00000000 ucMaxSysCallPriority
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:28     .bss.ucMaxSysCallPriority:00000000 $d
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:30     .bss.ulMaxPRIGROUPValue:00000000 $d
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:33     .bss.ulMaxPRIGROUPValue:00000000 ulMaxPRIGROUPValue
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:36     .rodata.pcInterruptPriorityRegisters:00000000 $d
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:39     .rodata.pcInterruptPriorityRegisters:00000000 pcInterruptPriorityRegisters
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:42     .text.pxPortInitialiseStack:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:48     .text.pxPortInitialiseStack:00000000 pxPortInitialiseStack
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:128    .text.pxPortInitialiseStack:00000054 $d
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:138    .text.prvTaskExitError:00000000 prvTaskExitError
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:133    .text.prvTaskExitError:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:230    .text.prvTaskExitError:00000054 $d
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:235    .text.SVC_Handler:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:241    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:263    .text.SVC_Handler:00000020 pxCurrentTCBConst2
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:263    .text.SVC_Handler:00000020 $d
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:269    .text.SVC_Handler:00000024 $t
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:274    .text.prvPortStartFirstTask:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:279    .text.prvPortStartFirstTask:00000000 prvPortStartFirstTask
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:309    .text.xPortStartScheduler:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:315    .text.xPortStartScheduler:00000000 xPortStartScheduler
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:938    .text.vPortSetupTimerInterrupt:00000000 vPortSetupTimerInterrupt
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:504    .text.xPortStartScheduler:000000f4 $d
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:513    .text.vPortEndScheduler:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:519    .text.vPortEndScheduler:00000000 vPortEndScheduler
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:581    .text.vPortEndScheduler:00000034 $d
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:586    .text.vPortEnterCritical:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:592    .text.vPortEnterCritical:00000000 vPortEnterCritical
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:685    .text.vPortEnterCritical:00000058 $d
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:691    .text.vPortExitCritical:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:697    .text.vPortExitCritical:00000000 vPortExitCritical
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:788    .text.vPortExitCritical:00000050 $d
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:793    .text.PendSV_Handler:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:799    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:834    .text.PendSV_Handler:00000040 pxCurrentTCBConst
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:834    .text.PendSV_Handler:00000040 $d
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:840    .text.PendSV_Handler:00000044 $t
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:845    .text.SysTick_Handler:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:851    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:927    .text.SysTick_Handler:00000040 $d
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:932    .text.vPortSetupTimerInterrupt:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:993    .text.vPortSetupTimerInterrupt:00000030 $d
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:1002   .text.vPortValidateInterruptPriority:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:1008   .text.vPortValidateInterruptPriority:00000000 vPortValidateInterruptPriority
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:1121   .text.vPortValidateInterruptPriority:00000070 $d
C:\Users\PRAETE~1\AppData\Local\Temp\cc1J8vaf.s:2922   .text.prvPortStartFirstTask:0000001c $d

UNDEFINED SYMBOLS
pxCurrentTCB
vTaskSwitchContext
xTaskIncrementTick
SystemCoreClock
