ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"timers.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "./freertos/src/timers.c"
  18              		.section	.bss.xActiveTimerList1,"aw",%nobits
  19              		.align	2
  22              	xActiveTimerList1:
  23 0000 00000000 		.space	20
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.section	.bss.xActiveTimerList2,"aw",%nobits
  25              		.align	2
  28              	xActiveTimerList2:
  29 0000 00000000 		.space	20
  29      00000000 
  29      00000000 
  29      00000000 
  29      00000000 
  30              		.section	.bss.pxCurrentTimerList,"aw",%nobits
  31              		.align	2
  34              	pxCurrentTimerList:
  35 0000 00000000 		.space	4
  36              		.section	.bss.pxOverflowTimerList,"aw",%nobits
  37              		.align	2
  40              	pxOverflowTimerList:
  41 0000 00000000 		.space	4
  42              		.section	.bss.xTimerQueue,"aw",%nobits
  43              		.align	2
  46              	xTimerQueue:
  47 0000 00000000 		.space	4
  48              		.section	.bss.xTimerTaskHandle,"aw",%nobits
  49              		.align	2
  52              	xTimerTaskHandle:
  53 0000 00000000 		.space	4
  54              		.section	.rodata
  55              		.align	2
  56              	.LC0:
  57 0000 546D7220 		.ascii	"Tmr Svc\000"
  57      53766300 
  58              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
  59              		.align	1
  60              		.global	xTimerCreateTimerTask
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 2


  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	xTimerCreateTimerTask:
  66              	.LFB61:
   1:./freertos/src/timers.c **** /*
   2:./freertos/src/timers.c ****  * FreeRTOS Kernel V10.3.1
   3:./freertos/src/timers.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:./freertos/src/timers.c ****  *
   5:./freertos/src/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:./freertos/src/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:./freertos/src/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:./freertos/src/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:./freertos/src/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:./freertos/src/timers.c ****  * subject to the following conditions:
  11:./freertos/src/timers.c ****  *
  12:./freertos/src/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:./freertos/src/timers.c ****  * copies or substantial portions of the Software.
  14:./freertos/src/timers.c ****  *
  15:./freertos/src/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./freertos/src/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:./freertos/src/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:./freertos/src/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:./freertos/src/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:./freertos/src/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:./freertos/src/timers.c ****  *
  22:./freertos/src/timers.c ****  * http://www.FreeRTOS.org
  23:./freertos/src/timers.c ****  * http://aws.amazon.com/freertos
  24:./freertos/src/timers.c ****  *
  25:./freertos/src/timers.c ****  * 1 tab == 4 spaces!
  26:./freertos/src/timers.c ****  */
  27:./freertos/src/timers.c **** 
  28:./freertos/src/timers.c **** /* Standard includes. */
  29:./freertos/src/timers.c **** #include <stdlib.h>
  30:./freertos/src/timers.c **** 
  31:./freertos/src/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:./freertos/src/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:./freertos/src/timers.c **** task.h is included from an application file. */
  34:./freertos/src/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:./freertos/src/timers.c **** 
  36:./freertos/src/timers.c **** #include "FreeRTOS.h"
  37:./freertos/src/timers.c **** #include "task.h"
  38:./freertos/src/timers.c **** #include "queue.h"
  39:./freertos/src/timers.c **** #include "timers.h"
  40:./freertos/src/timers.c **** 
  41:./freertos/src/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:./freertos/src/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:./freertos/src/timers.c **** #endif
  44:./freertos/src/timers.c **** 
  45:./freertos/src/timers.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  46:./freertos/src/timers.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  47:./freertos/src/timers.c **** for the header files above, but not in this file, in order to generate the
  48:./freertos/src/timers.c **** correct privileged Vs unprivileged linkage and placement. */
  49:./freertos/src/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e9021 !e961 !e750. */
  50:./freertos/src/timers.c **** 
  51:./freertos/src/timers.c **** 
  52:./freertos/src/timers.c **** /* This entire source file will be skipped if the application is not configured
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 3


  53:./freertos/src/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:./freertos/src/timers.c **** of this file.  If you want to include software timer functionality then ensure
  55:./freertos/src/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:./freertos/src/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:./freertos/src/timers.c **** 
  58:./freertos/src/timers.c **** /* Misc definitions. */
  59:./freertos/src/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:./freertos/src/timers.c **** 
  61:./freertos/src/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:./freertos/src/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:./freertos/src/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:./freertos/src/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:./freertos/src/timers.c **** #endif
  66:./freertos/src/timers.c **** 
  67:./freertos/src/timers.c **** /* Bit definitions used in the ucStatus member of a timer structure. */
  68:./freertos/src/timers.c **** #define tmrSTATUS_IS_ACTIVE					( ( uint8_t ) 0x01 )
  69:./freertos/src/timers.c **** #define tmrSTATUS_IS_STATICALLY_ALLOCATED	( ( uint8_t ) 0x02 )
  70:./freertos/src/timers.c **** #define tmrSTATUS_IS_AUTORELOAD				( ( uint8_t ) 0x04 )
  71:./freertos/src/timers.c **** 
  72:./freertos/src/timers.c **** /* The definition of the timers themselves. */
  73:./freertos/src/timers.c **** typedef struct tmrTimerControl /* The old naming convention is used to prevent breaking kernel awar
  74:./freertos/src/timers.c **** {
  75:./freertos/src/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  76:./freertos/src/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  77:./freertos/src/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  78:./freertos/src/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  79:./freertos/src/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  80:./freertos/src/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  81:./freertos/src/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  82:./freertos/src/timers.c **** 	#endif
  83:./freertos/src/timers.c **** 	uint8_t 				ucStatus;			/*<< Holds bits to say if the timer was statically allocated or not, and i
  84:./freertos/src/timers.c **** } xTIMER;
  85:./freertos/src/timers.c **** 
  86:./freertos/src/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  87:./freertos/src/timers.c **** name below to enable the use of older kernel aware debuggers. */
  88:./freertos/src/timers.c **** typedef xTIMER Timer_t;
  89:./freertos/src/timers.c **** 
  90:./freertos/src/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  91:./freertos/src/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  92:./freertos/src/timers.c **** and messages that request the execution of a non-timer related callback.  The
  93:./freertos/src/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  94:./freertos/src/timers.c **** and xCallbackParametersType respectively. */
  95:./freertos/src/timers.c **** typedef struct tmrTimerParameters
  96:./freertos/src/timers.c **** {
  97:./freertos/src/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  98:./freertos/src/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  99:./freertos/src/timers.c **** } TimerParameter_t;
 100:./freertos/src/timers.c **** 
 101:./freertos/src/timers.c **** 
 102:./freertos/src/timers.c **** typedef struct tmrCallbackParameters
 103:./freertos/src/timers.c **** {
 104:./freertos/src/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 105:./freertos/src/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 106:./freertos/src/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 107:./freertos/src/timers.c **** } CallbackParameters_t;
 108:./freertos/src/timers.c **** 
 109:./freertos/src/timers.c **** /* The structure that contains the two message types, along with an identifier
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 4


 110:./freertos/src/timers.c **** that is used to determine which message type is valid. */
 111:./freertos/src/timers.c **** typedef struct tmrTimerQueueMessage
 112:./freertos/src/timers.c **** {
 113:./freertos/src/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 114:./freertos/src/timers.c **** 	union
 115:./freertos/src/timers.c **** 	{
 116:./freertos/src/timers.c **** 		TimerParameter_t xTimerParameters;
 117:./freertos/src/timers.c **** 
 118:./freertos/src/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 119:./freertos/src/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 120:./freertos/src/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 121:./freertos/src/timers.c **** 			CallbackParameters_t xCallbackParameters;
 122:./freertos/src/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 123:./freertos/src/timers.c **** 	} u;
 124:./freertos/src/timers.c **** } DaemonTaskMessage_t;
 125:./freertos/src/timers.c **** 
 126:./freertos/src/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 127:./freertos/src/timers.c **** which static variables must be declared volatile. */
 128:./freertos/src/timers.c **** 
 129:./freertos/src/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 130:./freertos/src/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 131:./freertos/src/timers.c **** timer service task is allowed to access these lists.
 132:./freertos/src/timers.c **** xActiveTimerList1 and xActiveTimerList2 could be at function scope but that
 133:./freertos/src/timers.c **** breaks some kernel aware debuggers, and debuggers that reply on removing the
 134:./freertos/src/timers.c **** static qualifier. */
 135:./freertos/src/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1;
 136:./freertos/src/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2;
 137:./freertos/src/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList;
 138:./freertos/src/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList;
 139:./freertos/src/timers.c **** 
 140:./freertos/src/timers.c **** /* A queue that is used to send commands to the timer service task. */
 141:./freertos/src/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 142:./freertos/src/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 143:./freertos/src/timers.c **** 
 144:./freertos/src/timers.c **** /*lint -restore */
 145:./freertos/src/timers.c **** 
 146:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 147:./freertos/src/timers.c **** 
 148:./freertos/src/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 149:./freertos/src/timers.c **** 
 150:./freertos/src/timers.c **** 	/* If static allocation is supported then the application must provide the
 151:./freertos/src/timers.c **** 	following callback function - which enables the application to optionally
 152:./freertos/src/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
 153:./freertos/src/timers.c **** 	and TCB. */
 154:./freertos/src/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 155:./freertos/src/timers.c **** 
 156:./freertos/src/timers.c **** #endif
 157:./freertos/src/timers.c **** 
 158:./freertos/src/timers.c **** /*
 159:./freertos/src/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 160:./freertos/src/timers.c ****  * been initialised already.
 161:./freertos/src/timers.c ****  */
 162:./freertos/src/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 163:./freertos/src/timers.c **** 
 164:./freertos/src/timers.c **** /*
 165:./freertos/src/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 166:./freertos/src/timers.c ****  * task.  Other tasks communicate with the timer service task using the
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 5


 167:./freertos/src/timers.c ****  * xTimerQueue queue.
 168:./freertos/src/timers.c ****  */
 169:./freertos/src/timers.c **** static portTASK_FUNCTION_PROTO( prvTimerTask, pvParameters ) PRIVILEGED_FUNCTION;
 170:./freertos/src/timers.c **** 
 171:./freertos/src/timers.c **** /*
 172:./freertos/src/timers.c ****  * Called by the timer service task to interpret and process a command it
 173:./freertos/src/timers.c ****  * received on the timer queue.
 174:./freertos/src/timers.c ****  */
 175:./freertos/src/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 176:./freertos/src/timers.c **** 
 177:./freertos/src/timers.c **** /*
 178:./freertos/src/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 179:./freertos/src/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 180:./freertos/src/timers.c ****  */
 181:./freertos/src/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 182:./freertos/src/timers.c **** 
 183:./freertos/src/timers.c **** /*
 184:./freertos/src/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 185:./freertos/src/timers.c ****  * auto-reload timer, then call its callback.
 186:./freertos/src/timers.c ****  */
 187:./freertos/src/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 188:./freertos/src/timers.c **** 
 189:./freertos/src/timers.c **** /*
 190:./freertos/src/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 191:./freertos/src/timers.c ****  * current timer list does not still reference some timers.
 192:./freertos/src/timers.c ****  */
 193:./freertos/src/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 194:./freertos/src/timers.c **** 
 195:./freertos/src/timers.c **** /*
 196:./freertos/src/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 197:./freertos/src/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 198:./freertos/src/timers.c ****  */
 199:./freertos/src/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 200:./freertos/src/timers.c **** 
 201:./freertos/src/timers.c **** /*
 202:./freertos/src/timers.c ****  * If the timer list contains any active timers then return the expire time of
 203:./freertos/src/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 204:./freertos/src/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 205:./freertos/src/timers.c ****  * to pdTRUE.
 206:./freertos/src/timers.c ****  */
 207:./freertos/src/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
 208:./freertos/src/timers.c **** 
 209:./freertos/src/timers.c **** /*
 210:./freertos/src/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 211:./freertos/src/timers.c ****  * until either a timer does expire or a command is received.
 212:./freertos/src/timers.c ****  */
 213:./freertos/src/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 214:./freertos/src/timers.c **** 
 215:./freertos/src/timers.c **** /*
 216:./freertos/src/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 217:./freertos/src/timers.c ****  * dynamically to fill in the structure's members.
 218:./freertos/src/timers.c ****  */
 219:./freertos/src/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 220:./freertos/src/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 221:./freertos/src/timers.c **** 									const UBaseType_t uxAutoReload,
 222:./freertos/src/timers.c **** 									void * const pvTimerID,
 223:./freertos/src/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 6


 224:./freertos/src/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 225:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 226:./freertos/src/timers.c **** 
 227:./freertos/src/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 228:./freertos/src/timers.c **** {
  67              		.loc 1 228 1
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 8
  70              		@ frame_needed = 1, uses_anonymous_args = 0
  71 0000 80B5     		push	{r7, lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 7, -8
  75              		.cfi_offset 14, -4
  76 0002 84B0     		sub	sp, sp, #16
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 24
  79 0004 02AF     		add	r7, sp, #8
  80              	.LCFI2:
  81              		.cfi_def_cfa 7, 16
 229:./freertos/src/timers.c **** BaseType_t xReturn = pdFAIL;
  82              		.loc 1 229 12
  83 0006 0023     		movs	r3, #0
  84 0008 7B60     		str	r3, [r7, #4]
 230:./freertos/src/timers.c **** 
 231:./freertos/src/timers.c **** 	/* This function is called when the scheduler is started if
 232:./freertos/src/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 233:./freertos/src/timers.c **** 	timer service task has been created/initialised.  If timers have already
 234:./freertos/src/timers.c **** 	been created then the initialisation will already have been performed. */
 235:./freertos/src/timers.c **** 	prvCheckForValidListAndQueue();
  85              		.loc 1 235 2
  86 000a FFF7FEFF 		bl	prvCheckForValidListAndQueue
 236:./freertos/src/timers.c **** 
 237:./freertos/src/timers.c **** 	if( xTimerQueue != NULL )
  87              		.loc 1 237 18
  88 000e 124B     		ldr	r3, .L6
  89 0010 1B68     		ldr	r3, [r3]
  90              		.loc 1 237 4
  91 0012 002B     		cmp	r3, #0
  92 0014 0BD0     		beq	.L2
 238:./freertos/src/timers.c **** 	{
 239:./freertos/src/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 240:./freertos/src/timers.c **** 		{
 241:./freertos/src/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 242:./freertos/src/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 243:./freertos/src/timers.c **** 			uint32_t ulTimerTaskStackSize;
 244:./freertos/src/timers.c **** 
 245:./freertos/src/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 246:./freertos/src/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 247:./freertos/src/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 248:./freertos/src/timers.c **** 													ulTimerTaskStackSize,
 249:./freertos/src/timers.c **** 													NULL,
 250:./freertos/src/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 251:./freertos/src/timers.c **** 													pxTimerTaskStackBuffer,
 252:./freertos/src/timers.c **** 													pxTimerTaskTCBBuffer );
 253:./freertos/src/timers.c **** 
 254:./freertos/src/timers.c **** 			if( xTimerTaskHandle != NULL )
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 7


 255:./freertos/src/timers.c **** 			{
 256:./freertos/src/timers.c **** 				xReturn = pdPASS;
 257:./freertos/src/timers.c **** 			}
 258:./freertos/src/timers.c **** 		}
 259:./freertos/src/timers.c **** 		#else
 260:./freertos/src/timers.c **** 		{
 261:./freertos/src/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
  93              		.loc 1 261 14
  94 0016 114B     		ldr	r3, .L6+4
  95 0018 0193     		str	r3, [sp, #4]
  96 001a 0223     		movs	r3, #2
  97 001c 0093     		str	r3, [sp]
  98 001e 0023     		movs	r3, #0
  99 0020 4FF48072 		mov	r2, #256
 100 0024 0E49     		ldr	r1, .L6+8
 101 0026 0F48     		ldr	r0, .L6+12
 102 0028 FFF7FEFF 		bl	xTaskCreate
 103 002c 7860     		str	r0, [r7, #4]
 104              	.L2:
 262:./freertos/src/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 263:./freertos/src/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 264:./freertos/src/timers.c **** 									NULL,
 265:./freertos/src/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 266:./freertos/src/timers.c **** 									&xTimerTaskHandle );
 267:./freertos/src/timers.c **** 		}
 268:./freertos/src/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 269:./freertos/src/timers.c **** 	}
 270:./freertos/src/timers.c **** 	else
 271:./freertos/src/timers.c **** 	{
 272:./freertos/src/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 273:./freertos/src/timers.c **** 	}
 274:./freertos/src/timers.c **** 
 275:./freertos/src/timers.c **** 	configASSERT( xReturn );
 105              		.loc 1 275 2
 106 002e 7B68     		ldr	r3, [r7, #4]
 107 0030 002B     		cmp	r3, #0
 108 0032 0BD1     		bne	.L3
 109              	.LBB34:
 110              	.LBB35:
 111              		.file 2 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h"
   1:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 8


  18:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  28:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  29:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  32:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  36:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:./freertos/src/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  46:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  55:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  59:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  66:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  72:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 9


  75:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  78:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** }
  89:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  90:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
  96:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 106:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 108:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 115:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 122:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 127:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 129:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	{
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 10


 132:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 134:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 138:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 143:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 147:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 149:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 151:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 153:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 155:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 160:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 163:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 165:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 169:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 170:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 171:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** {
 173:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 174:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 175:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 176:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 177:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 178:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 179:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 180:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	{
 181:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 182:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	}
 183:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	else
 184:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	{
 185:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 186:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	}
 187:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 188:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 11


 189:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** }
 190:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 191:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 192:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 193:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 194:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** {
 195:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 196:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 112              		.loc 2 197 2
 113              		.syntax unified
 114              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 115 0034 4FF05003 			mov r3, #80												
 116 0038 83F31188 		msr basepri, r3											
 117 003c BFF36F8F 		isb														
 118 0040 BFF34F8F 		dsb														
 119              	
 120              	@ 0 "" 2
 121              		.thumb
 122              		.syntax unified
 123 0044 3B60     		str	r3, [r7]
 198:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 199:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 200:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 201:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 202:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 203:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 204:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	);
 205:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** }
 124              		.loc 2 205 1
 125 0046 00BF     		nop
 126              	.L4:
 127              	.LBE35:
 128              	.LBE34:
 129              		.loc 1 275 2
 130 0048 00BF     		nop
 131 004a FDE7     		b	.L4
 132              	.L3:
 276:./freertos/src/timers.c **** 	return xReturn;
 133              		.loc 1 276 9
 134 004c 7B68     		ldr	r3, [r7, #4]
 277:./freertos/src/timers.c **** }
 135              		.loc 1 277 1
 136 004e 1846     		mov	r0, r3
 137 0050 0837     		adds	r7, r7, #8
 138              	.LCFI3:
 139              		.cfi_def_cfa_offset 8
 140 0052 BD46     		mov	sp, r7
 141              	.LCFI4:
 142              		.cfi_def_cfa_register 13
 143              		@ sp needed
 144 0054 80BD     		pop	{r7, pc}
 145              	.L7:
 146 0056 00BF     		.align	2
 147              	.L6:
 148 0058 00000000 		.word	xTimerQueue
 149 005c 00000000 		.word	xTimerTaskHandle
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 12


 150 0060 00000000 		.word	.LC0
 151 0064 00000000 		.word	prvTimerTask
 152              		.cfi_endproc
 153              	.LFE61:
 155              		.section	.text.xTimerCreate,"ax",%progbits
 156              		.align	1
 157              		.global	xTimerCreate
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 162              	xTimerCreate:
 163              	.LFB62:
 278:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 279:./freertos/src/timers.c **** 
 280:./freertos/src/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 281:./freertos/src/timers.c **** 
 282:./freertos/src/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 283:./freertos/src/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 284:./freertos/src/timers.c **** 								const UBaseType_t uxAutoReload,
 285:./freertos/src/timers.c **** 								void * const pvTimerID,
 286:./freertos/src/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 287:./freertos/src/timers.c **** 	{
 164              		.loc 1 287 2
 165              		.cfi_startproc
 166              		@ args = 4, pretend = 0, frame = 24
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168 0000 80B5     		push	{r7, lr}
 169              	.LCFI5:
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 7, -8
 172              		.cfi_offset 14, -4
 173 0002 88B0     		sub	sp, sp, #32
 174              	.LCFI6:
 175              		.cfi_def_cfa_offset 40
 176 0004 02AF     		add	r7, sp, #8
 177              	.LCFI7:
 178              		.cfi_def_cfa 7, 32
 179 0006 F860     		str	r0, [r7, #12]
 180 0008 B960     		str	r1, [r7, #8]
 181 000a 7A60     		str	r2, [r7, #4]
 182 000c 3B60     		str	r3, [r7]
 288:./freertos/src/timers.c **** 	Timer_t *pxNewTimer;
 289:./freertos/src/timers.c **** 
 290:./freertos/src/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All values ret
 183              		.loc 1 290 30
 184 000e 2C20     		movs	r0, #44
 185 0010 FFF7FEFF 		bl	pvPortMalloc
 186 0014 7861     		str	r0, [r7, #20]
 291:./freertos/src/timers.c **** 
 292:./freertos/src/timers.c **** 		if( pxNewTimer != NULL )
 187              		.loc 1 292 5
 188 0016 7B69     		ldr	r3, [r7, #20]
 189 0018 002B     		cmp	r3, #0
 190 001a 0DD0     		beq	.L9
 293:./freertos/src/timers.c **** 		{
 294:./freertos/src/timers.c **** 			/* Status is thus far zero as the timer is not created statically
 295:./freertos/src/timers.c **** 			and has not been started.  The auto-reload bit may get set in
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 13


 296:./freertos/src/timers.c **** 			prvInitialiseNewTimer. */
 297:./freertos/src/timers.c **** 			pxNewTimer->ucStatus = 0x00;
 191              		.loc 1 297 25
 192 001c 7B69     		ldr	r3, [r7, #20]
 193 001e 0022     		movs	r2, #0
 194 0020 83F82820 		strb	r2, [r3, #40]
 298:./freertos/src/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 195              		.loc 1 298 4
 196 0024 7B69     		ldr	r3, [r7, #20]
 197 0026 0193     		str	r3, [sp, #4]
 198 0028 3B6A     		ldr	r3, [r7, #32]
 199 002a 0093     		str	r3, [sp]
 200 002c 3B68     		ldr	r3, [r7]
 201 002e 7A68     		ldr	r2, [r7, #4]
 202 0030 B968     		ldr	r1, [r7, #8]
 203 0032 F868     		ldr	r0, [r7, #12]
 204 0034 FFF7FEFF 		bl	prvInitialiseNewTimer
 205              	.L9:
 299:./freertos/src/timers.c **** 		}
 300:./freertos/src/timers.c **** 
 301:./freertos/src/timers.c **** 		return pxNewTimer;
 206              		.loc 1 301 10
 207 0038 7B69     		ldr	r3, [r7, #20]
 302:./freertos/src/timers.c **** 	}
 208              		.loc 1 302 2
 209 003a 1846     		mov	r0, r3
 210 003c 1837     		adds	r7, r7, #24
 211              	.LCFI8:
 212              		.cfi_def_cfa_offset 8
 213 003e BD46     		mov	sp, r7
 214              	.LCFI9:
 215              		.cfi_def_cfa_register 13
 216              		@ sp needed
 217 0040 80BD     		pop	{r7, pc}
 218              		.cfi_endproc
 219              	.LFE62:
 221              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 222              		.align	1
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 227              	prvInitialiseNewTimer:
 228              	.LFB63:
 303:./freertos/src/timers.c **** 
 304:./freertos/src/timers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 305:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 306:./freertos/src/timers.c **** 
 307:./freertos/src/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 308:./freertos/src/timers.c **** 
 309:./freertos/src/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 310:./freertos/src/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 311:./freertos/src/timers.c **** 										const UBaseType_t uxAutoReload,
 312:./freertos/src/timers.c **** 										void * const pvTimerID,
 313:./freertos/src/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 314:./freertos/src/timers.c **** 										StaticTimer_t *pxTimerBuffer )
 315:./freertos/src/timers.c **** 	{
 316:./freertos/src/timers.c **** 	Timer_t *pxNewTimer;
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 14


 317:./freertos/src/timers.c **** 
 318:./freertos/src/timers.c **** 		#if( configASSERT_DEFINED == 1 )
 319:./freertos/src/timers.c **** 		{
 320:./freertos/src/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 321:./freertos/src/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 322:./freertos/src/timers.c **** 			structure. */
 323:./freertos/src/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 324:./freertos/src/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 325:./freertos/src/timers.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 326:./freertos/src/timers.c **** 		}
 327:./freertos/src/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:./freertos/src/timers.c **** 
 329:./freertos/src/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:./freertos/src/timers.c **** 		configASSERT( pxTimerBuffer );
 331:./freertos/src/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointer to a Tim
 332:./freertos/src/timers.c **** 
 333:./freertos/src/timers.c **** 		if( pxNewTimer != NULL )
 334:./freertos/src/timers.c **** 		{
 335:./freertos/src/timers.c **** 			/* Timers can be created statically or dynamically so note this
 336:./freertos/src/timers.c **** 			timer was created statically in case it is later deleted.  The
 337:./freertos/src/timers.c **** 			auto-reload bit may get set in prvInitialiseNewTimer(). */
 338:./freertos/src/timers.c **** 			pxNewTimer->ucStatus = tmrSTATUS_IS_STATICALLY_ALLOCATED;
 339:./freertos/src/timers.c **** 
 340:./freertos/src/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 341:./freertos/src/timers.c **** 		}
 342:./freertos/src/timers.c **** 
 343:./freertos/src/timers.c **** 		return pxNewTimer;
 344:./freertos/src/timers.c **** 	}
 345:./freertos/src/timers.c **** 
 346:./freertos/src/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 347:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 348:./freertos/src/timers.c **** 
 349:./freertos/src/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 350:./freertos/src/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 351:./freertos/src/timers.c **** 									const UBaseType_t uxAutoReload,
 352:./freertos/src/timers.c **** 									void * const pvTimerID,
 353:./freertos/src/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 354:./freertos/src/timers.c **** 									Timer_t *pxNewTimer )
 355:./freertos/src/timers.c **** {
 229              		.loc 1 355 1
 230              		.cfi_startproc
 231              		@ args = 8, pretend = 0, frame = 24
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233 0000 80B5     		push	{r7, lr}
 234              	.LCFI10:
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 7, -8
 237              		.cfi_offset 14, -4
 238 0002 86B0     		sub	sp, sp, #24
 239              	.LCFI11:
 240              		.cfi_def_cfa_offset 32
 241 0004 00AF     		add	r7, sp, #0
 242              	.LCFI12:
 243              		.cfi_def_cfa_register 7
 244 0006 F860     		str	r0, [r7, #12]
 245 0008 B960     		str	r1, [r7, #8]
 246 000a 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 15


 247 000c 3B60     		str	r3, [r7]
 356:./freertos/src/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 357:./freertos/src/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 248              		.loc 1 357 2
 249 000e BB68     		ldr	r3, [r7, #8]
 250 0010 002B     		cmp	r3, #0
 251 0012 0BD1     		bne	.L12
 252              	.LBB36:
 253              	.LBB37:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 254              		.loc 2 197 2
 255              		.syntax unified
 256              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 257 0014 4FF05003 			mov r3, #80												
 258 0018 83F31188 		msr basepri, r3											
 259 001c BFF36F8F 		isb														
 260 0020 BFF34F8F 		dsb														
 261              	
 262              	@ 0 "" 2
 263              		.thumb
 264              		.syntax unified
 265 0024 7B61     		str	r3, [r7, #20]
 266              		.loc 2 205 1
 267 0026 00BF     		nop
 268              	.L13:
 269              	.LBE37:
 270              	.LBE36:
 271              		.loc 1 357 2
 272 0028 00BF     		nop
 273 002a FDE7     		b	.L13
 274              	.L12:
 358:./freertos/src/timers.c **** 
 359:./freertos/src/timers.c **** 	if( pxNewTimer != NULL )
 275              		.loc 1 359 4
 276 002c 7B6A     		ldr	r3, [r7, #36]
 277 002e 002B     		cmp	r3, #0
 278 0030 1ED0     		beq	.L15
 360:./freertos/src/timers.c **** 	{
 361:./freertos/src/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 362:./freertos/src/timers.c **** 		created/initialised. */
 363:./freertos/src/timers.c **** 		prvCheckForValidListAndQueue();
 279              		.loc 1 363 3
 280 0032 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 364:./freertos/src/timers.c **** 
 365:./freertos/src/timers.c **** 		/* Initialise the timer structure members using the function
 366:./freertos/src/timers.c **** 		parameters. */
 367:./freertos/src/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 281              		.loc 1 367 27
 282 0036 7B6A     		ldr	r3, [r7, #36]
 283 0038 FA68     		ldr	r2, [r7, #12]
 284 003a 1A60     		str	r2, [r3]
 368:./freertos/src/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 285              		.loc 1 368 35
 286 003c 7B6A     		ldr	r3, [r7, #36]
 287 003e BA68     		ldr	r2, [r7, #8]
 288 0040 9A61     		str	r2, [r3, #24]
 369:./freertos/src/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 16


 289              		.loc 1 369 25
 290 0042 7B6A     		ldr	r3, [r7, #36]
 291 0044 3A68     		ldr	r2, [r7]
 292 0046 DA61     		str	r2, [r3, #28]
 370:./freertos/src/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 293              		.loc 1 370 34
 294 0048 7B6A     		ldr	r3, [r7, #36]
 295 004a 3A6A     		ldr	r2, [r7, #32]
 296 004c 1A62     		str	r2, [r3, #32]
 371:./freertos/src/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 297              		.loc 1 371 3
 298 004e 7B6A     		ldr	r3, [r7, #36]
 299 0050 0433     		adds	r3, r3, #4
 300 0052 1846     		mov	r0, r3
 301 0054 FFF7FEFF 		bl	vListInitialiseItem
 372:./freertos/src/timers.c **** 		if( uxAutoReload != pdFALSE )
 302              		.loc 1 372 5
 303 0058 7B68     		ldr	r3, [r7, #4]
 304 005a 002B     		cmp	r3, #0
 305 005c 08D0     		beq	.L15
 373:./freertos/src/timers.c **** 		{
 374:./freertos/src/timers.c **** 			pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 306              		.loc 1 374 14
 307 005e 7B6A     		ldr	r3, [r7, #36]
 308 0060 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 309              		.loc 1 374 25
 310 0064 43F00403 		orr	r3, r3, #4
 311 0068 DAB2     		uxtb	r2, r3
 312 006a 7B6A     		ldr	r3, [r7, #36]
 313 006c 83F82820 		strb	r2, [r3, #40]
 314              	.L15:
 375:./freertos/src/timers.c **** 		}
 376:./freertos/src/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 377:./freertos/src/timers.c **** 	}
 378:./freertos/src/timers.c **** }
 315              		.loc 1 378 1
 316 0070 00BF     		nop
 317 0072 1837     		adds	r7, r7, #24
 318              	.LCFI13:
 319              		.cfi_def_cfa_offset 8
 320 0074 BD46     		mov	sp, r7
 321              	.LCFI14:
 322              		.cfi_def_cfa_register 13
 323              		@ sp needed
 324 0076 80BD     		pop	{r7, pc}
 325              		.cfi_endproc
 326              	.LFE63:
 328              		.section	.text.xTimerGenericCommand,"ax",%progbits
 329              		.align	1
 330              		.global	xTimerGenericCommand
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 335              	xTimerGenericCommand:
 336              	.LFB64:
 379:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 380:./freertos/src/timers.c **** 
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 17


 381:./freertos/src/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:./freertos/src/timers.c **** {
 337              		.loc 1 382 1
 338              		.cfi_startproc
 339              		@ args = 4, pretend = 0, frame = 40
 340              		@ frame_needed = 1, uses_anonymous_args = 0
 341 0000 80B5     		push	{r7, lr}
 342              	.LCFI15:
 343              		.cfi_def_cfa_offset 8
 344              		.cfi_offset 7, -8
 345              		.cfi_offset 14, -4
 346 0002 8AB0     		sub	sp, sp, #40
 347              	.LCFI16:
 348              		.cfi_def_cfa_offset 48
 349 0004 00AF     		add	r7, sp, #0
 350              	.LCFI17:
 351              		.cfi_def_cfa_register 7
 352 0006 F860     		str	r0, [r7, #12]
 353 0008 B960     		str	r1, [r7, #8]
 354 000a 7A60     		str	r2, [r7, #4]
 355 000c 3B60     		str	r3, [r7]
 383:./freertos/src/timers.c **** BaseType_t xReturn = pdFAIL;
 356              		.loc 1 383 12
 357 000e 0023     		movs	r3, #0
 358 0010 7B62     		str	r3, [r7, #36]
 384:./freertos/src/timers.c **** DaemonTaskMessage_t xMessage;
 385:./freertos/src/timers.c **** 
 386:./freertos/src/timers.c **** 	configASSERT( xTimer );
 359              		.loc 1 386 2
 360 0012 FB68     		ldr	r3, [r7, #12]
 361 0014 002B     		cmp	r3, #0
 362 0016 0BD1     		bne	.L17
 363              	.LBB38:
 364              	.LBB39:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 365              		.loc 2 197 2
 366              		.syntax unified
 367              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 368 0018 4FF05003 			mov r3, #80												
 369 001c 83F31188 		msr basepri, r3											
 370 0020 BFF36F8F 		isb														
 371 0024 BFF34F8F 		dsb														
 372              	
 373              	@ 0 "" 2
 374              		.thumb
 375              		.syntax unified
 376 0028 3B62     		str	r3, [r7, #32]
 377              		.loc 2 205 1
 378 002a 00BF     		nop
 379              	.L18:
 380              	.LBE39:
 381              	.LBE38:
 382              		.loc 1 386 2
 383 002c 00BF     		nop
 384 002e FDE7     		b	.L18
 385              	.L17:
 387:./freertos/src/timers.c **** 
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 18


 388:./freertos/src/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:./freertos/src/timers.c **** 	on a particular timer definition. */
 390:./freertos/src/timers.c **** 	if( xTimerQueue != NULL )
 386              		.loc 1 390 18
 387 0030 194B     		ldr	r3, .L23
 388 0032 1B68     		ldr	r3, [r3]
 389              		.loc 1 390 4
 390 0034 002B     		cmp	r3, #0
 391 0036 2AD0     		beq	.L19
 391:./freertos/src/timers.c **** 	{
 392:./freertos/src/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:./freertos/src/timers.c **** 		xMessage.xMessageID = xCommandID;
 392              		.loc 1 393 23
 393 0038 BB68     		ldr	r3, [r7, #8]
 394 003a 7B61     		str	r3, [r7, #20]
 394:./freertos/src/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395              		.loc 1 394 45
 396 003c 7B68     		ldr	r3, [r7, #4]
 397 003e BB61     		str	r3, [r7, #24]
 395:./freertos/src/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 398              		.loc 1 395 39
 399 0040 FB68     		ldr	r3, [r7, #12]
 400 0042 FB61     		str	r3, [r7, #28]
 396:./freertos/src/timers.c **** 
 397:./freertos/src/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 401              		.loc 1 397 5
 402 0044 BB68     		ldr	r3, [r7, #8]
 403 0046 052B     		cmp	r3, #5
 404 0048 18DC     		bgt	.L20
 398:./freertos/src/timers.c **** 		{
 399:./freertos/src/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 405              		.loc 1 399 8
 406 004a FFF7FEFF 		bl	xTaskGetSchedulerState
 407 004e 0346     		mov	r3, r0
 408              		.loc 1 399 6 discriminator 1
 409 0050 022B     		cmp	r3, #2
 410 0052 09D1     		bne	.L21
 400:./freertos/src/timers.c **** 			{
 401:./freertos/src/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 411              		.loc 1 401 15
 412 0054 104B     		ldr	r3, .L23
 413 0056 1868     		ldr	r0, [r3]
 414 0058 07F11401 		add	r1, r7, #20
 415 005c 0023     		movs	r3, #0
 416 005e 3A6B     		ldr	r2, [r7, #48]
 417 0060 FFF7FEFF 		bl	xQueueGenericSend
 418 0064 7862     		str	r0, [r7, #36]
 419 0066 12E0     		b	.L19
 420              	.L21:
 402:./freertos/src/timers.c **** 			}
 403:./freertos/src/timers.c **** 			else
 404:./freertos/src/timers.c **** 			{
 405:./freertos/src/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 421              		.loc 1 405 15
 422 0068 0B4B     		ldr	r3, .L23
 423 006a 1868     		ldr	r0, [r3]
 424 006c 07F11401 		add	r1, r7, #20
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 19


 425 0070 0023     		movs	r3, #0
 426 0072 0022     		movs	r2, #0
 427 0074 FFF7FEFF 		bl	xQueueGenericSend
 428 0078 7862     		str	r0, [r7, #36]
 429 007a 08E0     		b	.L19
 430              	.L20:
 406:./freertos/src/timers.c **** 			}
 407:./freertos/src/timers.c **** 		}
 408:./freertos/src/timers.c **** 		else
 409:./freertos/src/timers.c **** 		{
 410:./freertos/src/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 431              		.loc 1 410 14
 432 007c 064B     		ldr	r3, .L23
 433 007e 1868     		ldr	r0, [r3]
 434 0080 07F11401 		add	r1, r7, #20
 435 0084 0023     		movs	r3, #0
 436 0086 3A68     		ldr	r2, [r7]
 437 0088 FFF7FEFF 		bl	xQueueGenericSendFromISR
 438 008c 7862     		str	r0, [r7, #36]
 439              	.L19:
 411:./freertos/src/timers.c **** 		}
 412:./freertos/src/timers.c **** 
 413:./freertos/src/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:./freertos/src/timers.c **** 	}
 415:./freertos/src/timers.c **** 	else
 416:./freertos/src/timers.c **** 	{
 417:./freertos/src/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:./freertos/src/timers.c **** 	}
 419:./freertos/src/timers.c **** 
 420:./freertos/src/timers.c **** 	return xReturn;
 440              		.loc 1 420 9
 441 008e 7B6A     		ldr	r3, [r7, #36]
 421:./freertos/src/timers.c **** }
 442              		.loc 1 421 1
 443 0090 1846     		mov	r0, r3
 444 0092 2837     		adds	r7, r7, #40
 445              	.LCFI18:
 446              		.cfi_def_cfa_offset 8
 447 0094 BD46     		mov	sp, r7
 448              	.LCFI19:
 449              		.cfi_def_cfa_register 13
 450              		@ sp needed
 451 0096 80BD     		pop	{r7, pc}
 452              	.L24:
 453              		.align	2
 454              	.L23:
 455 0098 00000000 		.word	xTimerQueue
 456              		.cfi_endproc
 457              	.LFE64:
 459              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 460              		.align	1
 461              		.global	xTimerGetTimerDaemonTaskHandle
 462              		.syntax unified
 463              		.thumb
 464              		.thumb_func
 466              	xTimerGetTimerDaemonTaskHandle:
 467              	.LFB65:
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 20


 422:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 423:./freertos/src/timers.c **** 
 424:./freertos/src/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:./freertos/src/timers.c **** {
 468              		.loc 1 425 1
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 8
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473 0000 80B4     		push	{r7}
 474              	.LCFI20:
 475              		.cfi_def_cfa_offset 4
 476              		.cfi_offset 7, -4
 477 0002 83B0     		sub	sp, sp, #12
 478              	.LCFI21:
 479              		.cfi_def_cfa_offset 16
 480 0004 00AF     		add	r7, sp, #0
 481              	.LCFI22:
 482              		.cfi_def_cfa_register 7
 426:./freertos/src/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:./freertos/src/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:./freertos/src/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 483              		.loc 1 428 2
 484 0006 0B4B     		ldr	r3, .L29
 485 0008 1B68     		ldr	r3, [r3]
 486 000a 002B     		cmp	r3, #0
 487 000c 0BD1     		bne	.L26
 488              	.LBB40:
 489              	.LBB41:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 490              		.loc 2 197 2
 491              		.syntax unified
 492              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 493 000e 4FF05003 			mov r3, #80												
 494 0012 83F31188 		msr basepri, r3											
 495 0016 BFF36F8F 		isb														
 496 001a BFF34F8F 		dsb														
 497              	
 498              	@ 0 "" 2
 499              		.thumb
 500              		.syntax unified
 501 001e 7B60     		str	r3, [r7, #4]
 502              		.loc 2 205 1
 503 0020 00BF     		nop
 504              	.L27:
 505              	.LBE41:
 506              	.LBE40:
 507              		.loc 1 428 2
 508 0022 00BF     		nop
 509 0024 FDE7     		b	.L27
 510              	.L26:
 429:./freertos/src/timers.c **** 	return xTimerTaskHandle;
 511              		.loc 1 429 9
 512 0026 034B     		ldr	r3, .L29
 513 0028 1B68     		ldr	r3, [r3]
 430:./freertos/src/timers.c **** }
 514              		.loc 1 430 1
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 21


 515 002a 1846     		mov	r0, r3
 516 002c 0C37     		adds	r7, r7, #12
 517              	.LCFI23:
 518              		.cfi_def_cfa_offset 4
 519 002e BD46     		mov	sp, r7
 520              	.LCFI24:
 521              		.cfi_def_cfa_register 13
 522              		@ sp needed
 523 0030 80BC     		pop	{r7}
 524              	.LCFI25:
 525              		.cfi_restore 7
 526              		.cfi_def_cfa_offset 0
 527 0032 7047     		bx	lr
 528              	.L30:
 529              		.align	2
 530              	.L29:
 531 0034 00000000 		.word	xTimerTaskHandle
 532              		.cfi_endproc
 533              	.LFE65:
 535              		.section	.text.xTimerGetPeriod,"ax",%progbits
 536              		.align	1
 537              		.global	xTimerGetPeriod
 538              		.syntax unified
 539              		.thumb
 540              		.thumb_func
 542              	xTimerGetPeriod:
 543              	.LFB66:
 431:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 432:./freertos/src/timers.c **** 
 433:./freertos/src/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:./freertos/src/timers.c **** {
 544              		.loc 1 434 1
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 16
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548              		@ link register save eliminated.
 549 0000 80B4     		push	{r7}
 550              	.LCFI26:
 551              		.cfi_def_cfa_offset 4
 552              		.cfi_offset 7, -4
 553 0002 85B0     		sub	sp, sp, #20
 554              	.LCFI27:
 555              		.cfi_def_cfa_offset 24
 556 0004 00AF     		add	r7, sp, #0
 557              	.LCFI28:
 558              		.cfi_def_cfa_register 7
 559 0006 7860     		str	r0, [r7, #4]
 435:./freertos/src/timers.c **** Timer_t *pxTimer = xTimer;
 560              		.loc 1 435 10
 561 0008 7B68     		ldr	r3, [r7, #4]
 562 000a FB60     		str	r3, [r7, #12]
 436:./freertos/src/timers.c **** 
 437:./freertos/src/timers.c **** 	configASSERT( xTimer );
 563              		.loc 1 437 2
 564 000c 7B68     		ldr	r3, [r7, #4]
 565 000e 002B     		cmp	r3, #0
 566 0010 0BD1     		bne	.L32
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 22


 567              	.LBB42:
 568              	.LBB43:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 569              		.loc 2 197 2
 570              		.syntax unified
 571              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 572 0012 4FF05003 			mov r3, #80												
 573 0016 83F31188 		msr basepri, r3											
 574 001a BFF36F8F 		isb														
 575 001e BFF34F8F 		dsb														
 576              	
 577              	@ 0 "" 2
 578              		.thumb
 579              		.syntax unified
 580 0022 BB60     		str	r3, [r7, #8]
 581              		.loc 2 205 1
 582 0024 00BF     		nop
 583              	.L33:
 584              	.LBE43:
 585              	.LBE42:
 586              		.loc 1 437 2
 587 0026 00BF     		nop
 588 0028 FDE7     		b	.L33
 589              	.L32:
 438:./freertos/src/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 590              		.loc 1 438 16
 591 002a FB68     		ldr	r3, [r7, #12]
 592 002c 9B69     		ldr	r3, [r3, #24]
 439:./freertos/src/timers.c **** }
 593              		.loc 1 439 1
 594 002e 1846     		mov	r0, r3
 595 0030 1437     		adds	r7, r7, #20
 596              	.LCFI29:
 597              		.cfi_def_cfa_offset 4
 598 0032 BD46     		mov	sp, r7
 599              	.LCFI30:
 600              		.cfi_def_cfa_register 13
 601              		@ sp needed
 602 0034 80BC     		pop	{r7}
 603              	.LCFI31:
 604              		.cfi_restore 7
 605              		.cfi_def_cfa_offset 0
 606 0036 7047     		bx	lr
 607              		.cfi_endproc
 608              	.LFE66:
 610              		.section	.text.vTimerSetReloadMode,"ax",%progbits
 611              		.align	1
 612              		.global	vTimerSetReloadMode
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 617              	vTimerSetReloadMode:
 618              	.LFB67:
 440:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 441:./freertos/src/timers.c **** 
 442:./freertos/src/timers.c **** void vTimerSetReloadMode( TimerHandle_t xTimer, const UBaseType_t uxAutoReload )
 443:./freertos/src/timers.c **** {
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 23


 619              		.loc 1 443 1
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 16
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623 0000 80B5     		push	{r7, lr}
 624              	.LCFI32:
 625              		.cfi_def_cfa_offset 8
 626              		.cfi_offset 7, -8
 627              		.cfi_offset 14, -4
 628 0002 84B0     		sub	sp, sp, #16
 629              	.LCFI33:
 630              		.cfi_def_cfa_offset 24
 631 0004 00AF     		add	r7, sp, #0
 632              	.LCFI34:
 633              		.cfi_def_cfa_register 7
 634 0006 7860     		str	r0, [r7, #4]
 635 0008 3960     		str	r1, [r7]
 444:./freertos/src/timers.c **** Timer_t * pxTimer =  xTimer;
 636              		.loc 1 444 11
 637 000a 7B68     		ldr	r3, [r7, #4]
 638 000c FB60     		str	r3, [r7, #12]
 445:./freertos/src/timers.c **** 
 446:./freertos/src/timers.c **** 	configASSERT( xTimer );
 639              		.loc 1 446 2
 640 000e 7B68     		ldr	r3, [r7, #4]
 641 0010 002B     		cmp	r3, #0
 642 0012 0BD1     		bne	.L36
 643              	.LBB44:
 644              	.LBB45:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 645              		.loc 2 197 2
 646              		.syntax unified
 647              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 648 0014 4FF05003 			mov r3, #80												
 649 0018 83F31188 		msr basepri, r3											
 650 001c BFF36F8F 		isb														
 651 0020 BFF34F8F 		dsb														
 652              	
 653              	@ 0 "" 2
 654              		.thumb
 655              		.syntax unified
 656 0024 BB60     		str	r3, [r7, #8]
 657              		.loc 2 205 1
 658 0026 00BF     		nop
 659              	.L37:
 660              	.LBE45:
 661              	.LBE44:
 662              		.loc 1 446 2
 663 0028 00BF     		nop
 664 002a FDE7     		b	.L37
 665              	.L36:
 447:./freertos/src/timers.c **** 	taskENTER_CRITICAL();
 666              		.loc 1 447 2
 667 002c FFF7FEFF 		bl	vPortEnterCritical
 448:./freertos/src/timers.c **** 	{
 449:./freertos/src/timers.c **** 		if( uxAutoReload != pdFALSE )
 668              		.loc 1 449 5
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 24


 669 0030 3B68     		ldr	r3, [r7]
 670 0032 002B     		cmp	r3, #0
 671 0034 09D0     		beq	.L38
 450:./freertos/src/timers.c **** 		{
 451:./freertos/src/timers.c **** 			pxTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 672              		.loc 1 451 11
 673 0036 FB68     		ldr	r3, [r7, #12]
 674 0038 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 675              		.loc 1 451 22
 676 003c 43F00403 		orr	r3, r3, #4
 677 0040 DAB2     		uxtb	r2, r3
 678 0042 FB68     		ldr	r3, [r7, #12]
 679 0044 83F82820 		strb	r2, [r3, #40]
 680 0048 08E0     		b	.L39
 681              	.L38:
 452:./freertos/src/timers.c **** 		}
 453:./freertos/src/timers.c **** 		else
 454:./freertos/src/timers.c **** 		{
 455:./freertos/src/timers.c **** 			pxTimer->ucStatus &= ~tmrSTATUS_IS_AUTORELOAD;
 682              		.loc 1 455 11
 683 004a FB68     		ldr	r3, [r7, #12]
 684 004c 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 685              		.loc 1 455 22
 686 0050 23F00403 		bic	r3, r3, #4
 687 0054 DAB2     		uxtb	r2, r3
 688 0056 FB68     		ldr	r3, [r7, #12]
 689 0058 83F82820 		strb	r2, [r3, #40]
 690              	.L39:
 456:./freertos/src/timers.c **** 		}
 457:./freertos/src/timers.c **** 	}
 458:./freertos/src/timers.c **** 	taskEXIT_CRITICAL();
 691              		.loc 1 458 2
 692 005c FFF7FEFF 		bl	vPortExitCritical
 459:./freertos/src/timers.c **** }
 693              		.loc 1 459 1
 694 0060 00BF     		nop
 695 0062 1037     		adds	r7, r7, #16
 696              	.LCFI35:
 697              		.cfi_def_cfa_offset 8
 698 0064 BD46     		mov	sp, r7
 699              	.LCFI36:
 700              		.cfi_def_cfa_register 13
 701              		@ sp needed
 702 0066 80BD     		pop	{r7, pc}
 703              		.cfi_endproc
 704              	.LFE67:
 706              		.section	.text.uxTimerGetReloadMode,"ax",%progbits
 707              		.align	1
 708              		.global	uxTimerGetReloadMode
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 713              	uxTimerGetReloadMode:
 714              	.LFB68:
 460:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 461:./freertos/src/timers.c **** 
 462:./freertos/src/timers.c **** UBaseType_t uxTimerGetReloadMode( TimerHandle_t xTimer )
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 25


 463:./freertos/src/timers.c **** {
 715              		.loc 1 463 1
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 24
 718              		@ frame_needed = 1, uses_anonymous_args = 0
 719 0000 80B5     		push	{r7, lr}
 720              	.LCFI37:
 721              		.cfi_def_cfa_offset 8
 722              		.cfi_offset 7, -8
 723              		.cfi_offset 14, -4
 724 0002 86B0     		sub	sp, sp, #24
 725              	.LCFI38:
 726              		.cfi_def_cfa_offset 32
 727 0004 00AF     		add	r7, sp, #0
 728              	.LCFI39:
 729              		.cfi_def_cfa_register 7
 730 0006 7860     		str	r0, [r7, #4]
 464:./freertos/src/timers.c **** Timer_t * pxTimer =  xTimer;
 731              		.loc 1 464 11
 732 0008 7B68     		ldr	r3, [r7, #4]
 733 000a 3B61     		str	r3, [r7, #16]
 465:./freertos/src/timers.c **** UBaseType_t uxReturn;
 466:./freertos/src/timers.c **** 
 467:./freertos/src/timers.c **** 	configASSERT( xTimer );
 734              		.loc 1 467 2
 735 000c 7B68     		ldr	r3, [r7, #4]
 736 000e 002B     		cmp	r3, #0
 737 0010 0BD1     		bne	.L41
 738              	.LBB46:
 739              	.LBB47:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 740              		.loc 2 197 2
 741              		.syntax unified
 742              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 743 0012 4FF05003 			mov r3, #80												
 744 0016 83F31188 		msr basepri, r3											
 745 001a BFF36F8F 		isb														
 746 001e BFF34F8F 		dsb														
 747              	
 748              	@ 0 "" 2
 749              		.thumb
 750              		.syntax unified
 751 0022 FB60     		str	r3, [r7, #12]
 752              		.loc 2 205 1
 753 0024 00BF     		nop
 754              	.L42:
 755              	.LBE47:
 756              	.LBE46:
 757              		.loc 1 467 2
 758 0026 00BF     		nop
 759 0028 FDE7     		b	.L42
 760              	.L41:
 468:./freertos/src/timers.c **** 	taskENTER_CRITICAL();
 761              		.loc 1 468 2
 762 002a FFF7FEFF 		bl	vPortEnterCritical
 469:./freertos/src/timers.c **** 	{
 470:./freertos/src/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) == 0 )
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 26


 763              		.loc 1 470 16
 764 002e 3B69     		ldr	r3, [r7, #16]
 765 0030 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 766              		.loc 1 470 27
 767 0034 03F00403 		and	r3, r3, #4
 768              		.loc 1 470 5
 769 0038 002B     		cmp	r3, #0
 770 003a 02D1     		bne	.L43
 471:./freertos/src/timers.c **** 		{
 472:./freertos/src/timers.c **** 			/* Not an auto-reload timer. */
 473:./freertos/src/timers.c **** 			uxReturn = ( UBaseType_t ) pdFALSE;
 771              		.loc 1 473 13
 772 003c 0023     		movs	r3, #0
 773 003e 7B61     		str	r3, [r7, #20]
 774 0040 01E0     		b	.L44
 775              	.L43:
 474:./freertos/src/timers.c **** 		}
 475:./freertos/src/timers.c **** 		else
 476:./freertos/src/timers.c **** 		{
 477:./freertos/src/timers.c **** 			/* Is an auto-reload timer. */
 478:./freertos/src/timers.c **** 			uxReturn = ( UBaseType_t ) pdTRUE;
 776              		.loc 1 478 13
 777 0042 0123     		movs	r3, #1
 778 0044 7B61     		str	r3, [r7, #20]
 779              	.L44:
 479:./freertos/src/timers.c **** 		}
 480:./freertos/src/timers.c **** 	}
 481:./freertos/src/timers.c **** 	taskEXIT_CRITICAL();
 780              		.loc 1 481 2
 781 0046 FFF7FEFF 		bl	vPortExitCritical
 482:./freertos/src/timers.c **** 
 483:./freertos/src/timers.c **** 	return uxReturn;
 782              		.loc 1 483 9
 783 004a 7B69     		ldr	r3, [r7, #20]
 484:./freertos/src/timers.c **** }
 784              		.loc 1 484 1
 785 004c 1846     		mov	r0, r3
 786 004e 1837     		adds	r7, r7, #24
 787              	.LCFI40:
 788              		.cfi_def_cfa_offset 8
 789 0050 BD46     		mov	sp, r7
 790              	.LCFI41:
 791              		.cfi_def_cfa_register 13
 792              		@ sp needed
 793 0052 80BD     		pop	{r7, pc}
 794              		.cfi_endproc
 795              	.LFE68:
 797              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 798              		.align	1
 799              		.global	xTimerGetExpiryTime
 800              		.syntax unified
 801              		.thumb
 802              		.thumb_func
 804              	xTimerGetExpiryTime:
 805              	.LFB69:
 485:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 486:./freertos/src/timers.c **** 
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 27


 487:./freertos/src/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 488:./freertos/src/timers.c **** {
 806              		.loc 1 488 1
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 24
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810              		@ link register save eliminated.
 811 0000 80B4     		push	{r7}
 812              	.LCFI42:
 813              		.cfi_def_cfa_offset 4
 814              		.cfi_offset 7, -4
 815 0002 87B0     		sub	sp, sp, #28
 816              	.LCFI43:
 817              		.cfi_def_cfa_offset 32
 818 0004 00AF     		add	r7, sp, #0
 819              	.LCFI44:
 820              		.cfi_def_cfa_register 7
 821 0006 7860     		str	r0, [r7, #4]
 489:./freertos/src/timers.c **** Timer_t * pxTimer =  xTimer;
 822              		.loc 1 489 11
 823 0008 7B68     		ldr	r3, [r7, #4]
 824 000a 7B61     		str	r3, [r7, #20]
 490:./freertos/src/timers.c **** TickType_t xReturn;
 491:./freertos/src/timers.c **** 
 492:./freertos/src/timers.c **** 	configASSERT( xTimer );
 825              		.loc 1 492 2
 826 000c 7B68     		ldr	r3, [r7, #4]
 827 000e 002B     		cmp	r3, #0
 828 0010 0BD1     		bne	.L47
 829              	.LBB48:
 830              	.LBB49:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 831              		.loc 2 197 2
 832              		.syntax unified
 833              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 834 0012 4FF05003 			mov r3, #80												
 835 0016 83F31188 		msr basepri, r3											
 836 001a BFF36F8F 		isb														
 837 001e BFF34F8F 		dsb														
 838              	
 839              	@ 0 "" 2
 840              		.thumb
 841              		.syntax unified
 842 0022 FB60     		str	r3, [r7, #12]
 843              		.loc 2 205 1
 844 0024 00BF     		nop
 845              	.L48:
 846              	.LBE49:
 847              	.LBE48:
 848              		.loc 1 492 2
 849 0026 00BF     		nop
 850 0028 FDE7     		b	.L48
 851              	.L47:
 493:./freertos/src/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 852              		.loc 1 493 10
 853 002a 7B69     		ldr	r3, [r7, #20]
 854 002c 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 28


 855 002e 3B61     		str	r3, [r7, #16]
 494:./freertos/src/timers.c **** 	return xReturn;
 856              		.loc 1 494 9
 857 0030 3B69     		ldr	r3, [r7, #16]
 495:./freertos/src/timers.c **** }
 858              		.loc 1 495 1
 859 0032 1846     		mov	r0, r3
 860 0034 1C37     		adds	r7, r7, #28
 861              	.LCFI45:
 862              		.cfi_def_cfa_offset 4
 863 0036 BD46     		mov	sp, r7
 864              	.LCFI46:
 865              		.cfi_def_cfa_register 13
 866              		@ sp needed
 867 0038 80BC     		pop	{r7}
 868              	.LCFI47:
 869              		.cfi_restore 7
 870              		.cfi_def_cfa_offset 0
 871 003a 7047     		bx	lr
 872              		.cfi_endproc
 873              	.LFE69:
 875              		.section	.text.pcTimerGetName,"ax",%progbits
 876              		.align	1
 877              		.global	pcTimerGetName
 878              		.syntax unified
 879              		.thumb
 880              		.thumb_func
 882              	pcTimerGetName:
 883              	.LFB70:
 496:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 497:./freertos/src/timers.c **** 
 498:./freertos/src/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 499:./freertos/src/timers.c **** {
 884              		.loc 1 499 1
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 16
 887              		@ frame_needed = 1, uses_anonymous_args = 0
 888              		@ link register save eliminated.
 889 0000 80B4     		push	{r7}
 890              	.LCFI48:
 891              		.cfi_def_cfa_offset 4
 892              		.cfi_offset 7, -4
 893 0002 85B0     		sub	sp, sp, #20
 894              	.LCFI49:
 895              		.cfi_def_cfa_offset 24
 896 0004 00AF     		add	r7, sp, #0
 897              	.LCFI50:
 898              		.cfi_def_cfa_register 7
 899 0006 7860     		str	r0, [r7, #4]
 500:./freertos/src/timers.c **** Timer_t *pxTimer = xTimer;
 900              		.loc 1 500 10
 901 0008 7B68     		ldr	r3, [r7, #4]
 902 000a FB60     		str	r3, [r7, #12]
 501:./freertos/src/timers.c **** 
 502:./freertos/src/timers.c **** 	configASSERT( xTimer );
 903              		.loc 1 502 2
 904 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 29


 905 000e 002B     		cmp	r3, #0
 906 0010 0BD1     		bne	.L51
 907              	.LBB50:
 908              	.LBB51:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 909              		.loc 2 197 2
 910              		.syntax unified
 911              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 912 0012 4FF05003 			mov r3, #80												
 913 0016 83F31188 		msr basepri, r3											
 914 001a BFF36F8F 		isb														
 915 001e BFF34F8F 		dsb														
 916              	
 917              	@ 0 "" 2
 918              		.thumb
 919              		.syntax unified
 920 0022 BB60     		str	r3, [r7, #8]
 921              		.loc 2 205 1
 922 0024 00BF     		nop
 923              	.L52:
 924              	.LBE51:
 925              	.LBE50:
 926              		.loc 1 502 2
 927 0026 00BF     		nop
 928 0028 FDE7     		b	.L52
 929              	.L51:
 503:./freertos/src/timers.c **** 	return pxTimer->pcTimerName;
 930              		.loc 1 503 16
 931 002a FB68     		ldr	r3, [r7, #12]
 932 002c 1B68     		ldr	r3, [r3]
 504:./freertos/src/timers.c **** }
 933              		.loc 1 504 1
 934 002e 1846     		mov	r0, r3
 935 0030 1437     		adds	r7, r7, #20
 936              	.LCFI51:
 937              		.cfi_def_cfa_offset 4
 938 0032 BD46     		mov	sp, r7
 939              	.LCFI52:
 940              		.cfi_def_cfa_register 13
 941              		@ sp needed
 942 0034 80BC     		pop	{r7}
 943              	.LCFI53:
 944              		.cfi_restore 7
 945              		.cfi_def_cfa_offset 0
 946 0036 7047     		bx	lr
 947              		.cfi_endproc
 948              	.LFE70:
 950              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 951              		.align	1
 952              		.syntax unified
 953              		.thumb
 954              		.thumb_func
 956              	prvProcessExpiredTimer:
 957              	.LFB71:
 505:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 506:./freertos/src/timers.c **** 
 507:./freertos/src/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 30


 508:./freertos/src/timers.c **** {
 958              		.loc 1 508 1
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 24
 961              		@ frame_needed = 1, uses_anonymous_args = 0
 962 0000 80B5     		push	{r7, lr}
 963              	.LCFI54:
 964              		.cfi_def_cfa_offset 8
 965              		.cfi_offset 7, -8
 966              		.cfi_offset 14, -4
 967 0002 88B0     		sub	sp, sp, #32
 968              	.LCFI55:
 969              		.cfi_def_cfa_offset 40
 970 0004 02AF     		add	r7, sp, #8
 971              	.LCFI56:
 972              		.cfi_def_cfa 7, 32
 973 0006 7860     		str	r0, [r7, #4]
 974 0008 3960     		str	r1, [r7]
 509:./freertos/src/timers.c **** BaseType_t xResult;
 510:./freertos/src/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !
 975              		.loc 1 510 41
 976 000a 234B     		ldr	r3, .L58
 977 000c 1B68     		ldr	r3, [r3]
 978 000e DB68     		ldr	r3, [r3, #12]
 979              		.loc 1 510 17
 980 0010 DB68     		ldr	r3, [r3, #12]
 981 0012 7B61     		str	r3, [r7, #20]
 511:./freertos/src/timers.c **** 
 512:./freertos/src/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 513:./freertos/src/timers.c **** 	been performed to ensure the list is not empty. */
 514:./freertos/src/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 982              		.loc 1 514 11
 983 0014 7B69     		ldr	r3, [r7, #20]
 984 0016 0433     		adds	r3, r3, #4
 985 0018 1846     		mov	r0, r3
 986 001a FFF7FEFF 		bl	uxListRemove
 515:./freertos/src/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 516:./freertos/src/timers.c **** 
 517:./freertos/src/timers.c **** 	/* If the timer is an auto-reload timer then calculate the next
 518:./freertos/src/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 519:./freertos/src/timers.c **** 	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 987              		.loc 1 519 15
 988 001e 7B69     		ldr	r3, [r7, #20]
 989 0020 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 990              		.loc 1 519 26
 991 0024 03F00403 		and	r3, r3, #4
 992              		.loc 1 519 4
 993 0028 002B     		cmp	r3, #0
 994 002a 23D0     		beq	.L55
 520:./freertos/src/timers.c **** 	{
 521:./freertos/src/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 522:./freertos/src/timers.c **** 		other than the current time.  It will therefore be inserted into the
 523:./freertos/src/timers.c **** 		correct list relative to the time this task thinks it is now. */
 524:./freertos/src/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 995              		.loc 1 524 71
 996 002c 7B69     		ldr	r3, [r7, #20]
 997 002e 9A69     		ldr	r2, [r3, #24]
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 31


 998              		.loc 1 524 7
 999 0030 7B68     		ldr	r3, [r7, #4]
 1000 0032 D118     		adds	r1, r2, r3
 1001 0034 7B68     		ldr	r3, [r7, #4]
 1002 0036 3A68     		ldr	r2, [r7]
 1003 0038 7869     		ldr	r0, [r7, #20]
 1004 003a FFF7FEFF 		bl	prvInsertTimerInActiveList
 1005 003e 0346     		mov	r3, r0
 1006              		.loc 1 524 5 discriminator 1
 1007 0040 002B     		cmp	r3, #0
 1008 0042 20D0     		beq	.L56
 525:./freertos/src/timers.c **** 		{
 526:./freertos/src/timers.c **** 			/* The timer expired before it was added to the active timer
 527:./freertos/src/timers.c **** 			list.  Reload it now.  */
 528:./freertos/src/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 1009              		.loc 1 528 14
 1010 0044 0023     		movs	r3, #0
 1011 0046 0093     		str	r3, [sp]
 1012 0048 0023     		movs	r3, #0
 1013 004a 7A68     		ldr	r2, [r7, #4]
 1014 004c 0021     		movs	r1, #0
 1015 004e 7869     		ldr	r0, [r7, #20]
 1016 0050 FFF7FEFF 		bl	xTimerGenericCommand
 1017 0054 3861     		str	r0, [r7, #16]
 529:./freertos/src/timers.c **** 			configASSERT( xResult );
 1018              		.loc 1 529 4
 1019 0056 3B69     		ldr	r3, [r7, #16]
 1020 0058 002B     		cmp	r3, #0
 1021 005a 14D1     		bne	.L56
 1022              	.LBB52:
 1023              	.LBB53:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1024              		.loc 2 197 2
 1025              		.syntax unified
 1026              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 1027 005c 4FF05003 			mov r3, #80												
 1028 0060 83F31188 		msr basepri, r3											
 1029 0064 BFF36F8F 		isb														
 1030 0068 BFF34F8F 		dsb														
 1031              	
 1032              	@ 0 "" 2
 1033              		.thumb
 1034              		.syntax unified
 1035 006c FB60     		str	r3, [r7, #12]
 1036              		.loc 2 205 1
 1037 006e 00BF     		nop
 1038              	.L57:
 1039              	.LBE53:
 1040              	.LBE52:
 1041              		.loc 1 529 4
 1042 0070 00BF     		nop
 1043 0072 FDE7     		b	.L57
 1044              	.L55:
 530:./freertos/src/timers.c **** 			( void ) xResult;
 531:./freertos/src/timers.c **** 		}
 532:./freertos/src/timers.c **** 		else
 533:./freertos/src/timers.c **** 		{
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 32


 534:./freertos/src/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 535:./freertos/src/timers.c **** 		}
 536:./freertos/src/timers.c **** 	}
 537:./freertos/src/timers.c **** 	else
 538:./freertos/src/timers.c **** 	{
 539:./freertos/src/timers.c **** 		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 1045              		.loc 1 539 10
 1046 0074 7B69     		ldr	r3, [r7, #20]
 1047 0076 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1048              		.loc 1 539 21
 1049 007a 23F00103 		bic	r3, r3, #1
 1050 007e DAB2     		uxtb	r2, r3
 1051 0080 7B69     		ldr	r3, [r7, #20]
 1052 0082 83F82820 		strb	r2, [r3, #40]
 1053              	.L56:
 540:./freertos/src/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 541:./freertos/src/timers.c **** 	}
 542:./freertos/src/timers.c **** 
 543:./freertos/src/timers.c **** 	/* Call the timer callback. */
 544:./freertos/src/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 1054              		.loc 1 544 9
 1055 0086 7B69     		ldr	r3, [r7, #20]
 1056 0088 1B6A     		ldr	r3, [r3, #32]
 1057              		.loc 1 544 2
 1058 008a 7869     		ldr	r0, [r7, #20]
 1059 008c 9847     		blx	r3
 1060              	.LVL0:
 545:./freertos/src/timers.c **** }
 1061              		.loc 1 545 1
 1062 008e 00BF     		nop
 1063 0090 1837     		adds	r7, r7, #24
 1064              	.LCFI57:
 1065              		.cfi_def_cfa_offset 8
 1066 0092 BD46     		mov	sp, r7
 1067              	.LCFI58:
 1068              		.cfi_def_cfa_register 13
 1069              		@ sp needed
 1070 0094 80BD     		pop	{r7, pc}
 1071              	.L59:
 1072 0096 00BF     		.align	2
 1073              	.L58:
 1074 0098 00000000 		.word	pxCurrentTimerList
 1075              		.cfi_endproc
 1076              	.LFE71:
 1078              		.section	.text.prvTimerTask,"ax",%progbits
 1079              		.align	1
 1080              		.syntax unified
 1081              		.thumb
 1082              		.thumb_func
 1084              	prvTimerTask:
 1085              	.LFB72:
 546:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 547:./freertos/src/timers.c **** 
 548:./freertos/src/timers.c **** static portTASK_FUNCTION( prvTimerTask, pvParameters )
 549:./freertos/src/timers.c **** {
 1086              		.loc 1 549 1
 1087              		.cfi_startproc
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 33


 1088              		@ args = 0, pretend = 0, frame = 16
 1089              		@ frame_needed = 1, uses_anonymous_args = 0
 1090 0000 80B5     		push	{r7, lr}
 1091              	.LCFI59:
 1092              		.cfi_def_cfa_offset 8
 1093              		.cfi_offset 7, -8
 1094              		.cfi_offset 14, -4
 1095 0002 84B0     		sub	sp, sp, #16
 1096              	.LCFI60:
 1097              		.cfi_def_cfa_offset 24
 1098 0004 00AF     		add	r7, sp, #0
 1099              	.LCFI61:
 1100              		.cfi_def_cfa_register 7
 1101 0006 7860     		str	r0, [r7, #4]
 1102              	.L61:
 550:./freertos/src/timers.c **** TickType_t xNextExpireTime;
 551:./freertos/src/timers.c **** BaseType_t xListWasEmpty;
 552:./freertos/src/timers.c **** 
 553:./freertos/src/timers.c **** 	/* Just to avoid compiler warnings. */
 554:./freertos/src/timers.c **** 	( void ) pvParameters;
 555:./freertos/src/timers.c **** 
 556:./freertos/src/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 557:./freertos/src/timers.c **** 	{
 558:./freertos/src/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 559:./freertos/src/timers.c **** 
 560:./freertos/src/timers.c **** 		/* Allow the application writer to execute some code in the context of
 561:./freertos/src/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 562:./freertos/src/timers.c **** 		application includes initialisation code that would benefit from
 563:./freertos/src/timers.c **** 		executing after the scheduler has been started. */
 564:./freertos/src/timers.c **** 		vApplicationDaemonTaskStartupHook();
 565:./freertos/src/timers.c **** 	}
 566:./freertos/src/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 567:./freertos/src/timers.c **** 
 568:./freertos/src/timers.c **** 	for( ;; )
 569:./freertos/src/timers.c **** 	{
 570:./freertos/src/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 571:./freertos/src/timers.c **** 		obtain the time at which the next timer will expire. */
 572:./freertos/src/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 1103              		.loc 1 572 21
 1104 0008 07F10803 		add	r3, r7, #8
 1105 000c 1846     		mov	r0, r3
 1106 000e FFF7FEFF 		bl	prvGetNextExpireTime
 1107 0012 F860     		str	r0, [r7, #12]
 573:./freertos/src/timers.c **** 
 574:./freertos/src/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 575:./freertos/src/timers.c **** 		until either a timer does expire, or a command is received. */
 576:./freertos/src/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 1108              		.loc 1 576 3
 1109 0014 BB68     		ldr	r3, [r7, #8]
 1110 0016 1946     		mov	r1, r3
 1111 0018 F868     		ldr	r0, [r7, #12]
 1112 001a FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 577:./freertos/src/timers.c **** 
 578:./freertos/src/timers.c **** 		/* Empty the command queue. */
 579:./freertos/src/timers.c **** 		prvProcessReceivedCommands();
 1113              		.loc 1 579 3 discriminator 1
 1114 001e FFF7FEFF 		bl	prvProcessReceivedCommands
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 34


 572:./freertos/src/timers.c **** 
 1115              		.loc 1 572 19
 1116 0022 00BF     		nop
 1117 0024 F0E7     		b	.L61
 1118              		.cfi_endproc
 1119              	.LFE72:
 1121              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 1122              		.align	1
 1123              		.syntax unified
 1124              		.thumb
 1125              		.thumb_func
 1127              	prvProcessTimerOrBlockTask:
 1128              	.LFB73:
 580:./freertos/src/timers.c **** 	}
 581:./freertos/src/timers.c **** }
 582:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 583:./freertos/src/timers.c **** 
 584:./freertos/src/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 585:./freertos/src/timers.c **** {
 1129              		.loc 1 585 1
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 16
 1132              		@ frame_needed = 1, uses_anonymous_args = 0
 1133 0000 80B5     		push	{r7, lr}
 1134              	.LCFI62:
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 7, -8
 1137              		.cfi_offset 14, -4
 1138 0002 84B0     		sub	sp, sp, #16
 1139              	.LCFI63:
 1140              		.cfi_def_cfa_offset 24
 1141 0004 00AF     		add	r7, sp, #0
 1142              	.LCFI64:
 1143              		.cfi_def_cfa_register 7
 1144 0006 7860     		str	r0, [r7, #4]
 1145 0008 3960     		str	r1, [r7]
 586:./freertos/src/timers.c **** TickType_t xTimeNow;
 587:./freertos/src/timers.c **** BaseType_t xTimerListsWereSwitched;
 588:./freertos/src/timers.c **** 
 589:./freertos/src/timers.c **** 	vTaskSuspendAll();
 1146              		.loc 1 589 2
 1147 000a FFF7FEFF 		bl	vTaskSuspendAll
 590:./freertos/src/timers.c **** 	{
 591:./freertos/src/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
 592:./freertos/src/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 593:./freertos/src/timers.c **** 		then don't process this timer as any timers that remained in the list
 594:./freertos/src/timers.c **** 		when the lists were switched will have been processed within the
 595:./freertos/src/timers.c **** 		prvSampleTimeNow() function. */
 596:./freertos/src/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 1148              		.loc 1 596 14
 1149 000e 07F10803 		add	r3, r7, #8
 1150 0012 1846     		mov	r0, r3
 1151 0014 FFF7FEFF 		bl	prvSampleTimeNow
 1152 0018 F860     		str	r0, [r7, #12]
 597:./freertos/src/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 1153              		.loc 1 597 31
 1154 001a BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 35


 1155              		.loc 1 597 5
 1156 001c 002B     		cmp	r3, #0
 1157 001e 30D1     		bne	.L63
 598:./freertos/src/timers.c **** 		{
 599:./freertos/src/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 600:./freertos/src/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 1158              		.loc 1 600 6
 1159 0020 3B68     		ldr	r3, [r7]
 1160 0022 002B     		cmp	r3, #0
 1161 0024 0AD1     		bne	.L64
 1162              		.loc 1 600 37 discriminator 1
 1163 0026 7A68     		ldr	r2, [r7, #4]
 1164 0028 FB68     		ldr	r3, [r7, #12]
 1165 002a 9A42     		cmp	r2, r3
 1166 002c 06D8     		bhi	.L64
 601:./freertos/src/timers.c **** 			{
 602:./freertos/src/timers.c **** 				( void ) xTaskResumeAll();
 1167              		.loc 1 602 14
 1168 002e FFF7FEFF 		bl	xTaskResumeAll
 603:./freertos/src/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1169              		.loc 1 603 5
 1170 0032 F968     		ldr	r1, [r7, #12]
 1171 0034 7868     		ldr	r0, [r7, #4]
 1172 0036 FFF7FEFF 		bl	prvProcessExpiredTimer
 604:./freertos/src/timers.c **** 			}
 605:./freertos/src/timers.c **** 			else
 606:./freertos/src/timers.c **** 			{
 607:./freertos/src/timers.c **** 				/* The tick count has not overflowed, and the next expire
 608:./freertos/src/timers.c **** 				time has not been reached yet.  This task should therefore
 609:./freertos/src/timers.c **** 				block to wait for the next expire time or a command to be
 610:./freertos/src/timers.c **** 				received - whichever comes first.  The following line cannot
 611:./freertos/src/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 612:./freertos/src/timers.c **** 				case when the current timer list is empty. */
 613:./freertos/src/timers.c **** 				if( xListWasEmpty != pdFALSE )
 614:./freertos/src/timers.c **** 				{
 615:./freertos/src/timers.c **** 					/* The current timer list is empty - is the overflow list
 616:./freertos/src/timers.c **** 					also empty? */
 617:./freertos/src/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 618:./freertos/src/timers.c **** 				}
 619:./freertos/src/timers.c **** 
 620:./freertos/src/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 621:./freertos/src/timers.c **** 
 622:./freertos/src/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 623:./freertos/src/timers.c **** 				{
 624:./freertos/src/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 625:./freertos/src/timers.c **** 					block time to expire.  If a command arrived between the
 626:./freertos/src/timers.c **** 					critical section being exited and this yield then the yield
 627:./freertos/src/timers.c **** 					will not cause the task to block. */
 628:./freertos/src/timers.c **** 					portYIELD_WITHIN_API();
 629:./freertos/src/timers.c **** 				}
 630:./freertos/src/timers.c **** 				else
 631:./freertos/src/timers.c **** 				{
 632:./freertos/src/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 633:./freertos/src/timers.c **** 				}
 634:./freertos/src/timers.c **** 			}
 635:./freertos/src/timers.c **** 		}
 636:./freertos/src/timers.c **** 		else
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 36


 637:./freertos/src/timers.c **** 		{
 638:./freertos/src/timers.c **** 			( void ) xTaskResumeAll();
 639:./freertos/src/timers.c **** 		}
 640:./freertos/src/timers.c **** 	}
 641:./freertos/src/timers.c **** }
 1173              		.loc 1 641 1
 1174 003a 24E0     		b	.L70
 1175              	.L64:
 613:./freertos/src/timers.c **** 				{
 1176              		.loc 1 613 7
 1177 003c 3B68     		ldr	r3, [r7]
 1178 003e 002B     		cmp	r3, #0
 1179 0040 08D0     		beq	.L66
 617:./freertos/src/timers.c **** 				}
 1180              		.loc 1 617 22
 1181 0042 134B     		ldr	r3, .L71
 1182 0044 1B68     		ldr	r3, [r3]
 1183 0046 1B68     		ldr	r3, [r3]
 1184 0048 002B     		cmp	r3, #0
 1185 004a 01D1     		bne	.L67
 617:./freertos/src/timers.c **** 				}
 1186              		.loc 1 617 22 is_stmt 0 discriminator 1
 1187 004c 0123     		movs	r3, #1
 1188 004e 00E0     		b	.L68
 1189              	.L67:
 617:./freertos/src/timers.c **** 				}
 1190              		.loc 1 617 22 discriminator 2
 1191 0050 0023     		movs	r3, #0
 1192              	.L68:
 617:./freertos/src/timers.c **** 				}
 1193              		.loc 1 617 20 is_stmt 1 discriminator 4
 1194 0052 3B60     		str	r3, [r7]
 1195              	.L66:
 620:./freertos/src/timers.c **** 
 1196              		.loc 1 620 5
 1197 0054 0F4B     		ldr	r3, .L71+4
 1198 0056 1868     		ldr	r0, [r3]
 1199 0058 7A68     		ldr	r2, [r7, #4]
 1200 005a FB68     		ldr	r3, [r7, #12]
 1201 005c D31A     		subs	r3, r2, r3
 1202 005e 3A68     		ldr	r2, [r7]
 1203 0060 1946     		mov	r1, r3
 1204 0062 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 622:./freertos/src/timers.c **** 				{
 1205              		.loc 1 622 9
 1206 0066 FFF7FEFF 		bl	xTaskResumeAll
 1207 006a 0346     		mov	r3, r0
 622:./freertos/src/timers.c **** 				{
 1208              		.loc 1 622 7 discriminator 1
 1209 006c 002B     		cmp	r3, #0
 1210 006e 0AD1     		bne	.L70
 628:./freertos/src/timers.c **** 				}
 1211              		.loc 1 628 6
 1212 0070 094B     		ldr	r3, .L71+8
 1213 0072 4FF08052 		mov	r2, #268435456
 1214 0076 1A60     		str	r2, [r3]
 1215              		.syntax unified
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 37


 1216              	@ 628 "./freertos/src/timers.c" 1
 1217 0078 BFF34F8F 		dsb
 1218              	@ 0 "" 2
 1219              	@ 628 "./freertos/src/timers.c" 1
 1220 007c BFF36F8F 		isb
 1221              	@ 0 "" 2
 1222              		.loc 1 641 1
 1223              		.thumb
 1224              		.syntax unified
 1225 0080 01E0     		b	.L70
 1226              	.L63:
 638:./freertos/src/timers.c **** 		}
 1227              		.loc 1 638 13
 1228 0082 FFF7FEFF 		bl	xTaskResumeAll
 1229              	.L70:
 1230              		.loc 1 641 1
 1231 0086 00BF     		nop
 1232 0088 1037     		adds	r7, r7, #16
 1233              	.LCFI65:
 1234              		.cfi_def_cfa_offset 8
 1235 008a BD46     		mov	sp, r7
 1236              	.LCFI66:
 1237              		.cfi_def_cfa_register 13
 1238              		@ sp needed
 1239 008c 80BD     		pop	{r7, pc}
 1240              	.L72:
 1241 008e 00BF     		.align	2
 1242              	.L71:
 1243 0090 00000000 		.word	pxOverflowTimerList
 1244 0094 00000000 		.word	xTimerQueue
 1245 0098 04ED00E0 		.word	-536810236
 1246              		.cfi_endproc
 1247              	.LFE73:
 1249              		.section	.text.prvGetNextExpireTime,"ax",%progbits
 1250              		.align	1
 1251              		.syntax unified
 1252              		.thumb
 1253              		.thumb_func
 1255              	prvGetNextExpireTime:
 1256              	.LFB74:
 642:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 643:./freertos/src/timers.c **** 
 644:./freertos/src/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 645:./freertos/src/timers.c **** {
 1257              		.loc 1 645 1
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 16
 1260              		@ frame_needed = 1, uses_anonymous_args = 0
 1261              		@ link register save eliminated.
 1262 0000 80B4     		push	{r7}
 1263              	.LCFI67:
 1264              		.cfi_def_cfa_offset 4
 1265              		.cfi_offset 7, -4
 1266 0002 85B0     		sub	sp, sp, #20
 1267              	.LCFI68:
 1268              		.cfi_def_cfa_offset 24
 1269 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 38


 1270              	.LCFI69:
 1271              		.cfi_def_cfa_register 7
 1272 0006 7860     		str	r0, [r7, #4]
 646:./freertos/src/timers.c **** TickType_t xNextExpireTime;
 647:./freertos/src/timers.c **** 
 648:./freertos/src/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 649:./freertos/src/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 650:./freertos/src/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 651:./freertos/src/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 652:./freertos/src/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 653:./freertos/src/timers.c **** 	timer lists will be switched and the next expiry time can be
 654:./freertos/src/timers.c **** 	re-assessed.  */
 655:./freertos/src/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 1273              		.loc 1 655 20
 1274 0008 0D4B     		ldr	r3, .L79
 1275 000a 1B68     		ldr	r3, [r3]
 1276 000c 1B68     		ldr	r3, [r3]
 1277 000e 002B     		cmp	r3, #0
 1278 0010 01D1     		bne	.L74
 1279              		.loc 1 655 20 is_stmt 0 discriminator 1
 1280 0012 0122     		movs	r2, #1
 1281 0014 00E0     		b	.L75
 1282              	.L74:
 1283              		.loc 1 655 20 discriminator 2
 1284 0016 0022     		movs	r2, #0
 1285              	.L75:
 1286              		.loc 1 655 18 is_stmt 1 discriminator 4
 1287 0018 7B68     		ldr	r3, [r7, #4]
 1288 001a 1A60     		str	r2, [r3]
 656:./freertos/src/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 1289              		.loc 1 656 6
 1290 001c 7B68     		ldr	r3, [r7, #4]
 1291 001e 1B68     		ldr	r3, [r3]
 1292              		.loc 1 656 4
 1293 0020 002B     		cmp	r3, #0
 1294 0022 05D1     		bne	.L76
 657:./freertos/src/timers.c **** 	{
 658:./freertos/src/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 1295              		.loc 1 658 21
 1296 0024 064B     		ldr	r3, .L79
 1297 0026 1B68     		ldr	r3, [r3]
 1298 0028 DB68     		ldr	r3, [r3, #12]
 1299              		.loc 1 658 19
 1300 002a 1B68     		ldr	r3, [r3]
 1301 002c FB60     		str	r3, [r7, #12]
 1302 002e 01E0     		b	.L77
 1303              	.L76:
 659:./freertos/src/timers.c **** 	}
 660:./freertos/src/timers.c **** 	else
 661:./freertos/src/timers.c **** 	{
 662:./freertos/src/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 663:./freertos/src/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
 1304              		.loc 1 663 19
 1305 0030 0023     		movs	r3, #0
 1306 0032 FB60     		str	r3, [r7, #12]
 1307              	.L77:
 664:./freertos/src/timers.c **** 	}
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 39


 665:./freertos/src/timers.c **** 
 666:./freertos/src/timers.c **** 	return xNextExpireTime;
 1308              		.loc 1 666 9
 1309 0034 FB68     		ldr	r3, [r7, #12]
 667:./freertos/src/timers.c **** }
 1310              		.loc 1 667 1
 1311 0036 1846     		mov	r0, r3
 1312 0038 1437     		adds	r7, r7, #20
 1313              	.LCFI70:
 1314              		.cfi_def_cfa_offset 4
 1315 003a BD46     		mov	sp, r7
 1316              	.LCFI71:
 1317              		.cfi_def_cfa_register 13
 1318              		@ sp needed
 1319 003c 80BC     		pop	{r7}
 1320              	.LCFI72:
 1321              		.cfi_restore 7
 1322              		.cfi_def_cfa_offset 0
 1323 003e 7047     		bx	lr
 1324              	.L80:
 1325              		.align	2
 1326              	.L79:
 1327 0040 00000000 		.word	pxCurrentTimerList
 1328              		.cfi_endproc
 1329              	.LFE74:
 1331              		.section	.text.prvSampleTimeNow,"ax",%progbits
 1332              		.align	1
 1333              		.syntax unified
 1334              		.thumb
 1335              		.thumb_func
 1337              	prvSampleTimeNow:
 1338              	.LFB75:
 668:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 669:./freertos/src/timers.c **** 
 670:./freertos/src/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 671:./freertos/src/timers.c **** {
 1339              		.loc 1 671 1
 1340              		.cfi_startproc
 1341              		@ args = 0, pretend = 0, frame = 16
 1342              		@ frame_needed = 1, uses_anonymous_args = 0
 1343 0000 80B5     		push	{r7, lr}
 1344              	.LCFI73:
 1345              		.cfi_def_cfa_offset 8
 1346              		.cfi_offset 7, -8
 1347              		.cfi_offset 14, -4
 1348 0002 84B0     		sub	sp, sp, #16
 1349              	.LCFI74:
 1350              		.cfi_def_cfa_offset 24
 1351 0004 00AF     		add	r7, sp, #0
 1352              	.LCFI75:
 1353              		.cfi_def_cfa_register 7
 1354 0006 7860     		str	r0, [r7, #4]
 672:./freertos/src/timers.c **** TickType_t xTimeNow;
 673:./freertos/src/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 674:./freertos/src/timers.c **** 
 675:./freertos/src/timers.c **** 	xTimeNow = xTaskGetTickCount();
 1355              		.loc 1 675 13
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 40


 1356 0008 FFF7FEFF 		bl	xTaskGetTickCount
 1357 000c F860     		str	r0, [r7, #12]
 676:./freertos/src/timers.c **** 
 677:./freertos/src/timers.c **** 	if( xTimeNow < xLastTime )
 1358              		.loc 1 677 15
 1359 000e 0B4B     		ldr	r3, .L85
 1360 0010 1B68     		ldr	r3, [r3]
 1361              		.loc 1 677 4
 1362 0012 FA68     		ldr	r2, [r7, #12]
 1363 0014 9A42     		cmp	r2, r3
 1364 0016 05D2     		bcs	.L82
 678:./freertos/src/timers.c **** 	{
 679:./freertos/src/timers.c **** 		prvSwitchTimerLists();
 1365              		.loc 1 679 3
 1366 0018 FFF7FEFF 		bl	prvSwitchTimerLists
 680:./freertos/src/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 1367              		.loc 1 680 29
 1368 001c 7B68     		ldr	r3, [r7, #4]
 1369 001e 0122     		movs	r2, #1
 1370 0020 1A60     		str	r2, [r3]
 1371 0022 02E0     		b	.L83
 1372              	.L82:
 681:./freertos/src/timers.c **** 	}
 682:./freertos/src/timers.c **** 	else
 683:./freertos/src/timers.c **** 	{
 684:./freertos/src/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 1373              		.loc 1 684 29
 1374 0024 7B68     		ldr	r3, [r7, #4]
 1375 0026 0022     		movs	r2, #0
 1376 0028 1A60     		str	r2, [r3]
 1377              	.L83:
 685:./freertos/src/timers.c **** 	}
 686:./freertos/src/timers.c **** 
 687:./freertos/src/timers.c **** 	xLastTime = xTimeNow;
 1378              		.loc 1 687 12
 1379 002a 044A     		ldr	r2, .L85
 1380 002c FB68     		ldr	r3, [r7, #12]
 1381 002e 1360     		str	r3, [r2]
 688:./freertos/src/timers.c **** 
 689:./freertos/src/timers.c **** 	return xTimeNow;
 1382              		.loc 1 689 9
 1383 0030 FB68     		ldr	r3, [r7, #12]
 690:./freertos/src/timers.c **** }
 1384              		.loc 1 690 1
 1385 0032 1846     		mov	r0, r3
 1386 0034 1037     		adds	r7, r7, #16
 1387              	.LCFI76:
 1388              		.cfi_def_cfa_offset 8
 1389 0036 BD46     		mov	sp, r7
 1390              	.LCFI77:
 1391              		.cfi_def_cfa_register 13
 1392              		@ sp needed
 1393 0038 80BD     		pop	{r7, pc}
 1394              	.L86:
 1395 003a 00BF     		.align	2
 1396              	.L85:
 1397 003c 00000000 		.word	xLastTime.0
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 41


 1398              		.cfi_endproc
 1399              	.LFE75:
 1401              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
 1402              		.align	1
 1403              		.syntax unified
 1404              		.thumb
 1405              		.thumb_func
 1407              	prvInsertTimerInActiveList:
 1408              	.LFB76:
 691:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 692:./freertos/src/timers.c **** 
 693:./freertos/src/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 694:./freertos/src/timers.c **** {
 1409              		.loc 1 694 1
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 24
 1412              		@ frame_needed = 1, uses_anonymous_args = 0
 1413 0000 80B5     		push	{r7, lr}
 1414              	.LCFI78:
 1415              		.cfi_def_cfa_offset 8
 1416              		.cfi_offset 7, -8
 1417              		.cfi_offset 14, -4
 1418 0002 86B0     		sub	sp, sp, #24
 1419              	.LCFI79:
 1420              		.cfi_def_cfa_offset 32
 1421 0004 00AF     		add	r7, sp, #0
 1422              	.LCFI80:
 1423              		.cfi_def_cfa_register 7
 1424 0006 F860     		str	r0, [r7, #12]
 1425 0008 B960     		str	r1, [r7, #8]
 1426 000a 7A60     		str	r2, [r7, #4]
 1427 000c 3B60     		str	r3, [r7]
 695:./freertos/src/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 1428              		.loc 1 695 12
 1429 000e 0023     		movs	r3, #0
 1430 0010 7B61     		str	r3, [r7, #20]
 696:./freertos/src/timers.c **** 
 697:./freertos/src/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 1431              		.loc 1 697 2
 1432 0012 FB68     		ldr	r3, [r7, #12]
 1433 0014 BA68     		ldr	r2, [r7, #8]
 1434 0016 5A60     		str	r2, [r3, #4]
 698:./freertos/src/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 1435              		.loc 1 698 2
 1436 0018 FB68     		ldr	r3, [r7, #12]
 1437 001a FA68     		ldr	r2, [r7, #12]
 1438 001c 1A61     		str	r2, [r3, #16]
 699:./freertos/src/timers.c **** 
 700:./freertos/src/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
 1439              		.loc 1 700 4
 1440 001e BA68     		ldr	r2, [r7, #8]
 1441 0020 7B68     		ldr	r3, [r7, #4]
 1442 0022 9A42     		cmp	r2, r3
 1443 0024 12D8     		bhi	.L88
 701:./freertos/src/timers.c **** 	{
 702:./freertos/src/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 703:./freertos/src/timers.c **** 		timer was issued, and the time the command was processed? */
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 42


 704:./freertos/src/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
 1444              		.loc 1 704 35
 1445 0026 7A68     		ldr	r2, [r7, #4]
 1446 0028 3B68     		ldr	r3, [r7]
 1447 002a D21A     		subs	r2, r2, r3
 1448              		.loc 1 704 64
 1449 002c FB68     		ldr	r3, [r7, #12]
 1450 002e 9B69     		ldr	r3, [r3, #24]
 1451              		.loc 1 704 5
 1452 0030 9A42     		cmp	r2, r3
 1453 0032 02D3     		bcc	.L89
 705:./freertos/src/timers.c **** 		{
 706:./freertos/src/timers.c **** 			/* The time between a command being issued and the command being
 707:./freertos/src/timers.c **** 			processed actually exceeds the timers period.  */
 708:./freertos/src/timers.c **** 			xProcessTimerNow = pdTRUE;
 1454              		.loc 1 708 21
 1455 0034 0123     		movs	r3, #1
 1456 0036 7B61     		str	r3, [r7, #20]
 1457 0038 1BE0     		b	.L90
 1458              	.L89:
 709:./freertos/src/timers.c **** 		}
 710:./freertos/src/timers.c **** 		else
 711:./freertos/src/timers.c **** 		{
 712:./freertos/src/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 1459              		.loc 1 712 4
 1460 003a 104B     		ldr	r3, .L93
 1461 003c 1A68     		ldr	r2, [r3]
 1462 003e FB68     		ldr	r3, [r7, #12]
 1463 0040 0433     		adds	r3, r3, #4
 1464 0042 1946     		mov	r1, r3
 1465 0044 1046     		mov	r0, r2
 1466 0046 FFF7FEFF 		bl	vListInsert
 1467 004a 12E0     		b	.L90
 1468              	.L88:
 713:./freertos/src/timers.c **** 		}
 714:./freertos/src/timers.c **** 	}
 715:./freertos/src/timers.c **** 	else
 716:./freertos/src/timers.c **** 	{
 717:./freertos/src/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 1469              		.loc 1 717 5
 1470 004c 7A68     		ldr	r2, [r7, #4]
 1471 004e 3B68     		ldr	r3, [r7]
 1472 0050 9A42     		cmp	r2, r3
 1473 0052 06D2     		bcs	.L91
 1474              		.loc 1 717 35 discriminator 1
 1475 0054 BA68     		ldr	r2, [r7, #8]
 1476 0056 3B68     		ldr	r3, [r7]
 1477 0058 9A42     		cmp	r2, r3
 1478 005a 02D3     		bcc	.L91
 718:./freertos/src/timers.c **** 		{
 719:./freertos/src/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 720:./freertos/src/timers.c **** 			but the expiry time has not, then the timer must have already passed
 721:./freertos/src/timers.c **** 			its expiry time and should be processed immediately. */
 722:./freertos/src/timers.c **** 			xProcessTimerNow = pdTRUE;
 1479              		.loc 1 722 21
 1480 005c 0123     		movs	r3, #1
 1481 005e 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 43


 1482 0060 07E0     		b	.L90
 1483              	.L91:
 723:./freertos/src/timers.c **** 		}
 724:./freertos/src/timers.c **** 		else
 725:./freertos/src/timers.c **** 		{
 726:./freertos/src/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 1484              		.loc 1 726 4
 1485 0062 074B     		ldr	r3, .L93+4
 1486 0064 1A68     		ldr	r2, [r3]
 1487 0066 FB68     		ldr	r3, [r7, #12]
 1488 0068 0433     		adds	r3, r3, #4
 1489 006a 1946     		mov	r1, r3
 1490 006c 1046     		mov	r0, r2
 1491 006e FFF7FEFF 		bl	vListInsert
 1492              	.L90:
 727:./freertos/src/timers.c **** 		}
 728:./freertos/src/timers.c **** 	}
 729:./freertos/src/timers.c **** 
 730:./freertos/src/timers.c **** 	return xProcessTimerNow;
 1493              		.loc 1 730 9
 1494 0072 7B69     		ldr	r3, [r7, #20]
 731:./freertos/src/timers.c **** }
 1495              		.loc 1 731 1
 1496 0074 1846     		mov	r0, r3
 1497 0076 1837     		adds	r7, r7, #24
 1498              	.LCFI81:
 1499              		.cfi_def_cfa_offset 8
 1500 0078 BD46     		mov	sp, r7
 1501              	.LCFI82:
 1502              		.cfi_def_cfa_register 13
 1503              		@ sp needed
 1504 007a 80BD     		pop	{r7, pc}
 1505              	.L94:
 1506              		.align	2
 1507              	.L93:
 1508 007c 00000000 		.word	pxOverflowTimerList
 1509 0080 00000000 		.word	pxCurrentTimerList
 1510              		.cfi_endproc
 1511              	.LFE76:
 1513              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 1514              		.align	1
 1515              		.syntax unified
 1516              		.thumb
 1517              		.thumb_func
 1519              	prvProcessReceivedCommands:
 1520              	.LFB77:
 732:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 733:./freertos/src/timers.c **** 
 734:./freertos/src/timers.c **** static void	prvProcessReceivedCommands( void )
 735:./freertos/src/timers.c **** {
 1521              		.loc 1 735 1
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 40
 1524              		@ frame_needed = 1, uses_anonymous_args = 0
 1525 0000 80B5     		push	{r7, lr}
 1526              	.LCFI83:
 1527              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 44


 1528              		.cfi_offset 7, -8
 1529              		.cfi_offset 14, -4
 1530 0002 8CB0     		sub	sp, sp, #48
 1531              	.LCFI84:
 1532              		.cfi_def_cfa_offset 56
 1533 0004 02AF     		add	r7, sp, #8
 1534              	.LCFI85:
 1535              		.cfi_def_cfa 7, 48
 736:./freertos/src/timers.c **** DaemonTaskMessage_t xMessage;
 737:./freertos/src/timers.c **** Timer_t *pxTimer;
 738:./freertos/src/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 739:./freertos/src/timers.c **** TickType_t xTimeNow;
 740:./freertos/src/timers.c **** 
 741:./freertos/src/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 1536              		.loc 1 741 7
 1537 0006 B2E0     		b	.L97
 1538              	.L112:
 742:./freertos/src/timers.c **** 	{
 743:./freertos/src/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 744:./freertos/src/timers.c **** 		{
 745:./freertos/src/timers.c **** 			/* Negative commands are pended function calls rather than timer
 746:./freertos/src/timers.c **** 			commands. */
 747:./freertos/src/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 748:./freertos/src/timers.c **** 			{
 749:./freertos/src/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 750:./freertos/src/timers.c **** 
 751:./freertos/src/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 752:./freertos/src/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 753:./freertos/src/timers.c **** 				configASSERT( pxCallback );
 754:./freertos/src/timers.c **** 
 755:./freertos/src/timers.c **** 				/* Call the function. */
 756:./freertos/src/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 757:./freertos/src/timers.c **** 			}
 758:./freertos/src/timers.c **** 			else
 759:./freertos/src/timers.c **** 			{
 760:./freertos/src/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 761:./freertos/src/timers.c **** 			}
 762:./freertos/src/timers.c **** 		}
 763:./freertos/src/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 764:./freertos/src/timers.c **** 
 765:./freertos/src/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 766:./freertos/src/timers.c **** 		function calls. */
 767:./freertos/src/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 1539              		.loc 1 767 15
 1540 0008 BB68     		ldr	r3, [r7, #8]
 1541              		.loc 1 767 5
 1542 000a 002B     		cmp	r3, #0
 1543 000c C0F2AF80 		blt	.L97
 768:./freertos/src/timers.c **** 		{
 769:./freertos/src/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 770:./freertos/src/timers.c **** 			software timer. */
 771:./freertos/src/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 1544              		.loc 1 771 12
 1545 0010 3B69     		ldr	r3, [r7, #16]
 1546 0012 7B62     		str	r3, [r7, #36]
 772:./freertos/src/timers.c **** 
 773:./freertos/src/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 45


 1547              		.loc 1 773 8
 1548 0014 7B6A     		ldr	r3, [r7, #36]
 1549 0016 5B69     		ldr	r3, [r3, #20]
 1550              		.loc 1 773 6
 1551 0018 002B     		cmp	r3, #0
 1552 001a 04D0     		beq	.L98
 774:./freertos/src/timers.c **** 			{
 775:./freertos/src/timers.c **** 				/* The timer is in a list, remove it. */
 776:./freertos/src/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 1553              		.loc 1 776 14
 1554 001c 7B6A     		ldr	r3, [r7, #36]
 1555 001e 0433     		adds	r3, r3, #4
 1556 0020 1846     		mov	r0, r3
 1557 0022 FFF7FEFF 		bl	uxListRemove
 1558              	.L98:
 777:./freertos/src/timers.c **** 			}
 778:./freertos/src/timers.c **** 			else
 779:./freertos/src/timers.c **** 			{
 780:./freertos/src/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 781:./freertos/src/timers.c **** 			}
 782:./freertos/src/timers.c **** 
 783:./freertos/src/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 784:./freertos/src/timers.c **** 
 785:./freertos/src/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 786:./freertos/src/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 787:./freertos/src/timers.c **** 			called after the message is received from xTimerQueue so there is no
 788:./freertos/src/timers.c **** 			possibility of a higher priority task adding a message to the message
 789:./freertos/src/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 790:./freertos/src/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 791:./freertos/src/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 1559              		.loc 1 791 15
 1560 0026 3B1D     		adds	r3, r7, #4
 1561 0028 1846     		mov	r0, r3
 1562 002a FFF7FEFF 		bl	prvSampleTimeNow
 1563 002e 3862     		str	r0, [r7, #32]
 792:./freertos/src/timers.c **** 
 793:./freertos/src/timers.c **** 			switch( xMessage.xMessageID )
 1564              		.loc 1 793 20
 1565 0030 BB68     		ldr	r3, [r7, #8]
 1566              		.loc 1 793 4
 1567 0032 092B     		cmp	r3, #9
 1568 0034 00F29880 		bhi	.L113
 1569 0038 01A2     		adr	r2, .L101
 1570 003a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1571 003e 00BF     		.p2align 2
 1572              	.L101:
 1573 0040 69000000 		.word	.L103+1
 1574 0044 69000000 		.word	.L103+1
 1575 0048 69000000 		.word	.L103+1
 1576 004c DF000000 		.word	.L102+1
 1577 0050 F3000000 		.word	.L100+1
 1578 0054 3F010000 		.word	.L104+1
 1579 0058 69000000 		.word	.L103+1
 1580 005c 69000000 		.word	.L103+1
 1581 0060 DF000000 		.word	.L102+1
 1582 0064 F3000000 		.word	.L100+1
 1583              		.p2align 1
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 46


 1584              	.L103:
 794:./freertos/src/timers.c **** 			{
 795:./freertos/src/timers.c **** 				case tmrCOMMAND_START :
 796:./freertos/src/timers.c **** 				case tmrCOMMAND_START_FROM_ISR :
 797:./freertos/src/timers.c **** 				case tmrCOMMAND_RESET :
 798:./freertos/src/timers.c **** 				case tmrCOMMAND_RESET_FROM_ISR :
 799:./freertos/src/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 800:./freertos/src/timers.c **** 					/* Start or restart a timer. */
 801:./freertos/src/timers.c **** 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 1585              		.loc 1 801 13
 1586 0068 7B6A     		ldr	r3, [r7, #36]
 1587 006a 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1588              		.loc 1 801 24
 1589 006e 43F00103 		orr	r3, r3, #1
 1590 0072 DAB2     		uxtb	r2, r3
 1591 0074 7B6A     		ldr	r3, [r7, #36]
 1592 0076 83F82820 		strb	r2, [r3, #40]
 802:./freertos/src/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 1593              		.loc 1 802 75
 1594 007a FA68     		ldr	r2, [r7, #12]
 1595              		.loc 1 802 99
 1596 007c 7B6A     		ldr	r3, [r7, #36]
 1597 007e 9B69     		ldr	r3, [r3, #24]
 1598              		.loc 1 802 10
 1599 0080 D118     		adds	r1, r2, r3
 1600 0082 FB68     		ldr	r3, [r7, #12]
 1601 0084 3A6A     		ldr	r2, [r7, #32]
 1602 0086 786A     		ldr	r0, [r7, #36]
 1603 0088 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1604 008c 0346     		mov	r3, r0
 1605              		.loc 1 802 8 discriminator 1
 1606 008e 002B     		cmp	r3, #0
 1607 0090 6CD0     		beq	.L114
 803:./freertos/src/timers.c **** 					{
 804:./freertos/src/timers.c **** 						/* The timer expired before it was added to the active
 805:./freertos/src/timers.c **** 						timer list.  Process it now. */
 806:./freertos/src/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 1608              		.loc 1 806 14
 1609 0092 7B6A     		ldr	r3, [r7, #36]
 1610 0094 1B6A     		ldr	r3, [r3, #32]
 1611              		.loc 1 806 7
 1612 0096 786A     		ldr	r0, [r7, #36]
 1613 0098 9847     		blx	r3
 1614              	.LVL1:
 807:./freertos/src/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 808:./freertos/src/timers.c **** 
 809:./freertos/src/timers.c **** 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 1615              		.loc 1 809 20
 1616 009a 7B6A     		ldr	r3, [r7, #36]
 1617 009c 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1618              		.loc 1 809 31
 1619 00a0 03F00403 		and	r3, r3, #4
 1620              		.loc 1 809 9
 1621 00a4 002B     		cmp	r3, #0
 1622 00a6 61D0     		beq	.L114
 810:./freertos/src/timers.c **** 						{
 811:./freertos/src/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 47


 1623              		.loc 1 811 105
 1624 00a8 FA68     		ldr	r2, [r7, #12]
 1625              		.loc 1 811 129
 1626 00aa 7B6A     		ldr	r3, [r7, #36]
 1627 00ac 9B69     		ldr	r3, [r3, #24]
 1628              		.loc 1 811 18
 1629 00ae 1A44     		add	r2, r2, r3
 1630 00b0 0023     		movs	r3, #0
 1631 00b2 0093     		str	r3, [sp]
 1632 00b4 0023     		movs	r3, #0
 1633 00b6 0021     		movs	r1, #0
 1634 00b8 786A     		ldr	r0, [r7, #36]
 1635 00ba FFF7FEFF 		bl	xTimerGenericCommand
 1636 00be F861     		str	r0, [r7, #28]
 812:./freertos/src/timers.c **** 							configASSERT( xResult );
 1637              		.loc 1 812 8
 1638 00c0 FB69     		ldr	r3, [r7, #28]
 1639 00c2 002B     		cmp	r3, #0
 1640 00c4 52D1     		bne	.L114
 1641              	.LBB54:
 1642              	.LBB55:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1643              		.loc 2 197 2
 1644              		.syntax unified
 1645              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 1646 00c6 4FF05003 			mov r3, #80												
 1647 00ca 83F31188 		msr basepri, r3											
 1648 00ce BFF36F8F 		isb														
 1649 00d2 BFF34F8F 		dsb														
 1650              	
 1651              	@ 0 "" 2
 1652              		.thumb
 1653              		.syntax unified
 1654 00d6 BB61     		str	r3, [r7, #24]
 1655              		.loc 2 205 1
 1656 00d8 00BF     		nop
 1657              	.L106:
 1658              	.LBE55:
 1659              	.LBE54:
 1660              		.loc 1 812 8
 1661 00da 00BF     		nop
 1662 00dc FDE7     		b	.L106
 1663              	.L102:
 813:./freertos/src/timers.c **** 							( void ) xResult;
 814:./freertos/src/timers.c **** 						}
 815:./freertos/src/timers.c **** 						else
 816:./freertos/src/timers.c **** 						{
 817:./freertos/src/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 818:./freertos/src/timers.c **** 						}
 819:./freertos/src/timers.c **** 					}
 820:./freertos/src/timers.c **** 					else
 821:./freertos/src/timers.c **** 					{
 822:./freertos/src/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 823:./freertos/src/timers.c **** 					}
 824:./freertos/src/timers.c **** 					break;
 825:./freertos/src/timers.c **** 
 826:./freertos/src/timers.c **** 				case tmrCOMMAND_STOP :
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 48


 827:./freertos/src/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 828:./freertos/src/timers.c **** 					/* The timer has already been removed from the active list. */
 829:./freertos/src/timers.c **** 					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 1664              		.loc 1 829 13
 1665 00de 7B6A     		ldr	r3, [r7, #36]
 1666 00e0 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1667              		.loc 1 829 24
 1668 00e4 23F00103 		bic	r3, r3, #1
 1669 00e8 DAB2     		uxtb	r2, r3
 1670 00ea 7B6A     		ldr	r3, [r7, #36]
 1671 00ec 83F82820 		strb	r2, [r3, #40]
 830:./freertos/src/timers.c **** 					break;
 1672              		.loc 1 830 6
 1673 00f0 3DE0     		b	.L97
 1674              	.L100:
 831:./freertos/src/timers.c **** 
 832:./freertos/src/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 833:./freertos/src/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 834:./freertos/src/timers.c **** 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 1675              		.loc 1 834 13
 1676 00f2 7B6A     		ldr	r3, [r7, #36]
 1677 00f4 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1678              		.loc 1 834 24
 1679 00f8 43F00103 		orr	r3, r3, #1
 1680 00fc DAB2     		uxtb	r2, r3
 1681 00fe 7B6A     		ldr	r3, [r7, #36]
 1682 0100 83F82820 		strb	r2, [r3, #40]
 835:./freertos/src/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 1683              		.loc 1 835 64
 1684 0104 FA68     		ldr	r2, [r7, #12]
 1685              		.loc 1 835 35
 1686 0106 7B6A     		ldr	r3, [r7, #36]
 1687 0108 9A61     		str	r2, [r3, #24]
 836:./freertos/src/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1688              		.loc 1 836 6
 1689 010a 7B6A     		ldr	r3, [r7, #36]
 1690 010c 9B69     		ldr	r3, [r3, #24]
 1691 010e 002B     		cmp	r3, #0
 1692 0110 0BD1     		bne	.L108
 1693              	.LBB56:
 1694              	.LBB57:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1695              		.loc 2 197 2
 1696              		.syntax unified
 1697              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 1698 0112 4FF05003 			mov r3, #80												
 1699 0116 83F31188 		msr basepri, r3											
 1700 011a BFF36F8F 		isb														
 1701 011e BFF34F8F 		dsb														
 1702              	
 1703              	@ 0 "" 2
 1704              		.thumb
 1705              		.syntax unified
 1706 0122 7B61     		str	r3, [r7, #20]
 1707              		.loc 2 205 1
 1708 0124 00BF     		nop
 1709              	.L109:
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 49


 1710              	.LBE57:
 1711              	.LBE56:
 1712              		.loc 1 836 6
 1713 0126 00BF     		nop
 1714 0128 FDE7     		b	.L109
 1715              	.L108:
 837:./freertos/src/timers.c **** 
 838:./freertos/src/timers.c **** 					/* The new period does not really have a reference, and can
 839:./freertos/src/timers.c **** 					be longer or shorter than the old one.  The command time is
 840:./freertos/src/timers.c **** 					therefore set to the current time, and as the period cannot
 841:./freertos/src/timers.c **** 					be zero the next expiry time can only be in the future,
 842:./freertos/src/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 843:./freertos/src/timers.c **** 					no fail case that needs to be handled here. */
 844:./freertos/src/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 1716              		.loc 1 844 72
 1717 012a 7B6A     		ldr	r3, [r7, #36]
 1718 012c 9A69     		ldr	r2, [r3, #24]
 1719              		.loc 1 844 15
 1720 012e 3B6A     		ldr	r3, [r7, #32]
 1721 0130 D118     		adds	r1, r2, r3
 1722 0132 3B6A     		ldr	r3, [r7, #32]
 1723 0134 3A6A     		ldr	r2, [r7, #32]
 1724 0136 786A     		ldr	r0, [r7, #36]
 1725 0138 FFF7FEFF 		bl	prvInsertTimerInActiveList
 845:./freertos/src/timers.c **** 					break;
 1726              		.loc 1 845 6
 1727 013c 17E0     		b	.L97
 1728              	.L104:
 846:./freertos/src/timers.c **** 
 847:./freertos/src/timers.c **** 				case tmrCOMMAND_DELETE :
 848:./freertos/src/timers.c **** 					#if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 849:./freertos/src/timers.c **** 					{
 850:./freertos/src/timers.c **** 						/* The timer has already been removed from the active list,
 851:./freertos/src/timers.c **** 						just free up the memory if the memory was dynamically
 852:./freertos/src/timers.c **** 						allocated. */
 853:./freertos/src/timers.c **** 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 1729              		.loc 1 853 20
 1730 013e 7B6A     		ldr	r3, [r7, #36]
 1731 0140 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1732              		.loc 1 853 31
 1733 0144 03F00203 		and	r3, r3, #2
 1734              		.loc 1 853 9
 1735 0148 002B     		cmp	r3, #0
 1736 014a 03D1     		bne	.L110
 854:./freertos/src/timers.c **** 						{
 855:./freertos/src/timers.c **** 							vPortFree( pxTimer );
 1737              		.loc 1 855 8
 1738 014c 786A     		ldr	r0, [r7, #36]
 1739 014e FFF7FEFF 		bl	vPortFree
 856:./freertos/src/timers.c **** 						}
 857:./freertos/src/timers.c **** 						else
 858:./freertos/src/timers.c **** 						{
 859:./freertos/src/timers.c **** 							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 860:./freertos/src/timers.c **** 						}
 861:./freertos/src/timers.c **** 					}
 862:./freertos/src/timers.c **** 					#else
 863:./freertos/src/timers.c **** 					{
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 50


 864:./freertos/src/timers.c **** 						/* If dynamic allocation is not enabled, the memory
 865:./freertos/src/timers.c **** 						could not have been dynamically allocated. So there is
 866:./freertos/src/timers.c **** 						no need to free the memory - just mark the timer as
 867:./freertos/src/timers.c **** 						"not active". */
 868:./freertos/src/timers.c **** 						pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 869:./freertos/src/timers.c **** 					}
 870:./freertos/src/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 871:./freertos/src/timers.c **** 					break;
 1740              		.loc 1 871 6
 1741 0152 0CE0     		b	.L97
 1742              	.L110:
 859:./freertos/src/timers.c **** 						}
 1743              		.loc 1 859 15
 1744 0154 7B6A     		ldr	r3, [r7, #36]
 1745 0156 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 859:./freertos/src/timers.c **** 						}
 1746              		.loc 1 859 26
 1747 015a 23F00103 		bic	r3, r3, #1
 1748 015e DAB2     		uxtb	r2, r3
 1749 0160 7B6A     		ldr	r3, [r7, #36]
 1750 0162 83F82820 		strb	r2, [r3, #40]
 1751              		.loc 1 871 6
 1752 0166 02E0     		b	.L97
 1753              	.L113:
 872:./freertos/src/timers.c **** 
 873:./freertos/src/timers.c **** 				default	:
 874:./freertos/src/timers.c **** 					/* Don't expect to get here. */
 875:./freertos/src/timers.c **** 					break;
 1754              		.loc 1 875 6
 1755 0168 00BF     		nop
 1756 016a 00E0     		b	.L97
 1757              	.L114:
 824:./freertos/src/timers.c **** 
 1758              		.loc 1 824 6
 1759 016c 00BF     		nop
 1760              	.L97:
 741:./freertos/src/timers.c **** 	{
 1761              		.loc 1 741 9
 1762 016e 084B     		ldr	r3, .L115
 1763 0170 1B68     		ldr	r3, [r3]
 1764 0172 07F10801 		add	r1, r7, #8
 1765 0176 0022     		movs	r2, #0
 1766 0178 1846     		mov	r0, r3
 1767 017a FFF7FEFF 		bl	xQueueReceive
 1768 017e 0346     		mov	r3, r0
 741:./freertos/src/timers.c **** 	{
 1769              		.loc 1 741 62 discriminator 1
 1770 0180 002B     		cmp	r3, #0
 1771 0182 7FF441AF 		bne	.L112
 876:./freertos/src/timers.c **** 			}
 877:./freertos/src/timers.c **** 		}
 878:./freertos/src/timers.c **** 	}
 879:./freertos/src/timers.c **** }
 1772              		.loc 1 879 1
 1773 0186 00BF     		nop
 1774 0188 00BF     		nop
 1775 018a 2837     		adds	r7, r7, #40
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 51


 1776              	.LCFI86:
 1777              		.cfi_def_cfa_offset 8
 1778 018c BD46     		mov	sp, r7
 1779              	.LCFI87:
 1780              		.cfi_def_cfa_register 13
 1781              		@ sp needed
 1782 018e 80BD     		pop	{r7, pc}
 1783              	.L116:
 1784              		.align	2
 1785              	.L115:
 1786 0190 00000000 		.word	xTimerQueue
 1787              		.cfi_endproc
 1788              	.LFE77:
 1790              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 1791              		.align	1
 1792              		.syntax unified
 1793              		.thumb
 1794              		.thumb_func
 1796              	prvSwitchTimerLists:
 1797              	.LFB78:
 880:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 881:./freertos/src/timers.c **** 
 882:./freertos/src/timers.c **** static void prvSwitchTimerLists( void )
 883:./freertos/src/timers.c **** {
 1798              		.loc 1 883 1
 1799              		.cfi_startproc
 1800              		@ args = 0, pretend = 0, frame = 24
 1801              		@ frame_needed = 1, uses_anonymous_args = 0
 1802 0000 80B5     		push	{r7, lr}
 1803              	.LCFI88:
 1804              		.cfi_def_cfa_offset 8
 1805              		.cfi_offset 7, -8
 1806              		.cfi_offset 14, -4
 1807 0002 88B0     		sub	sp, sp, #32
 1808              	.LCFI89:
 1809              		.cfi_def_cfa_offset 40
 1810 0004 02AF     		add	r7, sp, #8
 1811              	.LCFI90:
 1812              		.cfi_def_cfa 7, 32
 884:./freertos/src/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 885:./freertos/src/timers.c **** List_t *pxTemp;
 886:./freertos/src/timers.c **** Timer_t *pxTimer;
 887:./freertos/src/timers.c **** BaseType_t xResult;
 888:./freertos/src/timers.c **** 
 889:./freertos/src/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 890:./freertos/src/timers.c **** 	If there are any timers still referenced from the current timer list
 891:./freertos/src/timers.c **** 	then they must have expired and should be processed before the lists
 892:./freertos/src/timers.c **** 	are switched. */
 893:./freertos/src/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 1813              		.loc 1 893 7
 1814 0006 49E0     		b	.L119
 1815              	.L123:
 894:./freertos/src/timers.c **** 	{
 895:./freertos/src/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 1816              		.loc 1 895 21
 1817 0008 2E4B     		ldr	r3, .L124
 1818 000a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 52


 1819 000c DB68     		ldr	r3, [r3, #12]
 1820              		.loc 1 895 19
 1821 000e 1B68     		ldr	r3, [r3]
 1822 0010 3B61     		str	r3, [r7, #16]
 896:./freertos/src/timers.c **** 
 897:./freertos/src/timers.c **** 		/* Remove the timer from the list. */
 898:./freertos/src/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 v
 1823              		.loc 1 898 27
 1824 0012 2C4B     		ldr	r3, .L124
 1825 0014 1B68     		ldr	r3, [r3]
 1826 0016 DB68     		ldr	r3, [r3, #12]
 1827              		.loc 1 898 11
 1828 0018 DB68     		ldr	r3, [r3, #12]
 1829 001a FB60     		str	r3, [r7, #12]
 899:./freertos/src/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 1830              		.loc 1 899 12
 1831 001c FB68     		ldr	r3, [r7, #12]
 1832 001e 0433     		adds	r3, r3, #4
 1833 0020 1846     		mov	r0, r3
 1834 0022 FFF7FEFF 		bl	uxListRemove
 900:./freertos/src/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 901:./freertos/src/timers.c **** 
 902:./freertos/src/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 903:./freertos/src/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 904:./freertos/src/timers.c **** 		have not yet been switched. */
 905:./freertos/src/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 1835              		.loc 1 905 10
 1836 0026 FB68     		ldr	r3, [r7, #12]
 1837 0028 1B6A     		ldr	r3, [r3, #32]
 1838              		.loc 1 905 3
 1839 002a F868     		ldr	r0, [r7, #12]
 1840 002c 9847     		blx	r3
 1841              	.LVL2:
 906:./freertos/src/timers.c **** 
 907:./freertos/src/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 1842              		.loc 1 907 16
 1843 002e FB68     		ldr	r3, [r7, #12]
 1844 0030 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1845              		.loc 1 907 27
 1846 0034 03F00403 		and	r3, r3, #4
 1847              		.loc 1 907 5
 1848 0038 002B     		cmp	r3, #0
 1849 003a 2FD0     		beq	.L119
 908:./freertos/src/timers.c **** 		{
 909:./freertos/src/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 910:./freertos/src/timers.c **** 			the timer going into the same timer list then it has already expired
 911:./freertos/src/timers.c **** 			and the timer should be re-inserted into the current list so it is
 912:./freertos/src/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 913:./freertos/src/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 914:./freertos/src/timers.c **** 			the lists have been swapped. */
 915:./freertos/src/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 1850              		.loc 1 915 45
 1851 003c FB68     		ldr	r3, [r7, #12]
 1852 003e 9B69     		ldr	r3, [r3, #24]
 1853              		.loc 1 915 16
 1854 0040 3A69     		ldr	r2, [r7, #16]
 1855 0042 1344     		add	r3, r3, r2
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 53


 1856 0044 BB60     		str	r3, [r7, #8]
 916:./freertos/src/timers.c **** 			if( xReloadTime > xNextExpireTime )
 1857              		.loc 1 916 6
 1858 0046 BA68     		ldr	r2, [r7, #8]
 1859 0048 3B69     		ldr	r3, [r7, #16]
 1860 004a 9A42     		cmp	r2, r3
 1861 004c 0ED9     		bls	.L120
 917:./freertos/src/timers.c **** 			{
 918:./freertos/src/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 1862              		.loc 1 918 5
 1863 004e FB68     		ldr	r3, [r7, #12]
 1864 0050 BA68     		ldr	r2, [r7, #8]
 1865 0052 5A60     		str	r2, [r3, #4]
 919:./freertos/src/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 1866              		.loc 1 919 5
 1867 0054 FB68     		ldr	r3, [r7, #12]
 1868 0056 FA68     		ldr	r2, [r7, #12]
 1869 0058 1A61     		str	r2, [r3, #16]
 920:./freertos/src/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 1870              		.loc 1 920 5
 1871 005a 1A4B     		ldr	r3, .L124
 1872 005c 1A68     		ldr	r2, [r3]
 1873 005e FB68     		ldr	r3, [r7, #12]
 1874 0060 0433     		adds	r3, r3, #4
 1875 0062 1946     		mov	r1, r3
 1876 0064 1046     		mov	r0, r2
 1877 0066 FFF7FEFF 		bl	vListInsert
 1878 006a 17E0     		b	.L119
 1879              	.L120:
 921:./freertos/src/timers.c **** 			}
 922:./freertos/src/timers.c **** 			else
 923:./freertos/src/timers.c **** 			{
 924:./freertos/src/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 1880              		.loc 1 924 15
 1881 006c 0023     		movs	r3, #0
 1882 006e 0093     		str	r3, [sp]
 1883 0070 0023     		movs	r3, #0
 1884 0072 3A69     		ldr	r2, [r7, #16]
 1885 0074 0021     		movs	r1, #0
 1886 0076 F868     		ldr	r0, [r7, #12]
 1887 0078 FFF7FEFF 		bl	xTimerGenericCommand
 1888 007c 7860     		str	r0, [r7, #4]
 925:./freertos/src/timers.c **** 				configASSERT( xResult );
 1889              		.loc 1 925 5
 1890 007e 7B68     		ldr	r3, [r7, #4]
 1891 0080 002B     		cmp	r3, #0
 1892 0082 0BD1     		bne	.L119
 1893              	.LBB58:
 1894              	.LBB59:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1895              		.loc 2 197 2
 1896              		.syntax unified
 1897              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 1898 0084 4FF05003 			mov r3, #80												
 1899 0088 83F31188 		msr basepri, r3											
 1900 008c BFF36F8F 		isb														
 1901 0090 BFF34F8F 		dsb														
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 54


 1902              	
 1903              	@ 0 "" 2
 1904              		.thumb
 1905              		.syntax unified
 1906 0094 3B60     		str	r3, [r7]
 1907              		.loc 2 205 1
 1908 0096 00BF     		nop
 1909              	.L122:
 1910              	.LBE59:
 1911              	.LBE58:
 1912              		.loc 1 925 5
 1913 0098 00BF     		nop
 1914 009a FDE7     		b	.L122
 1915              	.L119:
 893:./freertos/src/timers.c **** 	{
 1916              		.loc 1 893 9
 1917 009c 094B     		ldr	r3, .L124
 1918 009e 1B68     		ldr	r3, [r3]
 1919 00a0 1B68     		ldr	r3, [r3]
 893:./freertos/src/timers.c **** 	{
 1920              		.loc 1 893 49
 1921 00a2 002B     		cmp	r3, #0
 1922 00a4 B0D1     		bne	.L123
 926:./freertos/src/timers.c **** 				( void ) xResult;
 927:./freertos/src/timers.c **** 			}
 928:./freertos/src/timers.c **** 		}
 929:./freertos/src/timers.c **** 		else
 930:./freertos/src/timers.c **** 		{
 931:./freertos/src/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 932:./freertos/src/timers.c **** 		}
 933:./freertos/src/timers.c **** 	}
 934:./freertos/src/timers.c **** 
 935:./freertos/src/timers.c **** 	pxTemp = pxCurrentTimerList;
 1923              		.loc 1 935 9
 1924 00a6 074B     		ldr	r3, .L124
 1925 00a8 1B68     		ldr	r3, [r3]
 1926 00aa 7B61     		str	r3, [r7, #20]
 936:./freertos/src/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 1927              		.loc 1 936 21
 1928 00ac 064B     		ldr	r3, .L124+4
 1929 00ae 1B68     		ldr	r3, [r3]
 1930 00b0 044A     		ldr	r2, .L124
 1931 00b2 1360     		str	r3, [r2]
 937:./freertos/src/timers.c **** 	pxOverflowTimerList = pxTemp;
 1932              		.loc 1 937 22
 1933 00b4 044A     		ldr	r2, .L124+4
 1934 00b6 7B69     		ldr	r3, [r7, #20]
 1935 00b8 1360     		str	r3, [r2]
 938:./freertos/src/timers.c **** }
 1936              		.loc 1 938 1
 1937 00ba 00BF     		nop
 1938 00bc 1837     		adds	r7, r7, #24
 1939              	.LCFI91:
 1940              		.cfi_def_cfa_offset 8
 1941 00be BD46     		mov	sp, r7
 1942              	.LCFI92:
 1943              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 55


 1944              		@ sp needed
 1945 00c0 80BD     		pop	{r7, pc}
 1946              	.L125:
 1947 00c2 00BF     		.align	2
 1948              	.L124:
 1949 00c4 00000000 		.word	pxCurrentTimerList
 1950 00c8 00000000 		.word	pxOverflowTimerList
 1951              		.cfi_endproc
 1952              	.LFE78:
 1954              		.section	.rodata
 1955              		.align	2
 1956              	.LC1:
 1957 0008 546D7251 		.ascii	"TmrQ\000"
 1957      00
 1958              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 1959              		.align	1
 1960              		.syntax unified
 1961              		.thumb
 1962              		.thumb_func
 1964              	prvCheckForValidListAndQueue:
 1965              	.LFB79:
 939:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 940:./freertos/src/timers.c **** 
 941:./freertos/src/timers.c **** static void prvCheckForValidListAndQueue( void )
 942:./freertos/src/timers.c **** {
 1966              		.loc 1 942 1
 1967              		.cfi_startproc
 1968              		@ args = 0, pretend = 0, frame = 0
 1969              		@ frame_needed = 1, uses_anonymous_args = 0
 1970 0000 80B5     		push	{r7, lr}
 1971              	.LCFI93:
 1972              		.cfi_def_cfa_offset 8
 1973              		.cfi_offset 7, -8
 1974              		.cfi_offset 14, -4
 1975 0002 00AF     		add	r7, sp, #0
 1976              	.LCFI94:
 1977              		.cfi_def_cfa_register 7
 943:./freertos/src/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 944:./freertos/src/timers.c **** 	queue used to communicate with the timer service, have been
 945:./freertos/src/timers.c **** 	initialised. */
 946:./freertos/src/timers.c **** 	taskENTER_CRITICAL();
 1978              		.loc 1 946 2
 1979 0004 FFF7FEFF 		bl	vPortEnterCritical
 947:./freertos/src/timers.c **** 	{
 948:./freertos/src/timers.c **** 		if( xTimerQueue == NULL )
 1980              		.loc 1 948 19
 1981 0008 124B     		ldr	r3, .L128
 1982 000a 1B68     		ldr	r3, [r3]
 1983              		.loc 1 948 5
 1984 000c 002B     		cmp	r3, #0
 1985 000e 1DD1     		bne	.L127
 949:./freertos/src/timers.c **** 		{
 950:./freertos/src/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 1986              		.loc 1 950 4
 1987 0010 1148     		ldr	r0, .L128+4
 1988 0012 FFF7FEFF 		bl	vListInitialise
 951:./freertos/src/timers.c **** 			vListInitialise( &xActiveTimerList2 );
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 56


 1989              		.loc 1 951 4
 1990 0016 1148     		ldr	r0, .L128+8
 1991 0018 FFF7FEFF 		bl	vListInitialise
 952:./freertos/src/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 1992              		.loc 1 952 23
 1993 001c 104B     		ldr	r3, .L128+12
 1994 001e 0E4A     		ldr	r2, .L128+4
 1995 0020 1A60     		str	r2, [r3]
 953:./freertos/src/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 1996              		.loc 1 953 24
 1997 0022 104B     		ldr	r3, .L128+16
 1998 0024 0D4A     		ldr	r2, .L128+8
 1999 0026 1A60     		str	r2, [r3]
 954:./freertos/src/timers.c **** 
 955:./freertos/src/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 956:./freertos/src/timers.c **** 			{
 957:./freertos/src/timers.c **** 				/* The timer queue is allocated statically in case
 958:./freertos/src/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 959:./freertos/src/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
 960:./freertos/src/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 961:./freertos/src/timers.c **** 
 962:./freertos/src/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 963:./freertos/src/timers.c **** 			}
 964:./freertos/src/timers.c **** 			#else
 965:./freertos/src/timers.c **** 			{
 966:./freertos/src/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 2000              		.loc 1 966 19
 2001 0028 0022     		movs	r2, #0
 2002 002a 0C21     		movs	r1, #12
 2003 002c 0A20     		movs	r0, #10
 2004 002e FFF7FEFF 		bl	xQueueGenericCreate
 2005 0032 0346     		mov	r3, r0
 2006              		.loc 1 966 17 discriminator 1
 2007 0034 074A     		ldr	r2, .L128
 2008 0036 1360     		str	r3, [r2]
 967:./freertos/src/timers.c **** 			}
 968:./freertos/src/timers.c **** 			#endif
 969:./freertos/src/timers.c **** 
 970:./freertos/src/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 971:./freertos/src/timers.c **** 			{
 972:./freertos/src/timers.c **** 				if( xTimerQueue != NULL )
 2009              		.loc 1 972 21
 2010 0038 064B     		ldr	r3, .L128
 2011 003a 1B68     		ldr	r3, [r3]
 2012              		.loc 1 972 7
 2013 003c 002B     		cmp	r3, #0
 2014 003e 05D0     		beq	.L127
 973:./freertos/src/timers.c **** 				{
 974:./freertos/src/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 2015              		.loc 1 974 6
 2016 0040 044B     		ldr	r3, .L128
 2017 0042 1B68     		ldr	r3, [r3]
 2018 0044 0849     		ldr	r1, .L128+20
 2019 0046 1846     		mov	r0, r3
 2020 0048 FFF7FEFF 		bl	vQueueAddToRegistry
 2021              	.L127:
 975:./freertos/src/timers.c **** 				}
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 57


 976:./freertos/src/timers.c **** 				else
 977:./freertos/src/timers.c **** 				{
 978:./freertos/src/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 979:./freertos/src/timers.c **** 				}
 980:./freertos/src/timers.c **** 			}
 981:./freertos/src/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 982:./freertos/src/timers.c **** 		}
 983:./freertos/src/timers.c **** 		else
 984:./freertos/src/timers.c **** 		{
 985:./freertos/src/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 986:./freertos/src/timers.c **** 		}
 987:./freertos/src/timers.c **** 	}
 988:./freertos/src/timers.c **** 	taskEXIT_CRITICAL();
 2022              		.loc 1 988 2
 2023 004c FFF7FEFF 		bl	vPortExitCritical
 989:./freertos/src/timers.c **** }
 2024              		.loc 1 989 1
 2025 0050 00BF     		nop
 2026 0052 80BD     		pop	{r7, pc}
 2027              	.L129:
 2028              		.align	2
 2029              	.L128:
 2030 0054 00000000 		.word	xTimerQueue
 2031 0058 00000000 		.word	xActiveTimerList1
 2032 005c 00000000 		.word	xActiveTimerList2
 2033 0060 00000000 		.word	pxCurrentTimerList
 2034 0064 00000000 		.word	pxOverflowTimerList
 2035 0068 08000000 		.word	.LC1
 2036              		.cfi_endproc
 2037              	.LFE79:
 2039              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 2040              		.align	1
 2041              		.global	xTimerIsTimerActive
 2042              		.syntax unified
 2043              		.thumb
 2044              		.thumb_func
 2046              	xTimerIsTimerActive:
 2047              	.LFB80:
 990:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
 991:./freertos/src/timers.c **** 
 992:./freertos/src/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 993:./freertos/src/timers.c **** {
 2048              		.loc 1 993 1
 2049              		.cfi_startproc
 2050              		@ args = 0, pretend = 0, frame = 24
 2051              		@ frame_needed = 1, uses_anonymous_args = 0
 2052 0000 80B5     		push	{r7, lr}
 2053              	.LCFI95:
 2054              		.cfi_def_cfa_offset 8
 2055              		.cfi_offset 7, -8
 2056              		.cfi_offset 14, -4
 2057 0002 86B0     		sub	sp, sp, #24
 2058              	.LCFI96:
 2059              		.cfi_def_cfa_offset 32
 2060 0004 00AF     		add	r7, sp, #0
 2061              	.LCFI97:
 2062              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 58


 2063 0006 7860     		str	r0, [r7, #4]
 994:./freertos/src/timers.c **** BaseType_t xReturn;
 995:./freertos/src/timers.c **** Timer_t *pxTimer = xTimer;
 2064              		.loc 1 995 10
 2065 0008 7B68     		ldr	r3, [r7, #4]
 2066 000a 3B61     		str	r3, [r7, #16]
 996:./freertos/src/timers.c **** 
 997:./freertos/src/timers.c **** 	configASSERT( xTimer );
 2067              		.loc 1 997 2
 2068 000c 7B68     		ldr	r3, [r7, #4]
 2069 000e 002B     		cmp	r3, #0
 2070 0010 0BD1     		bne	.L131
 2071              	.LBB60:
 2072              	.LBB61:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2073              		.loc 2 197 2
 2074              		.syntax unified
 2075              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 2076 0012 4FF05003 			mov r3, #80												
 2077 0016 83F31188 		msr basepri, r3											
 2078 001a BFF36F8F 		isb														
 2079 001e BFF34F8F 		dsb														
 2080              	
 2081              	@ 0 "" 2
 2082              		.thumb
 2083              		.syntax unified
 2084 0022 FB60     		str	r3, [r7, #12]
 2085              		.loc 2 205 1
 2086 0024 00BF     		nop
 2087              	.L132:
 2088              	.LBE61:
 2089              	.LBE60:
 2090              		.loc 1 997 2
 2091 0026 00BF     		nop
 2092 0028 FDE7     		b	.L132
 2093              	.L131:
 998:./freertos/src/timers.c **** 
 999:./freertos/src/timers.c **** 	/* Is the timer in the list of active timers? */
1000:./freertos/src/timers.c **** 	taskENTER_CRITICAL();
 2094              		.loc 1 1000 2
 2095 002a FFF7FEFF 		bl	vPortEnterCritical
1001:./freertos/src/timers.c **** 	{
1002:./freertos/src/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0 )
 2096              		.loc 1 1002 16
 2097 002e 3B69     		ldr	r3, [r7, #16]
 2098 0030 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 2099              		.loc 1 1002 27
 2100 0034 03F00103 		and	r3, r3, #1
 2101              		.loc 1 1002 5
 2102 0038 002B     		cmp	r3, #0
 2103 003a 02D1     		bne	.L133
1003:./freertos/src/timers.c **** 		{
1004:./freertos/src/timers.c **** 			xReturn = pdFALSE;
 2104              		.loc 1 1004 12
 2105 003c 0023     		movs	r3, #0
 2106 003e 7B61     		str	r3, [r7, #20]
 2107 0040 01E0     		b	.L134
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 59


 2108              	.L133:
1005:./freertos/src/timers.c **** 		}
1006:./freertos/src/timers.c **** 		else
1007:./freertos/src/timers.c **** 		{
1008:./freertos/src/timers.c **** 			xReturn = pdTRUE;
 2109              		.loc 1 1008 12
 2110 0042 0123     		movs	r3, #1
 2111 0044 7B61     		str	r3, [r7, #20]
 2112              	.L134:
1009:./freertos/src/timers.c **** 		}
1010:./freertos/src/timers.c **** 	}
1011:./freertos/src/timers.c **** 	taskEXIT_CRITICAL();
 2113              		.loc 1 1011 2
 2114 0046 FFF7FEFF 		bl	vPortExitCritical
1012:./freertos/src/timers.c **** 
1013:./freertos/src/timers.c **** 	return xReturn;
 2115              		.loc 1 1013 9
 2116 004a 7B69     		ldr	r3, [r7, #20]
1014:./freertos/src/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 2117              		.loc 1 1014 1
 2118 004c 1846     		mov	r0, r3
 2119 004e 1837     		adds	r7, r7, #24
 2120              	.LCFI98:
 2121              		.cfi_def_cfa_offset 8
 2122 0050 BD46     		mov	sp, r7
 2123              	.LCFI99:
 2124              		.cfi_def_cfa_register 13
 2125              		@ sp needed
 2126 0052 80BD     		pop	{r7, pc}
 2127              		.cfi_endproc
 2128              	.LFE80:
 2130              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 2131              		.align	1
 2132              		.global	pvTimerGetTimerID
 2133              		.syntax unified
 2134              		.thumb
 2135              		.thumb_func
 2137              	pvTimerGetTimerID:
 2138              	.LFB81:
1015:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
1016:./freertos/src/timers.c **** 
1017:./freertos/src/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
1018:./freertos/src/timers.c **** {
 2139              		.loc 1 1018 1
 2140              		.cfi_startproc
 2141              		@ args = 0, pretend = 0, frame = 24
 2142              		@ frame_needed = 1, uses_anonymous_args = 0
 2143 0000 80B5     		push	{r7, lr}
 2144              	.LCFI100:
 2145              		.cfi_def_cfa_offset 8
 2146              		.cfi_offset 7, -8
 2147              		.cfi_offset 14, -4
 2148 0002 86B0     		sub	sp, sp, #24
 2149              	.LCFI101:
 2150              		.cfi_def_cfa_offset 32
 2151 0004 00AF     		add	r7, sp, #0
 2152              	.LCFI102:
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 60


 2153              		.cfi_def_cfa_register 7
 2154 0006 7860     		str	r0, [r7, #4]
1019:./freertos/src/timers.c **** Timer_t * const pxTimer = xTimer;
 2155              		.loc 1 1019 17
 2156 0008 7B68     		ldr	r3, [r7, #4]
 2157 000a 7B61     		str	r3, [r7, #20]
1020:./freertos/src/timers.c **** void *pvReturn;
1021:./freertos/src/timers.c **** 
1022:./freertos/src/timers.c **** 	configASSERT( xTimer );
 2158              		.loc 1 1022 2
 2159 000c 7B68     		ldr	r3, [r7, #4]
 2160 000e 002B     		cmp	r3, #0
 2161 0010 0BD1     		bne	.L137
 2162              	.LBB62:
 2163              	.LBB63:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2164              		.loc 2 197 2
 2165              		.syntax unified
 2166              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 2167 0012 4FF05003 			mov r3, #80												
 2168 0016 83F31188 		msr basepri, r3											
 2169 001a BFF36F8F 		isb														
 2170 001e BFF34F8F 		dsb														
 2171              	
 2172              	@ 0 "" 2
 2173              		.thumb
 2174              		.syntax unified
 2175 0022 FB60     		str	r3, [r7, #12]
 2176              		.loc 2 205 1
 2177 0024 00BF     		nop
 2178              	.L138:
 2179              	.LBE63:
 2180              	.LBE62:
 2181              		.loc 1 1022 2
 2182 0026 00BF     		nop
 2183 0028 FDE7     		b	.L138
 2184              	.L137:
1023:./freertos/src/timers.c **** 
1024:./freertos/src/timers.c **** 	taskENTER_CRITICAL();
 2185              		.loc 1 1024 2
 2186 002a FFF7FEFF 		bl	vPortEnterCritical
1025:./freertos/src/timers.c **** 	{
1026:./freertos/src/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 2187              		.loc 1 1026 12
 2188 002e 7B69     		ldr	r3, [r7, #20]
 2189 0030 DB69     		ldr	r3, [r3, #28]
 2190 0032 3B61     		str	r3, [r7, #16]
1027:./freertos/src/timers.c **** 	}
1028:./freertos/src/timers.c **** 	taskEXIT_CRITICAL();
 2191              		.loc 1 1028 2
 2192 0034 FFF7FEFF 		bl	vPortExitCritical
1029:./freertos/src/timers.c **** 
1030:./freertos/src/timers.c **** 	return pvReturn;
 2193              		.loc 1 1030 9
 2194 0038 3B69     		ldr	r3, [r7, #16]
1031:./freertos/src/timers.c **** }
 2195              		.loc 1 1031 1
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 61


 2196 003a 1846     		mov	r0, r3
 2197 003c 1837     		adds	r7, r7, #24
 2198              	.LCFI103:
 2199              		.cfi_def_cfa_offset 8
 2200 003e BD46     		mov	sp, r7
 2201              	.LCFI104:
 2202              		.cfi_def_cfa_register 13
 2203              		@ sp needed
 2204 0040 80BD     		pop	{r7, pc}
 2205              		.cfi_endproc
 2206              	.LFE81:
 2208              		.section	.text.vTimerSetTimerID,"ax",%progbits
 2209              		.align	1
 2210              		.global	vTimerSetTimerID
 2211              		.syntax unified
 2212              		.thumb
 2213              		.thumb_func
 2215              	vTimerSetTimerID:
 2216              	.LFB82:
1032:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
1033:./freertos/src/timers.c **** 
1034:./freertos/src/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
1035:./freertos/src/timers.c **** {
 2217              		.loc 1 1035 1
 2218              		.cfi_startproc
 2219              		@ args = 0, pretend = 0, frame = 16
 2220              		@ frame_needed = 1, uses_anonymous_args = 0
 2221 0000 80B5     		push	{r7, lr}
 2222              	.LCFI105:
 2223              		.cfi_def_cfa_offset 8
 2224              		.cfi_offset 7, -8
 2225              		.cfi_offset 14, -4
 2226 0002 84B0     		sub	sp, sp, #16
 2227              	.LCFI106:
 2228              		.cfi_def_cfa_offset 24
 2229 0004 00AF     		add	r7, sp, #0
 2230              	.LCFI107:
 2231              		.cfi_def_cfa_register 7
 2232 0006 7860     		str	r0, [r7, #4]
 2233 0008 3960     		str	r1, [r7]
1036:./freertos/src/timers.c **** Timer_t * const pxTimer = xTimer;
 2234              		.loc 1 1036 17
 2235 000a 7B68     		ldr	r3, [r7, #4]
 2236 000c FB60     		str	r3, [r7, #12]
1037:./freertos/src/timers.c **** 
1038:./freertos/src/timers.c **** 	configASSERT( xTimer );
 2237              		.loc 1 1038 2
 2238 000e 7B68     		ldr	r3, [r7, #4]
 2239 0010 002B     		cmp	r3, #0
 2240 0012 0BD1     		bne	.L141
 2241              	.LBB64:
 2242              	.LBB65:
 197:./freertos/src/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2243              		.loc 2 197 2
 2244              		.syntax unified
 2245              	@ 197 "./freertos/src/portable/GCC/ARM_CM3/portmacro.h" 1
 2246 0014 4FF05003 			mov r3, #80												
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 62


 2247 0018 83F31188 		msr basepri, r3											
 2248 001c BFF36F8F 		isb														
 2249 0020 BFF34F8F 		dsb														
 2250              	
 2251              	@ 0 "" 2
 2252              		.thumb
 2253              		.syntax unified
 2254 0024 BB60     		str	r3, [r7, #8]
 2255              		.loc 2 205 1
 2256 0026 00BF     		nop
 2257              	.L142:
 2258              	.LBE65:
 2259              	.LBE64:
 2260              		.loc 1 1038 2
 2261 0028 00BF     		nop
 2262 002a FDE7     		b	.L142
 2263              	.L141:
1039:./freertos/src/timers.c **** 
1040:./freertos/src/timers.c **** 	taskENTER_CRITICAL();
 2264              		.loc 1 1040 2
 2265 002c FFF7FEFF 		bl	vPortEnterCritical
1041:./freertos/src/timers.c **** 	{
1042:./freertos/src/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 2266              		.loc 1 1042 22
 2267 0030 FB68     		ldr	r3, [r7, #12]
 2268 0032 3A68     		ldr	r2, [r7]
 2269 0034 DA61     		str	r2, [r3, #28]
1043:./freertos/src/timers.c **** 	}
1044:./freertos/src/timers.c **** 	taskEXIT_CRITICAL();
 2270              		.loc 1 1044 2
 2271 0036 FFF7FEFF 		bl	vPortExitCritical
1045:./freertos/src/timers.c **** }
 2272              		.loc 1 1045 1
 2273 003a 00BF     		nop
 2274 003c 1037     		adds	r7, r7, #16
 2275              	.LCFI108:
 2276              		.cfi_def_cfa_offset 8
 2277 003e BD46     		mov	sp, r7
 2278              	.LCFI109:
 2279              		.cfi_def_cfa_register 13
 2280              		@ sp needed
 2281 0040 80BD     		pop	{r7, pc}
 2282              		.cfi_endproc
 2283              	.LFE82:
 2285              		.section	.text.uxTimerGetTimerNumber,"ax",%progbits
 2286              		.align	1
 2287              		.global	uxTimerGetTimerNumber
 2288              		.syntax unified
 2289              		.thumb
 2290              		.thumb_func
 2292              	uxTimerGetTimerNumber:
 2293              	.LFB83:
1046:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
1047:./freertos/src/timers.c **** 
1048:./freertos/src/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1049:./freertos/src/timers.c **** 
1050:./freertos/src/timers.c **** 	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, ui
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 63


1051:./freertos/src/timers.c **** 	{
1052:./freertos/src/timers.c **** 	DaemonTaskMessage_t xMessage;
1053:./freertos/src/timers.c **** 	BaseType_t xReturn;
1054:./freertos/src/timers.c **** 
1055:./freertos/src/timers.c **** 		/* Complete the message with the function parameters and post it to the
1056:./freertos/src/timers.c **** 		daemon task. */
1057:./freertos/src/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
1058:./freertos/src/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
1059:./freertos/src/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
1060:./freertos/src/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
1061:./freertos/src/timers.c **** 
1062:./freertos/src/timers.c **** 		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
1063:./freertos/src/timers.c **** 
1064:./freertos/src/timers.c **** 		tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1065:./freertos/src/timers.c **** 
1066:./freertos/src/timers.c **** 		return xReturn;
1067:./freertos/src/timers.c **** 	}
1068:./freertos/src/timers.c **** 
1069:./freertos/src/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1070:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
1071:./freertos/src/timers.c **** 
1072:./freertos/src/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1073:./freertos/src/timers.c **** 
1074:./freertos/src/timers.c **** 	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t 
1075:./freertos/src/timers.c **** 	{
1076:./freertos/src/timers.c **** 	DaemonTaskMessage_t xMessage;
1077:./freertos/src/timers.c **** 	BaseType_t xReturn;
1078:./freertos/src/timers.c **** 
1079:./freertos/src/timers.c **** 		/* This function can only be called after a timer has been created or
1080:./freertos/src/timers.c **** 		after the scheduler has been started because, until then, the timer
1081:./freertos/src/timers.c **** 		queue does not exist. */
1082:./freertos/src/timers.c **** 		configASSERT( xTimerQueue );
1083:./freertos/src/timers.c **** 
1084:./freertos/src/timers.c **** 		/* Complete the message with the function parameters and post it to the
1085:./freertos/src/timers.c **** 		daemon task. */
1086:./freertos/src/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
1087:./freertos/src/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
1088:./freertos/src/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
1089:./freertos/src/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
1090:./freertos/src/timers.c **** 
1091:./freertos/src/timers.c **** 		xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
1092:./freertos/src/timers.c **** 
1093:./freertos/src/timers.c **** 		tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1094:./freertos/src/timers.c **** 
1095:./freertos/src/timers.c **** 		return xReturn;
1096:./freertos/src/timers.c **** 	}
1097:./freertos/src/timers.c **** 
1098:./freertos/src/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1099:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
1100:./freertos/src/timers.c **** 
1101:./freertos/src/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1102:./freertos/src/timers.c **** 
1103:./freertos/src/timers.c **** 	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1104:./freertos/src/timers.c **** 	{
 2294              		.loc 1 1104 2
 2295              		.cfi_startproc
 2296              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 64


 2297              		@ frame_needed = 1, uses_anonymous_args = 0
 2298              		@ link register save eliminated.
 2299 0000 80B4     		push	{r7}
 2300              	.LCFI110:
 2301              		.cfi_def_cfa_offset 4
 2302              		.cfi_offset 7, -4
 2303 0002 83B0     		sub	sp, sp, #12
 2304              	.LCFI111:
 2305              		.cfi_def_cfa_offset 16
 2306 0004 00AF     		add	r7, sp, #0
 2307              	.LCFI112:
 2308              		.cfi_def_cfa_register 7
 2309 0006 7860     		str	r0, [r7, #4]
1105:./freertos/src/timers.c **** 		return ( ( Timer_t * ) xTimer )->uxTimerNumber;
 2310              		.loc 1 1105 34
 2311 0008 7B68     		ldr	r3, [r7, #4]
 2312 000a 5B6A     		ldr	r3, [r3, #36]
1106:./freertos/src/timers.c **** 	}
 2313              		.loc 1 1106 2
 2314 000c 1846     		mov	r0, r3
 2315 000e 0C37     		adds	r7, r7, #12
 2316              	.LCFI113:
 2317              		.cfi_def_cfa_offset 4
 2318 0010 BD46     		mov	sp, r7
 2319              	.LCFI114:
 2320              		.cfi_def_cfa_register 13
 2321              		@ sp needed
 2322 0012 80BC     		pop	{r7}
 2323              	.LCFI115:
 2324              		.cfi_restore 7
 2325              		.cfi_def_cfa_offset 0
 2326 0014 7047     		bx	lr
 2327              		.cfi_endproc
 2328              	.LFE83:
 2330              		.section	.text.vTimerSetTimerNumber,"ax",%progbits
 2331              		.align	1
 2332              		.global	vTimerSetTimerNumber
 2333              		.syntax unified
 2334              		.thumb
 2335              		.thumb_func
 2337              	vTimerSetTimerNumber:
 2338              	.LFB84:
1107:./freertos/src/timers.c **** 
1108:./freertos/src/timers.c **** #endif /* configUSE_TRACE_FACILITY */
1109:./freertos/src/timers.c **** /*-----------------------------------------------------------*/
1110:./freertos/src/timers.c **** 
1111:./freertos/src/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1112:./freertos/src/timers.c **** 
1113:./freertos/src/timers.c **** 	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )
1114:./freertos/src/timers.c **** 	{
 2339              		.loc 1 1114 2
 2340              		.cfi_startproc
 2341              		@ args = 0, pretend = 0, frame = 8
 2342              		@ frame_needed = 1, uses_anonymous_args = 0
 2343              		@ link register save eliminated.
 2344 0000 80B4     		push	{r7}
 2345              	.LCFI116:
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 65


 2346              		.cfi_def_cfa_offset 4
 2347              		.cfi_offset 7, -4
 2348 0002 83B0     		sub	sp, sp, #12
 2349              	.LCFI117:
 2350              		.cfi_def_cfa_offset 16
 2351 0004 00AF     		add	r7, sp, #0
 2352              	.LCFI118:
 2353              		.cfi_def_cfa_register 7
 2354 0006 7860     		str	r0, [r7, #4]
 2355 0008 3960     		str	r1, [r7]
1115:./freertos/src/timers.c **** 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 2356              		.loc 1 1115 43
 2357 000a 7B68     		ldr	r3, [r7, #4]
 2358 000c 3A68     		ldr	r2, [r7]
 2359 000e 5A62     		str	r2, [r3, #36]
1116:./freertos/src/timers.c **** 	}
 2360              		.loc 1 1116 2
 2361 0010 00BF     		nop
 2362 0012 0C37     		adds	r7, r7, #12
 2363              	.LCFI119:
 2364              		.cfi_def_cfa_offset 4
 2365 0014 BD46     		mov	sp, r7
 2366              	.LCFI120:
 2367              		.cfi_def_cfa_register 13
 2368              		@ sp needed
 2369 0016 80BC     		pop	{r7}
 2370              	.LCFI121:
 2371              		.cfi_restore 7
 2372              		.cfi_def_cfa_offset 0
 2373 0018 7047     		bx	lr
 2374              		.cfi_endproc
 2375              	.LFE84:
 2377              		.section	.bss.xLastTime.0,"aw",%nobits
 2378              		.align	2
 2381              	xLastTime.0:
 2382 0000 00000000 		.space	4
 2383              		.text
 2384              	.Letext0:
 2385              		.file 3 "C:/arm-toolchain/14.3/lib/gcc/arm-none-eabi/14.3.1/include/stddef.h"
 2386              		.file 4 "C:/arm-toolchain/14.3/arm-none-eabi/include/machine/_default_types.h"
 2387              		.file 5 "C:/arm-toolchain/14.3/arm-none-eabi/include/sys/_stdint.h"
 2388              		.file 6 "./freertos/inc/projdefs.h"
 2389              		.file 7 "./freertos/inc/list.h"
 2390              		.file 8 "./freertos/inc/task.h"
 2391              		.file 9 "./freertos/inc/queue.h"
 2392              		.file 10 "./freertos/inc/timers.h"
 2393              		.file 11 "./freertos/inc/portable.h"
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 66


DEFINED SYMBOLS
                            *ABS*:00000000 timers.c
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:19     .bss.xActiveTimerList1:00000000 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:22     .bss.xActiveTimerList1:00000000 xActiveTimerList1
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:25     .bss.xActiveTimerList2:00000000 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:28     .bss.xActiveTimerList2:00000000 xActiveTimerList2
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:31     .bss.pxCurrentTimerList:00000000 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:34     .bss.pxCurrentTimerList:00000000 pxCurrentTimerList
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:37     .bss.pxOverflowTimerList:00000000 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:40     .bss.pxOverflowTimerList:00000000 pxOverflowTimerList
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:43     .bss.xTimerQueue:00000000 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:46     .bss.xTimerQueue:00000000 xTimerQueue
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:49     .bss.xTimerTaskHandle:00000000 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:52     .bss.xTimerTaskHandle:00000000 xTimerTaskHandle
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:55     .rodata:00000000 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:59     .text.xTimerCreateTimerTask:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:65     .text.xTimerCreateTimerTask:00000000 xTimerCreateTimerTask
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1964   .text.prvCheckForValidListAndQueue:00000000 prvCheckForValidListAndQueue
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:148    .text.xTimerCreateTimerTask:00000058 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1084   .text.prvTimerTask:00000000 prvTimerTask
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:156    .text.xTimerCreate:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:162    .text.xTimerCreate:00000000 xTimerCreate
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:227    .text.prvInitialiseNewTimer:00000000 prvInitialiseNewTimer
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:222    .text.prvInitialiseNewTimer:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:329    .text.xTimerGenericCommand:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:335    .text.xTimerGenericCommand:00000000 xTimerGenericCommand
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:455    .text.xTimerGenericCommand:00000098 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:460    .text.xTimerGetTimerDaemonTaskHandle:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:466    .text.xTimerGetTimerDaemonTaskHandle:00000000 xTimerGetTimerDaemonTaskHandle
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:531    .text.xTimerGetTimerDaemonTaskHandle:00000034 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:536    .text.xTimerGetPeriod:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:542    .text.xTimerGetPeriod:00000000 xTimerGetPeriod
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:611    .text.vTimerSetReloadMode:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:617    .text.vTimerSetReloadMode:00000000 vTimerSetReloadMode
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:707    .text.uxTimerGetReloadMode:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:713    .text.uxTimerGetReloadMode:00000000 uxTimerGetReloadMode
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:798    .text.xTimerGetExpiryTime:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:804    .text.xTimerGetExpiryTime:00000000 xTimerGetExpiryTime
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:876    .text.pcTimerGetName:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:882    .text.pcTimerGetName:00000000 pcTimerGetName
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:951    .text.prvProcessExpiredTimer:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:956    .text.prvProcessExpiredTimer:00000000 prvProcessExpiredTimer
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1407   .text.prvInsertTimerInActiveList:00000000 prvInsertTimerInActiveList
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1074   .text.prvProcessExpiredTimer:00000098 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1079   .text.prvTimerTask:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1255   .text.prvGetNextExpireTime:00000000 prvGetNextExpireTime
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1127   .text.prvProcessTimerOrBlockTask:00000000 prvProcessTimerOrBlockTask
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1519   .text.prvProcessReceivedCommands:00000000 prvProcessReceivedCommands
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1122   .text.prvProcessTimerOrBlockTask:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1337   .text.prvSampleTimeNow:00000000 prvSampleTimeNow
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1243   .text.prvProcessTimerOrBlockTask:00000090 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1250   .text.prvGetNextExpireTime:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1327   .text.prvGetNextExpireTime:00000040 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1332   .text.prvSampleTimeNow:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1796   .text.prvSwitchTimerLists:00000000 prvSwitchTimerLists
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1397   .text.prvSampleTimeNow:0000003c $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:2381   .bss.xLastTime.0:00000000 xLastTime.0
ARM GAS  C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s 			page 67


C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1402   .text.prvInsertTimerInActiveList:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1508   .text.prvInsertTimerInActiveList:0000007c $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1514   .text.prvProcessReceivedCommands:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1573   .text.prvProcessReceivedCommands:00000040 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1583   .text.prvProcessReceivedCommands:00000068 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1786   .text.prvProcessReceivedCommands:00000190 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1791   .text.prvSwitchTimerLists:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1949   .text.prvSwitchTimerLists:000000c4 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:1959   .text.prvCheckForValidListAndQueue:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:2030   .text.prvCheckForValidListAndQueue:00000054 $d
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:2040   .text.xTimerIsTimerActive:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:2046   .text.xTimerIsTimerActive:00000000 xTimerIsTimerActive
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:2131   .text.pvTimerGetTimerID:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:2137   .text.pvTimerGetTimerID:00000000 pvTimerGetTimerID
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:2209   .text.vTimerSetTimerID:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:2215   .text.vTimerSetTimerID:00000000 vTimerSetTimerID
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:2286   .text.uxTimerGetTimerNumber:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:2292   .text.uxTimerGetTimerNumber:00000000 uxTimerGetTimerNumber
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:2331   .text.vTimerSetTimerNumber:00000000 $t
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:2337   .text.vTimerSetTimerNumber:00000000 vTimerSetTimerNumber
C:\Users\PRAETE~1\AppData\Local\Temp\ccmyLims.s:2378   .bss.xLastTime.0:00000000 $d

UNDEFINED SYMBOLS
xTaskCreate
pvPortMalloc
vListInitialiseItem
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
vPortEnterCritical
vPortExitCritical
uxListRemove
vTaskSuspendAll
xTaskResumeAll
vQueueWaitForMessageRestricted
xTaskGetTickCount
vListInsert
vPortFree
xQueueReceive
vListInitialise
xQueueGenericCreate
vQueueAddToRegistry
